{"version":3,"file":"static/js/643.9f4562c4.chunk.js","mappings":"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","sources":["components/Helper/NotifNegative.jsx","components/Helper/NotifPositive.jsx","components/Posts/Post.jsx","components/Posts/Posts.styled.js","components/Posts/EditPost.jsx","components/Helper/ModalWindow.jsx","components/Posts/UserPost.jsx"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { GiShamrock } from 'react-icons/gi';\nimport { WrapNotif } from './Helper.styled';\n\nexport default function NotifNegative({ message, onClose }) {\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      onClose();\n    }, 5000);\n\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [onClose]);\n\n  return (\n    <WrapNotif>\n      <GiShamrock className=\"icon-notif yellow\" />\n      <div className=\"wrap-notif\">\n        <p className=\"title-notif\">Mistake</p>\n        <p className=\"text-notif\">{message}</p>\n      </div>\n    </WrapNotif>\n  );\n}\n","import React, { useEffect } from 'react';\nimport { GiShamrock } from 'react-icons/gi';\nimport { WrapNotif } from './Helper.styled';\n\nexport default function NotifPositive({ message, onClose }) {\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      onClose();\n    }, 5000);\n\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [onClose]);\n  return (\n    <WrapNotif>\n      <GiShamrock className=\"icon-notif green\" />\n      <div className=\"wrap-notif\">\n        <p className=\"title-notif\">Success</p>\n        <p className=\"text-notif\">{message}</p>\n      </div>\n    </WrapNotif>\n  );\n}\n","import React from 'react';\nimport {\n  BsFillBookmarkFill,\n  BsCircleFill,\n  BsChatRightTextFill,\n  BsSendFill,\n  BsThreeDotsVertical,\n} from 'react-icons/bs';\n\nimport {\n  BtnIcons,\n  ForComment,\n  PostText,\n  WrapImgPost,\n  WrapInfo,\n  WrapMain,\n  WrapPost,\n  WrapReviews,\n  WrapTag,\n  WrapTitle,\n} from './Posts.styled';\n\nexport default function Post({ post }) {\n  const date = new Date(post.createdAt);\n  const formattedDate = new Intl.DateTimeFormat('en-US', {\n    day: '2-digit',\n    month: '2-digit',\n    year: 'numeric',\n  })\n    .format(date)\n    .replace(/\\//g, '.');\n  // console.log(formattedDate);\n  return (\n    <WrapPost>\n      <WrapMain>\n        <WrapImgPost>\n          <img src={post.imageUrl} alt={post.title} className=\"img-post\" />\n        </WrapImgPost>\n        <WrapInfo>\n          <WrapTag>\n            <div className=\"tags\">\n              <BsFillBookmarkFill className=\"icon-tag\" />\n              <h4 className=\"post-tag\">{post.tag}</h4>\n            </div>\n            <p className=\"date\">{formattedDate}</p>\n          </WrapTag>\n          <WrapTitle>\n            <BsCircleFill className=\"icon-title\" />\n            <h3 className=\"post-title\">{post.title}</h3>\n          </WrapTitle>\n        </WrapInfo>\n      </WrapMain>\n      <PostText>{post.text}</PostText>\n      <WrapReviews>\n        <BtnIcons>\n          <BsChatRightTextFill className=\"icon coment\" />\n        </BtnIcons>\n        {/* <WrapComment> */}\n        <ForComment />\n        <BtnIcons>\n          <BsSendFill className=\"icon send\" />\n        </BtnIcons>\n        {/* </WrapComment> */}\n        <BtnIcons>\n          <BsThreeDotsVertical className=\"icon dots\" />\n        </BtnIcons>\n      </WrapReviews>\n    </WrapPost>\n  );\n}\n","import { base } from 'baseTheme';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\n// ******* MAIN SETTING *******\nexport const WrapPostPage = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-template-rows: 100vh;\n  justify-content: center;\n  align-items: start;\n  background-color: ${base.colors.ground};\n  padding: 8px;\n  margin: 0 auto;\n  @media screen and (min-width: 480px) {\n    padding: 16px 8px;\n  }\n`;\nexport const WrapList = styled.ul`\n  display: grid;\n  grid-template-columns: minmax(288px, 1fr);\n  grid-template-rows: 1fr;\n  justify-content: start;\n  align-items: center;\n  gap: 16px;\n  padding: 8px;\n  margin: 0 auto;\n  @media screen and (min-width: 480px) {\n    padding: 16px 8px;\n  }\n  @media screen and (min-width: 960px) {\n    grid-template-columns: repeat(2, 1fr);\n    padding: 16px;\n  }\n`;\nexport const WrapPanelPost = styled.li`\n  display: grid;\n  grid-template-columns: minmax(304px, 552px);\n  grid-template-rows: auto auto;\n  gap: 4px;\n  padding: 0;\n  margin: 0 auto;\n`;\nexport const WrapUserPost = styled.li`\n  display: grid;\n  grid-template-columns: minmax(304px, 552px);\n  grid-template-rows: auto;\n  padding: 0;\n  margin: 0 auto;\n`;\nexport const WrapLink = styled(Link)`\n  text-decoration: none;\n  padding: 0;\n  margin: 0;\n`;\n\n// *******   POST USER PANEL *******\nexport const WrapPanel = styled.div`\n  display: grid;\n  grid-template-columns: 272px 1fr;\n  .bgr {\n    display: grid;\n    grid-template-columns: 36px 124px 40px 56px;\n    grid-template-rows: 36px;\n    justify-content: start;\n    align-items: center;\n    gap: 4px;\n    border: none;\n    border-radius: 30px;\n    background-color: #ffffff;\n    padding: 2px 2px;\n    margin: 0;\n  }\n`;\nexport const PanelAvatar = styled.div`\n  display: grid;\n  grid-template-rows: 36px;\n  justify-content: center;\n  align-items: center;\n  border-radius: 50%;\n  background-color: yellow;\n  .img-avatar {\n    width: 32px;\n    height: 32px;\n    border-radius: 50%;\n    object-fit: cover;\n  }\n  .icon-avatar {\n    width: 32px;\n    height: 32px;\n    fill: ${base.colors.green900};\n  }\n`;\nexport const PanelName = styled.p`\n  display: grid;\n  justify-content: start;\n  align-items: center;\n  font-size: clamp(12px, 0.614rem + 0.68vw, 18px);\n  font-weight: 600;\n  color: ${base.colors.green900};\n  padding: 4px;\n`;\nexport const CountLike = styled.span`\n  display: grid;\n  justify-content: start;\n  align-items: center;\n  font-size: clamp(12px, 0.659rem + 0.45vw, 16px);\n  color: ${base.colors.green900};\n  margin: 0;\n  padding: 4px;\n`;\n\n// *******   POST *******\nexport const WrapPost = styled.div`\n  display: grid;\n  grid-template-columns: minmax(288px, 552px);\n  justify-content: start;\n  align-items: center;\n  gap: 8px;\n  border-radius: 14px;\n  padding: 8px;\n  margin: 0 auto;\n  background-color: ${base.colors.green50};\n  @media screen and (min-width: 480px) {\n    grid-template-rows: 160px 100px 40px;\n  }\n`;\nexport const WrapMain = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-template-rows: auto auto;\n  padding: 0;\n  margin: 0;\n  @media screen and (min-width: 480px) {\n    grid-template-columns: 240px 1fr;\n    grid-template-rows: 160px;\n    gap: 8px;\n  }\n`;\nexport const WrapImgPost = styled.div`\n  display: grid;\n  grid-template-columns: minmax(280px, 400px);\n  grid-template-rows: auto;\n  justify-content: center;\n  align-items: center;\n  border-radius: 10px;\n  .img-post {\n    border-radius: 12px;\n    justify-self: stretch;\n    align-self: stretch;\n  }\n  @media screen and (min-width: 480px) {\n    grid-template-columns: 240px;\n    grid-template-rows: 160px;\n  }\n`;\nexport const WrapInfo = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-template-rows: 20px 1fr;\n  align-items: start;\n  gap: 8px;\n  padding: 8px;\n`;\nexport const WrapTag = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  justify-content: space-between;\n  align-items: center;\n  column-gap: 8px;\n  padding: 0;\n  .tags {\n    display: grid;\n    grid-template-columns: 20px 1fr;\n    justify-content: start;\n    align-items: center;\n    gap: 8px;\n  }\n  .icon-tag {\n    width: 16px;\n    height: 16px;\n    fill: ${base.colors.yellow};\n  }\n  .post-tag {\n    box-sizing: border-box;\n    font-size: clamp(16px, 0.955rem + 0.23vw, 18px);\n    font-weight: 700;\n    color: ${base.colors.yellow};\n  }\n  .date {\n    box-sizing: border-box;\n    font-size: clamp(12px, 0.705rem + 0.23vw, 14px);\n    font-weight: 400;\n    text-align: end;\n    color: ${base.colors.green900};\n  }\n`;\nexport const WrapTitle = styled.div`\n  display: grid;\n  grid-template-columns: 20px 1fr;\n  justify-content: start;\n  align-items: start;\n  gap: 4px;\n  padding: 0;\n  .icon-title {\n    width: 16px;\n    height: 16px;\n    fill: ${base.colors.green900};\n  }\n  .post-title {\n    box-sizing: border-box;\n    font-size: clamp(16px, 0.909rem + 0.45vw, 20px);\n    font-weight: 500;\n    color: ${base.colors.green900};\n    word-wrap: break-word;\n    overflow-wrap: anywhere;\n  }\n`;\nexport const PostText = styled.p`\n  display: grid;\n  grid-template-rows: 1fr;\n  justify-content: start;\n  align-items: start;\n  padding: 4px;\n  margin: 0;\n  font-size: clamp(12px, 0.659rem + 0.45vw, 16px);\n  color: ${base.colors.green900};\n  overflow-y: auto;\n  scroll-behavior: smooth;\n  &::-webkit-scrollbar {\n    width: 8px;\n    height: 50px;\n  }\n  /* &::-webkit-scrollbar-track {\n    background: #f6f6f6;\n  } */\n  &::-webkit-scrollbar-thumb {\n    border-radius: 12px;\n    background: #c8e6c9;\n  }\n  /* &::-webkit-scrollbar-thumb:hover {\n    background: #249fa3;\n  } */\n  @media screen and (min-width: 480px) {\n    grid-template-rows: 80px;\n  }\n`;\nexport const WrapReviews = styled.div`\n  display: grid;\n  grid-template-columns: 28px 1fr 28px 28px;\n  grid-template-rows: 36px;\n  gap: 4px;\n  justify-content: start;\n  align-items: center;\n  padding: 2px 0;\n`;\nexport const ForComment = styled.input`\n  display: grid;\n  grid-template-columns: 1fr;\n  justify-self: stretch;\n  align-self: stretch;\n  border-radius: 8px;\n  border: none;\n  outline: none;\n  font-size: 16px;\n  padding: 4px 6px;\n`;\nexport const BtnIcons = styled.button`\n  display: grid;\n  align-items: center;\n  background-color: transparent;\n  border: none;\n  padding-inline: 0;\n  cursor: pointer;\n  .icon {\n    width: 24px;\n    height: 24px;\n    padding: 0;\n  }\n  .like {\n    fill: ${base.colors.like};\n  }\n  .coment {\n    fill: ${base.colors.yellow};\n  }\n  .send {\n    fill: ${base.colors.yellow};\n  }\n  .dots {\n    fill: ${base.colors.green900};\n  }\n`;\n\n// *******   USER POST  *******\nexport const WrapPostId = styled.div`\n  display: grid;\n  grid-template-columns: minmax(268px, 1fr);\n  grid-template-rows: 1fr 40px 74px;\n  gap: 16px;\n  padding: 4px;\n  margin: 0 auto;\n`;\nexport const WrapItem = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-template-rows: auto auto;\n  gap: 8px;\n  padding: 0;\n  margin: 0 auto;\n`;\nexport const BackLink = styled(Link)`\n  box-sizing: border-box;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 16px;\n  font-weight: 600;\n  text-decoration: none;\n  color: #ffffff;\n  background-color: ${base.colors.green100};\n  transition: all 0.3s;\n  border: none;\n  border-radius: 20px;\n  cursor: pointer;\n  &:hover,\n  :focus {\n    background-color: ${base.colors.green200};\n  }\n`;\n\n// *******   CREATE  POST *******\nexport const WrapCreate = styled.div`\n  position: relative;\n  display: grid;\n  grid-template-columns: minmax(304px, 552px);\n  grid-template-rows: 1fr 74px;\n  justify-content: center;\n  align-items: center;\n  gap: 8px;\n  padding: 8px 0;\n  margin: 0 auto;\n  @media screen and (min-width: 480px) {\n    padding: 16px 8px;\n  }\n`;\nexport const FormPost = styled.form`\n  display: grid;\n  grid-template-columns: minmax(288px, 552px);\n  grid-template-rows: 40px 40px 40px 1fr 88px;\n  justify-content: start;\n  align-items: center;\n  border: 2px solid ${base.colors.green300};\n  border-radius: 14px;\n  gap: 16px;\n  background-color: ${base.colors.green50};\n  padding: 8px;\n  margin: 0 auto;\n  .wrap-radio {\n    display: grid;\n    grid-template-columns: repeat(auto-fit, 84px);\n    justify-content: flex-start;\n    align-items: center;\n    gap: 8px;\n  }\n  .input {\n    display: grid;\n    grid-template-columns: 1fr;\n    box-sizing: border-box;\n    font-size: 16px;\n    font-weight: 400;\n    border-radius: 8px;\n    border: 1px solid ${base.colors.green300};\n    outline: ${base.colors.green300};\n    color: ${base.colors.green900};\n    justify-self: stretch;\n    align-self: stretch;\n    padding: 4px 8px;\n  }\n  .input::placeholder {\n    font-size: 16px;\n    color: ${base.colors.green300};\n  }\n  .label {\n    display: grid;\n    grid-template-columns: 12px 1fr;\n    justify-content: start;\n    align-items: center;\n    gap: 4px;\n    font-size: 16px;\n    font-weight: 500;\n    color: ${base.colors.green900};\n  }\n  .textarea {\n    display: grid;\n    grid-template-columns: minmax(256px 460px);\n    box-sizing: border-box;\n    font-size: 16px;\n    font-weight: 400;\n    color: ${base.colors.green900};\n    border-radius: 8px;\n    border: 1px solid ${base.colors.green300};\n    outline: ${base.colors.green300};\n    resize: vertical;\n    padding: 4px 8px;\n  }\n  .textarea::placeholder {\n    font-size: 16px;\n    color: ${base.colors.green300};\n  }\n  @media screen and (min-width: 480px) {\n    grid-template-columns: 460px;\n    grid-template-rows: 40px 40px 40px 1fr 40px;\n  }\n`;\nexport const WrapBtn = styled.div`\n  display: grid;\n  grid-template-columns: minmax(288px, 1fr);\n  grid-template-rows: 40px 40px;\n  justify-content: center;\n  align-items: center;\n  gap: 8px;\n  .btn {\n    display: grid;\n    grid-template-columns: 1fr;\n    grid-template-rows: 40px;\n    justify-content: center;\n    align-items: center;\n    font-size: 16px;\n    font-weight: 600;\n    color: #ffffff;\n    text-align: center;\n    background-color: ${base.colors.green500};\n    transition: all 0.3s;\n    border: none;\n    border-radius: 20px;\n    text-decoration: none;\n    padding: 0;\n    cursor: pointer;\n    &:hover,\n    :focus {\n      background-color: ${base.colors.green700};\n    }\n  }\n  @media screen and (min-width: 480px) {\n    grid-template-columns: 1fr 1fr;\n    grid-template-rows: 40px;\n  }\n`;\n\n// *******   USER POST EDIT *******\nexport const WrapEditPost = styled.div`\n  display: grid;\n  grid-template-columns: minmax(268px, 552px);\n  grid-template-rows: 40px auto 40px auto 88px auto;\n  justify-content: start;\n  align-items: center;\n  border-radius: 14px;\n  gap: 16px;\n  background-color: ${base.colors.green50};\n  padding: 4px;\n  margin: 0 auto;\n  .wrap-radio {\n    display: grid;\n    grid-template-columns: repeat(auto-fit, 84px);\n    justify-content: start;\n    align-items: center;\n    gap: 8px;\n  }\n  .input {\n    display: grid;\n    grid-template-columns: 1fr;\n    box-sizing: border-box;\n    font-size: 16px;\n    font-weight: 400;\n    border-radius: 8px;\n    border: 1px solid ${base.colors.green300};\n    outline: ${base.colors.green300};\n    color: ${base.colors.green900};\n    justify-self: stretch;\n    align-self: stretch;\n    padding: 4px 8px;\n  }\n  .input::placeholder {\n    font-size: 16px;\n    color: ${base.colors.green300};\n  }\n  .label {\n    display: grid;\n    grid-template-columns: 12px 1fr;\n    justify-content: start;\n    align-items: center;\n    gap: 4px;\n    font-size: 16px;\n    font-weight: 500;\n    color: ${base.colors.green900};\n  }\n  .textarea {\n    display: grid;\n    grid-template-columns: 1fr;\n    box-sizing: border-box;\n    font-size: 16px;\n    font-weight: 400;\n    color: ${base.colors.green900};\n    border-radius: 8px;\n    border: 1px solid ${base.colors.green300};\n    outline: ${base.colors.green300};\n    resize: vertical;\n    padding: 4px 8px;\n  }\n  .textarea::placeholder {\n    font-size: 16px;\n    color: ${base.colors.green300};\n  }\n  @media screen and (min-width: 480px) {\n    /* grid-template-columns: 460px; */\n    grid-template-rows: 40px 40px 40px 1fr 40px auto;\n  }\n`;\n","import React, { useState } from 'react';\nimport { WrapBtn, WrapEditPost } from './Posts.styled';\nimport { useUpdatePostMutation } from '../../redux/PostsSlice';\nimport NotifPositive from 'components/Helper/NotifPositive';\nimport NotifNegative from 'components/Helper/NotifNegative';\n\nexport default function EditPost({ data }) {\n  const id = data._id;\n  const fields = {\n    imageUrl: data.imageUrl,\n    tag: data.tag,\n    title: data.title,\n    text: data.text,\n  };\n\n  const [isShow, setIsShow] = useState(false);\n  const [post, setPost] = useState(fields);\n  const [updatePost, { isError, isSuccess }] = useUpdatePostMutation();\n\n  const onChangeField = (field, value) => {\n    setPost(prevState => ({\n      ...prevState,\n      [field]: value,\n    }));\n  };\n\n  const handleUpdate = () => {\n    // onUpdatePost(id, post);\n    // console.log('handleUpdate', post);\n    updatePost({ id, post });\n    setIsShow(true);\n  };\n\n  const onReset = () => {\n    setPost({\n      imageUrl: '',\n      tag: '',\n      title: '',\n      text: '',\n    });\n  };\n\n  const showSuccess = isShow && isSuccess;\n  const showError = isShow && isError;\n  // console.log(showSuccess);\n  // console.log(showError);\n\n  return (\n    <WrapEditPost autoComplete=\"off\">\n      <input\n        className=\"input\"\n        name=\"imageUrl\"\n        type=\"text\"\n        value={post.imageUrl}\n        onChange={e => onChangeField('imageUrl', e.target.value)}\n      />\n      <div className=\"wrap-radio\">\n        <label htmlFor=\"tags\" className=\"label\">\n          <input\n            type=\"radio\"\n            name=\"tag\"\n            value=\"animals\"\n            onChange={e => onChangeField('tag', e.target.value)}\n          />\n          animals\n        </label>\n        <label htmlFor=\"tags\" className=\"label\">\n          <input\n            type=\"radio\"\n            name=\"tag\"\n            value=\"hobby\"\n            onChange={e => onChangeField('tag', e.target.value)}\n          />\n          hobby\n        </label>\n        <label htmlFor=\"tags\" className=\"label\">\n          <input\n            type=\"radio\"\n            name=\"tag\"\n            value=\"children\"\n            onChange={e => onChangeField('tag', e.target.value)}\n          />\n          children\n        </label>\n        <label htmlFor=\"tags\" className=\"label\">\n          <input\n            type=\"radio\"\n            name=\"tag\"\n            value=\"health\"\n            onChange={e => onChangeField('tag', e.target.value)}\n          />\n          health\n        </label>\n      </div>\n      <input\n        className=\"input\"\n        name=\"title\"\n        type=\"text\"\n        value={post.title}\n        onChange={e => onChangeField('title', e.target.value)}\n      />\n      <textarea\n        name=\"text\"\n        rows=\"auto\"\n        type=\"textarea\"\n        className=\"textarea\"\n        value={post.text}\n        onChange={e => onChangeField('text', e.target.value)}\n      />\n      <WrapBtn>\n        <button type=\"submit\" className=\"btn\" onClick={onReset}>\n          reset\n        </button>\n        <button type=\"button\" className=\"btn\" onClick={handleUpdate}>\n          update post\n        </button>\n      </WrapBtn>\n      {showSuccess && (\n        <NotifPositive\n          message={'List of posts updated'}\n          onClose={() => setIsShow(false)}\n        />\n      )}\n      {showError && (\n        <NotifNegative\n          message={'Please, try again later'}\n          onClose={() => setIsShow(false)}\n        />\n      )}\n    </WrapEditPost>\n  );\n}\n","import React, { useEffect } from 'react';\nimport { WrapLoading, WrapModal } from './Helper.styled';\n\nexport default function ModalWindow({ onClose, content }) {\n  useEffect(() => {\n    const handleEscape = event => {\n      if (event.key === 'Escape') {\n        onClose();\n      }\n    };\n    window.addEventListener('keydown', handleEscape);\n    document.body.style.overflow = 'hidden';\n\n    return () => {\n      window.removeEventListener('keydown', handleEscape);\n      document.body.style.overflow = 'auto';\n    };\n  }, [onClose]);\n  return (\n    <WrapLoading onClick={onClose}>\n      <WrapModal onClick={e => e.stopPropagation()}>{content}</WrapModal>\n    </WrapLoading>\n  );\n}\n","import React, { useRef, useState } from 'react';\nimport { BackLink, WrapBtn, WrapItem, WrapPostId } from './Posts.styled';\nimport Post from './Post';\nimport {\n  useDeletePostMutation,\n  useGetPostByIdQuery,\n} from '../../redux/PostsSlice';\nimport { useLocation, useParams } from 'react-router-dom';\nimport EditPost from './EditPost';\nimport ModalWindow from 'components/Helper/ModalWindow';\nimport { createPortal } from 'react-dom';\nimport Loading from 'components/Helper/Loading';\nimport { WrapRender } from 'pages/Page.styled';\nimport NotifPositive from 'components/Helper/NotifPositive';\nimport NotifNegative from 'components/Helper/NotifNegative';\n\nexport default function UserPost() {\n  const [showModal, setShowModal] = useState(false);\n  const [isShow, setIsShow] = useState(false);\n  const location = useLocation();\n\n  const backHref = useRef(location.state?.from ?? '/user-posts');\n  const params = useParams();\n  const id = params.id;\n  // console.log(id);\n  const { data, isLoading } = useGetPostByIdQuery(id);\n  const post = data;\n  // console.log(post);\n  const [deletePost, { isError, isSuccess }] = useDeletePostMutation();\n\n  const onEdit = () => {\n    setShowModal(true);\n  };\n\n  const onDelete = () => {\n    deletePost(id);\n    setIsShow(true);\n  };\n  const showSuccess = isShow && isSuccess;\n  const showError = isShow && isError;\n  // console.log('showSuccess', showSuccess);\n  // console.log('showError', showError);\n\n  return (\n    <WrapRender>\n      <WrapPostId>\n        {isLoading ? (\n          <Loading />\n        ) : (\n          <WrapItem>\n            <Post post={post} />\n            <WrapBtn>\n              <button type=\"button\" onClick={onEdit} className=\"btn\">\n                edit\n              </button>\n              {showModal &&\n                createPortal(\n                  <ModalWindow\n                    onClose={() => setShowModal(false)}\n                    content={<EditPost data={data} />}\n                  />,\n                  document.body\n                )}\n              <button type=\"button\" onClick={onDelete} className=\"btn\">\n                delete\n              </button>\n            </WrapBtn>\n          </WrapItem>\n        )}\n        <BackLink to={backHref.current}>come back</BackLink>\n        {showSuccess && (\n          <NotifPositive\n            message={'List of posts updated'}\n            onClose={() => setIsShow(false)}\n          />\n        )}\n        {showError && (\n          <NotifNegative\n            message={'Please, try again later'}\n            onClose={() => setIsShow(false)}\n          />\n        )}\n      </WrapPostId>\n    </WrapRender>\n  );\n}\n"],"names":["NotifNegative","_ref","message","onClose","useEffect","timer","setTimeout","clearTimeout","_jsxs","WrapNotif","children","_jsx","GiShamrock","className","NotifPositive","Post","post","date","Date","createdAt","formattedDate","Intl","DateTimeFormat","day","month","year","format","replace","WrapPost","WrapMain","WrapImgPost","src","imageUrl","alt","title","WrapInfo","WrapTag","BsFillBookmarkFill","tag","WrapTitle","BsCircleFill","PostText","text","WrapReviews","BtnIcons","BsChatRightTextFill","ForComment","BsSendFill","BsThreeDotsVertical","WrapPostPage","styled","_templateObject","_taggedTemplateLiteral","base","WrapList","_templateObject2","WrapPanelPost","_templateObject3","WrapUserPost","_templateObject4","WrapLink","Link","_templateObject5","WrapPanel","_templateObject6","PanelAvatar","_templateObject7","PanelName","_templateObject8","CountLike","_templateObject9","_templateObject10","_templateObject11","_templateObject12","_templateObject13","_templateObject14","_templateObject15","_templateObject16","_templateObject17","_templateObject18","_templateObject19","WrapPostId","_templateObject20","WrapItem","_templateObject21","BackLink","_templateObject22","WrapCreate","_templateObject23","FormPost","_templateObject24","WrapBtn","_templateObject25","WrapEditPost","_templateObject26","EditPost","data","id","_id","fields","_useState","useState","_useState2","_slicedToArray","isShow","setIsShow","_useState3","_useState4","setPost","_useUpdatePostMutatio","useUpdatePostMutation","_useUpdatePostMutatio2","updatePost","_useUpdatePostMutatio3","isError","isSuccess","onChangeField","field","value","prevState","_objectSpread","_defineProperty","showSuccess","showError","autoComplete","name","type","onChange","e","target","htmlFor","rows","onClick","ModalWindow","content","handleEscape","event","key","window","addEventListener","document","body","style","overflow","removeEventListener","WrapLoading","WrapModal","stopPropagation","UserPost","_location$state$from","_location$state","showModal","setShowModal","location","useLocation","backHref","useRef","state","from","useParams","_useGetPostByIdQuery","useGetPostByIdQuery","isLoading","_useDeletePostMutatio","useDeletePostMutation","_useDeletePostMutatio2","deletePost","_useDeletePostMutatio3","WrapRender","Loading","createPortal","to","current"],"sourceRoot":""}