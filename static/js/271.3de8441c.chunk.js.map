{"version":3,"file":"static/js/271.3de8441c.chunk.js","mappings":"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","sources":["components/Helper/EmptyPage.jsx","components/Posts/Post.jsx","components/Posts/Posts.styled.js","components/Posts/PostsList.jsx","pages/PostsPage.jsx"],"sourcesContent":["import React from 'react';\nimport { GiSherlockHolmes } from 'react-icons/gi';\nimport { WrapEmpty } from './Helper.styled';\n\nexport default function EmptyPage({ message }) {\n  return (\n    <WrapEmpty>\n      <h2 className=\"empty-title\">{message}</h2>\n      <GiSherlockHolmes className=\"icon-empty\" />\n    </WrapEmpty>\n  );\n}\n","import React from 'react';\nimport {\n  BsFillBookmarkFill,\n  BsCircleFill,\n  BsHandThumbsUpFill,\n  BsChatRightTextFill,\n  BsSendFill,\n  BsThreeDotsVertical,\n} from 'react-icons/bs';\n\nimport {\n  BtnIcons,\n  CountLike,\n  ForComment,\n  PostText,\n  UserName,\n  WrapAvatar,\n  WrapComment,\n  WrapImgPost,\n  WrapInfo,\n  WrapMain,\n  WrapPost,\n  WrapReviews,\n  WrapTag,\n  WrapTitle,\n  WrapUser,\n  WrapUserPost,\n} from './Posts.styled';\nimport { useUpdateLikesMutation } from '../../redux/PostsSlice';\n\nexport default function Post({ post }) {\n  const date = new Date(post.createdAt);\n  const formattedDate = new Intl.DateTimeFormat('en-US', {\n    day: '2-digit',\n    month: '2-digit',\n    year: 'numeric',\n  })\n    .format(date)\n    .replace(/\\//g, '.');\n  // console.log(formattedDate);\n  const [updateLikes] = useUpdateLikesMutation();\n\n  const onAddLike = evt => {\n    const id = evt.currentTarget.name;\n    console.log(id);\n    let count = { viewsCount: Number(post.viewsCount + 1) };\n    console.log(count);\n    updateLikes({ id, count });\n  };\n\n  return (\n    <WrapUserPost>\n      <WrapUser>\n        <div className=\"bgr\">\n          <WrapAvatar>R</WrapAvatar>\n          <UserName>Tom Fisher</UserName>\n          <BtnIcons name={post._id} type=\"button\" onClick={onAddLike}>\n            <BsHandThumbsUpFill className=\"icon like\" />\n          </BtnIcons>\n          <CountLike>{post.viewsCount}</CountLike>\n        </div>\n      </WrapUser>\n      <WrapPost>\n        <WrapMain>\n          <WrapImgPost>\n            <img src={post.imageUrl} alt={post.title} className=\"img-post\" />\n          </WrapImgPost>\n          <WrapInfo>\n            <WrapTag>\n              <div className=\"tags\">\n                <BsFillBookmarkFill className=\"icon-tag\" />\n                <h4 className=\"post-tag\">{post.tag}</h4>\n              </div>\n              <p className=\"date\">{formattedDate}</p>\n            </WrapTag>\n            <WrapTitle>\n              <BsCircleFill className=\"icon-title\" />\n              <h3 className=\"post-title\">{post.title}</h3>\n            </WrapTitle>\n          </WrapInfo>\n        </WrapMain>\n        <PostText>{post.text}</PostText>\n        <WrapReviews>\n          <BtnIcons>\n            <BsChatRightTextFill className=\"icon coment\" />\n          </BtnIcons>\n          <WrapComment>\n            <ForComment />\n            <BtnIcons>\n              <BsSendFill className=\"icon send\" />\n            </BtnIcons>\n          </WrapComment>\n          <BtnIcons>\n            <BsThreeDotsVertical className=\"icon dots\" />\n          </BtnIcons>\n        </WrapReviews>\n      </WrapPost>\n    </WrapUserPost>\n  );\n}\n","import { base } from 'baseTheme';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\n// *******   CREATE  POST *******\n\nexport const WrapCreate = styled.div`\n  display: grid;\n  grid-template-columns: minmax(292px, 1fr);\n  grid-template-rows: 1fr 1fr;\n  gap: 8px;\n  padding: 8px 4px;\n  margin: 0 auto;\n  @media screen and (min-width: 480px) {\n    padding: 8px;\n  }\n`;\n\nexport const FormPost = styled.form`\n  display: grid;\n  grid-template-columns: minmax(292px, 1fr);\n  grid-template-rows: 40px 40px 40px 1fr 88px;\n  justify-content: flex-start;\n  align-items: center;\n  border: 2px solid ${base.colors.green300};\n  border-radius: 14px;\n  gap: 16px;\n  background-color: ${base.colors.green50};\n  padding: 8px;\n  margin: 0 auto;\n  .wrap-radio {\n    display: grid;\n    grid-template-columns: repeat(auto-fit, 84px);\n    justify-content: flex-start;\n    align-items: center;\n    gap: 8px;\n  }\n  .input {\n    display: grid;\n    grid-template-columns: 1fr;\n    box-sizing: border-box;\n    font-size: 16px;\n    font-weight: 400;\n    border-radius: 8px;\n    border: 1px solid ${base.colors.green300};\n    outline: ${base.colors.green300};\n    color: ${base.colors.green900};\n    justify-self: stretch;\n    align-self: stretch;\n    padding: 4px 8px;\n  }\n  .input::placeholder {\n    font-size: 16px;\n    color: ${base.colors.green300};\n  }\n  .label {\n    display: grid;\n    grid-template-columns: 12px 1fr;\n    justify-content: flex-start;\n    align-items: center;\n    gap: 4px;\n    font-size: 16px;\n    font-weight: 500;\n    color: ${base.colors.green900};\n  }\n  .textarea {\n    display: grid;\n    grid-template-columns: minmax(256px 460px);\n    box-sizing: border-box;\n    font-size: 16px;\n    font-weight: 400;\n    color: ${base.colors.green900};\n    border-radius: 8px;\n    border: 1px solid ${base.colors.green300};\n    outline: ${base.colors.green300};\n    resize: vertical;\n    padding: 4px 8px;\n  }\n  .textarea::placeholder {\n    font-size: 16px;\n    color: ${base.colors.green300};\n  }\n  @media screen and (min-width: 480px) {\n    grid-template-columns: 460px;\n    grid-template-rows: 40px 40px 40px 1fr 40px;\n  }\n`;\nexport const WrapBtn = styled.div`\n  display: grid;\n  grid-template-columns: minmax(292px, 1fr);\n  grid-template-rows: 40px 40px;\n  gap: 8px;\n  .btn {\n    box-sizing: border-box;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    font-size: 16px;\n    font-weight: 600;\n    color: #ffffff;\n    background-color: ${base.colors.green500};\n    transition: all 0.3s;\n    border: none;\n    border-radius: 20px;\n    cursor: pointer;\n    &:hover,\n    :focus {\n      background-color: ${base.colors.green700};\n    }\n  }\n  @media screen and (min-width: 480px) {\n    grid-template-columns: 1fr 1fr;\n    grid-template-rows: 40px;\n  }\n`;\n\n// *******   POST LIST *******\n\nexport const WrapPostsList = styled.ul`\n  display: grid;\n  gap: 16px;\n  grid-template-columns: minmax(312px, 1fr);\n  padding: 8px 4px;\n  margin: 0 auto;\n  @media screen and (min-width: 960px) {\n    grid-template-columns: repeat(2, 1fr);\n    padding: 8px;\n    grid-template-rows: auto;\n  }\n`;\n\n// *******   POST *******\nexport const WrapUserPost = styled.li`\n  display: grid;\n  grid-template-columns: minmax(292px, auto);\n  grid-template-rows: auto auto;\n  gap: 4px;\n  padding: 0;\n  margin: 0;\n`;\nexport const WrapUser = styled.div`\n  display: grid;\n  grid-template-columns: 272px auto;\n  .bgr {\n    display: grid;\n    grid-template-columns: 36px 124px 40px 56px;\n    grid-template-rows: 36px;\n    justify-content: flex-start;\n    align-items: center;\n    gap: 4px;\n    border: none;\n    border-radius: 30px;\n    background-color: #ffffff;\n    padding: 2px;\n    margin: 0;\n  }\n`;\nexport const WrapAvatar = styled.div`\n  display: grid;\n  grid-template-rows: 36px;\n  justify-content: center;\n  align-items: center;\n  border-radius: 50%;\n  background-color: yellow;\n`;\nexport const UserName = styled.p`\n  display: grid;\n  justify-content: flex-start;\n  align-items: center;\n  font-size: clamp(12px, 0.614rem + 0.68vw, 18px);\n  font-weight: 600;\n  color: ${base.colors.green900};\n  padding: 4px;\n`;\nexport const CountLike = styled.span`\n  display: grid;\n  justify-content: flex-start;\n  align-items: center;\n  font-size: clamp(12px, 0.659rem + 0.45vw, 16px);\n  color: ${base.colors.green900};\n  margin: 0;\n  padding: 4px;\n`;\nexport const WrapPost = styled.div`\n  display: grid;\n  grid-template-columns: minmax(292px, 552px);\n  justify-content: flex-start;\n  align-items: center;\n  gap: 8px;\n  border-radius: 14px;\n  padding: 8px;\n  margin: 0 auto;\n  background-color: ${base.colors.green50};\n  @media screen and (min-width: 480px) {\n    grid-template-rows: 160px 100px 40px;\n  }\n`;\n\nexport const WrapMain = styled.div`\n  display: grid;\n  padding: 0;\n  margin: 0;\n  @media screen and (min-width: 480px) {\n    grid-template-columns: 240px 1fr;\n    grid-template-rows: 160px;\n    gap: 8px;\n  }\n`;\nexport const WrapImgPost = styled.div`\n  display: grid;\n  grid-template-columns: minmax(280px, 400px);\n  grid-template-rows: auto;\n  justify-content: center;\n  align-items: center;\n  border-radius: 10px;\n  .img-post {\n    border-radius: 12px;\n    justify-self: stretch;\n    align-self: stretch;\n  }\n  @media screen and (min-width: 480px) {\n    grid-template-columns: 240px;\n    grid-template-rows: 160px;\n  }\n`;\nexport const WrapInfo = styled.div`\n  display: grid;\n  gap: 8px;\n  grid-template-columns: 1fr;\n  grid-template-rows: 20px 1fr;\n  align-items: flex-start;\n  padding: 8px;\n`;\nexport const WrapTag = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  justify-content: space-between;\n  align-items: center;\n  column-gap: 8px;\n  padding: 0;\n  .tags {\n    display: grid;\n    grid-template-columns: 20px 1fr;\n    justify-content: flex-start;\n    align-items: center;\n    gap: 8px;\n  }\n  .icon-tag {\n    width: 16px;\n    height: 16px;\n    fill: ${base.colors.comment};\n  }\n  .post-tag {\n    box-sizing: border-box;\n    font-size: clamp(16px, 0.955rem + 0.23vw, 18px);\n    font-weight: 700;\n    color: ${base.colors.comment};\n  }\n  .date {\n    box-sizing: border-box;\n    font-size: clamp(12px, 0.705rem + 0.23vw, 14px);\n    font-weight: 400;\n    text-align: end;\n    color: ${base.colors.green900};\n  }\n`;\nexport const WrapTitle = styled.div`\n  display: grid;\n  grid-template-columns: 20px 1fr;\n  justify-content: flex-start;\n  align-items: flex-start;\n  gap: 4px;\n  padding: 0;\n  .icon-title {\n    width: 16px;\n    height: 16px;\n    fill: ${base.colors.green900};\n  }\n  .post-title {\n    box-sizing: border-box;\n    font-size: clamp(16px, 0.909rem + 0.45vw, 20px);\n    font-weight: 500;\n    color: ${base.colors.green900};\n    word-wrap: break-word;\n    overflow-wrap: anywhere;\n  }\n`;\nexport const PostText = styled.p`\n  display: grid;\n  grid-template-rows: 1fr;\n  justify-content: flex-start;\n  align-items: flex-start;\n  padding: 4px;\n  margin: 0;\n  font-size: clamp(12px, 0.659rem + 0.45vw, 16px);\n  color: ${base.colors.green900};\n  overflow-y: auto;\n  scroll-behavior: smooth;\n  &::-webkit-scrollbar {\n    width: 8px;\n    height: 50px;\n  }\n  /* &::-webkit-scrollbar-track {\n    background: #f6f6f6;\n  } */\n  &::-webkit-scrollbar-thumb {\n    border-radius: 12px;\n    background: #c8e6c9;\n  }\n  /* &::-webkit-scrollbar-thumb:hover {\n    background: #249fa3;\n  } */\n  @media screen and (min-width: 480px) {\n    grid-template-rows: 80px;\n  }\n`;\nexport const WrapReviews = styled.div`\n  display: grid;\n  grid-template-columns: 36px 1fr 36px;\n  grid-template-rows: 36px;\n  gap: 4px;\n  justify-content: flex-start;\n  align-items: center;\n  padding: 2px;\n`;\n\nexport const WrapComment = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 36px;\n  justify-content: flex-start;\n  align-items: center;\n  gap: 4px;\n`;\nexport const ForComment = styled.input`\n  display: grid;\n  grid-template-columns: minmax(200px 1fr);\n  border-radius: 8px;\n  border: 1px solid white;\n  outline: none;\n  font-size: 16px;\n  padding: 6px 8px;\n`;\nexport const BtnIcons = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 36px;\n  height: 36px;\n  background-color: transparent;\n  border: none;\n  padding: 4px;\n  cursor: pointer;\n  .icon {\n    width: 24px;\n    height: 24px;\n  }\n  .like {\n    fill: ${base.colors.like};\n  }\n  .coment {\n    fill: ${base.colors.comment};\n  }\n  .send {\n    fill: ${base.colors.comment};\n  }\n  .dots {\n    fill: ${base.colors.green900};\n  }\n`;\n\n// *******   USER PAGE *******\nexport const WrapUserList = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(312px, 1fr));\n  gap: 16px;\n  padding: 8px 4px;\n  margin: 0 auto;\n  @media screen and (min-width: 480px) {\n    padding: 8px;\n  }\n`;\nexport const WrapLink = styled(Link)`\n  text-decoration: none;\n  padding: 0;\n  margin: 0;\n`;\n\n// *******   USER POST  *******\nexport const WrapPostId = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-template-rows: 1fr 40px 40px;\n  gap: 16px;\n  padding: 8px 0;\n  margin: 0 auto;\n  .message {\n    font-size: clamp(16px, 0.909rem + 0.45vw, 20px);\n    font-weight: 500;\n    color: ${base.colors.green900};\n    padding: 0 4px 8px 4px;\n  }\n`;\nexport const WrapItem = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-template-rows: auto auto;\n  gap: 8px;\n  padding: 0;\n  margin: 0;\n`;\n// export const WrapBtnEdit = styled.div`\n//   display: grid;\n//   grid-template-columns: minmax(292px, 1fr);\n//   grid-template-rows: 40px 40px;\n//   gap: 8px;\n//   .btn {\n//     box-sizing: border-box;\n//     display: flex;\n//     justify-content: center;\n//     align-items: center;\n//     font-size: 16px;\n//     font-weight: 600;\n//     color: #ffffff;\n//     background-color: ${base.colors.green500};\n//     transition: all 0.3s;\n//     border: none;\n//     border-radius: 20px;\n//     cursor: pointer;\n//     &:hover,\n//     :focus {\n//       background-color: ${base.colors.green700};\n//     }\n//   }\n//   @media screen and (min-width: 480px) {\n//     grid-template-columns: 1fr 1fr;\n//     grid-template-rows: 40px;\n//   }\n// `;\nexport const BackLink = styled(Link)`\n  box-sizing: border-box;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 16px;\n  font-weight: 600;\n  text-decoration: none;\n  color: #ffffff;\n  background-color: ${base.colors.green100};\n  transition: all 0.3s;\n  border: none;\n  border-radius: 20px;\n  cursor: pointer;\n  &:hover,\n  :focus {\n    background-color: ${base.colors.green200};\n  }\n`;\n// export const BtnUserPost = styled.button`\n//   box-sizing: border-box;\n//   display: flex;\n//   justify-content: center;\n//   align-items: center;\n//   font-size: 16px;\n//   font-weight: 600;\n//   color: #ffffff;\n//   background-color: ${base.colors.green500};\n//   transition: all 0.3s;\n//   border: none;\n//   border-radius: 20px;\n//   cursor: pointer;\n//   &:hover,\n//   :focus {\n//     background-color: ${base.colors.green700};\n//   }\n// `;\n// *******   USER POST EDIT *******\nexport const WrapEditPost = styled.div`\n  display: grid;\n  grid-template-columns: minmax(292px, 1fr);\n  grid-template-rows: 40px 40px 40px auto 40px;\n  justify-content: flex-start;\n  align-items: center;\n  /* border: 2px solid ${base.colors.green300}; */\n  border-radius: 14px;\n  gap: 16px;\n  background-color: ${base.colors.green50};\n  padding: 8px;\n  margin: 0 auto;\n  .wrap-radio {\n    display: grid;\n    grid-template-columns: repeat(auto-fit, 84px);\n    justify-content: flex-start;\n    align-items: center;\n    gap: 8px;\n  }\n  .input {\n    display: grid;\n    grid-template-columns: 1fr;\n    box-sizing: border-box;\n    font-size: 16px;\n    font-weight: 400;\n    border-radius: 8px;\n    border: 1px solid ${base.colors.green300};\n    outline: ${base.colors.green300};\n    color: ${base.colors.green900};\n    justify-self: stretch;\n    align-self: stretch;\n    padding: 4px 8px;\n  }\n  .input::placeholder {\n    font-size: 16px;\n    color: ${base.colors.green300};\n  }\n  .label {\n    display: grid;\n    grid-template-columns: 12px 1fr;\n    justify-content: flex-start;\n    align-items: center;\n    gap: 4px;\n    font-size: 16px;\n    font-weight: 500;\n    color: ${base.colors.green900};\n  }\n  .textarea {\n    display: grid;\n    grid-template-columns: minmax(256px 460px);\n    box-sizing: border-box;\n    font-size: 16px;\n    font-weight: 400;\n    color: ${base.colors.green900};\n    border-radius: 8px;\n    border: 1px solid ${base.colors.green300};\n    outline: ${base.colors.green300};\n    resize: vertical;\n    padding: 4px 8px;\n  }\n  .textarea::placeholder {\n    font-size: 16px;\n    color: ${base.colors.green300};\n  }\n  @media screen and (min-width: 480px) {\n    grid-template-columns: 460px;\n    grid-template-rows: 40px 40px 40px 1fr 40px;\n  }\n`;\nexport const BtnSave = styled.button`\n  box-sizing: border-box;\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-template-rows: 40px;\n  justify-content: center;\n  align-items: center;\n  font-size: 16px;\n  font-weight: 600;\n  color: #ffffff;\n  background-color: ${base.colors.green500};\n  transition: all 0.3s;\n  border: none;\n  border-radius: 20px;\n  cursor: pointer;\n  &:hover,\n  :focus {\n    background-color: ${base.colors.green700};\n  }\n`;\n","import React from 'react';\nimport Post from './Post';\nimport { WrapPostsList } from './Posts.styled';\nimport EmptyPage from '../Helper/EmptyPage';\n// import { base } from 'baseTheme';\n\nexport default function PostsList({ posts, ...otherProps }) {\n  const Arr = Array.isArray(posts) && posts.length > 0;\n  return (\n    <WrapPostsList>\n      {Arr ? (\n        posts.map(post => <Post key={post._id} post={post} />)\n      ) : (\n        <EmptyPage message={\"There's nothing here yet\"} />\n      )}\n    </WrapPostsList>\n  );\n}\n","import React from 'react';\nimport { WrapRender } from './Page.styled';\nimport { useGetPostsQuery } from '../redux/PostsSlice';\nimport PostsList from 'components/Posts/PostsList';\nimport EmptyPage from 'components/Helper/EmptyPage';\nimport Loading from 'components/Helper/Loading';\n\nexport default function PostsPage() {\n  const { data: posts, error, isLoading } = useGetPostsQuery();\n\n  return (\n    <WrapRender>\n      {isLoading ? <Loading /> : <PostsList posts={posts} />}\n      {error && (\n        <EmptyPage\n          message={'The service is temporarily unavailable. Try later'}\n        />\n      )}\n    </WrapRender>\n  );\n}\n"],"names":["EmptyPage","_ref","message","_jsxs","WrapEmpty","children","_jsx","className","GiSherlockHolmes","Post","post","date","Date","createdAt","formattedDate","Intl","DateTimeFormat","day","month","year","format","replace","_useUpdateLikesMutati","useUpdateLikesMutation","updateLikes","_slicedToArray","WrapUserPost","WrapUser","WrapAvatar","UserName","BtnIcons","name","_id","type","onClick","evt","id","currentTarget","console","log","count","viewsCount","Number","BsHandThumbsUpFill","CountLike","WrapPost","WrapMain","WrapImgPost","src","imageUrl","alt","title","WrapInfo","WrapTag","BsFillBookmarkFill","tag","WrapTitle","BsCircleFill","PostText","text","WrapReviews","BsChatRightTextFill","WrapComment","ForComment","BsSendFill","BsThreeDotsVertical","WrapCreate","styled","_templateObject","_taggedTemplateLiteral","FormPost","_templateObject2","base","WrapBtn","_templateObject3","WrapPostsList","_templateObject4","_templateObject5","_templateObject6","_templateObject7","_templateObject8","_templateObject9","_templateObject10","_templateObject11","_templateObject12","_templateObject13","_templateObject14","_templateObject15","_templateObject16","_templateObject17","_templateObject18","_templateObject19","_templateObject20","WrapUserList","_templateObject21","WrapLink","Link","_templateObject22","WrapPostId","_templateObject23","WrapItem","_templateObject24","BackLink","_templateObject25","WrapEditPost","_templateObject26","BtnSave","_templateObject27","PostsList","posts","Arr","_objectWithoutProperties","_excluded","Array","isArray","length","map","PostsPage","_useGetPostsQuery","useGetPostsQuery","data","error","isLoading","WrapRender","Loading"],"sourceRoot":""}