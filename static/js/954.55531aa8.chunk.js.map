{"version":3,"file":"static/js/954.55531aa8.chunk.js","mappings":"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","sources":["components/Helper/EmptyPage.jsx","components/Posts/Post.jsx","components/Posts/Posts.styled.js","components/Posts/UserPostsList.jsx","pages/UserPage.jsx"],"sourcesContent":["import React from 'react';\nimport { GiSherlockHolmes } from 'react-icons/gi';\nimport { WrapEmpty } from './Helper.styled';\n\nexport default function EmptyPage({ message }) {\n  return (\n    <WrapEmpty>\n      <h2 className=\"empty-title\">{message}</h2>\n      <GiSherlockHolmes className=\"icon-empty\" />\n    </WrapEmpty>\n  );\n}\n","import React from 'react';\nimport {\n  BsFillBookmarkFill,\n  BsCircleFill,\n  BsChatRightTextFill,\n  BsSendFill,\n  BsThreeDotsVertical,\n} from 'react-icons/bs';\n\nimport {\n  BtnIcons,\n  ForComment,\n  PostText,\n  WrapImgPost,\n  WrapInfo,\n  WrapMain,\n  WrapPost,\n  WrapReviews,\n  WrapTag,\n  WrapTitle,\n} from './Posts.styled';\n\nexport default function Post({ post }) {\n  const date = new Date(post.createdAt);\n  const formattedDate = new Intl.DateTimeFormat('en-US', {\n    day: '2-digit',\n    month: '2-digit',\n    year: 'numeric',\n  })\n    .format(date)\n    .replace(/\\//g, '.');\n  // console.log(formattedDate);\n  return (\n    <WrapPost>\n      <WrapMain>\n        <WrapImgPost>\n          <img src={post.imageUrl} alt={post.title} className=\"img-post\" />\n        </WrapImgPost>\n        <WrapInfo>\n          <WrapTag>\n            <div className=\"tags\">\n              <BsFillBookmarkFill className=\"icon-tag\" />\n              <h4 className=\"post-tag\">{post.tag}</h4>\n            </div>\n            <p className=\"date\">{formattedDate}</p>\n          </WrapTag>\n          <WrapTitle>\n            <BsCircleFill className=\"icon-title\" />\n            <h3 className=\"post-title\">{post.title}</h3>\n          </WrapTitle>\n        </WrapInfo>\n      </WrapMain>\n      <PostText>{post.text}</PostText>\n      <WrapReviews>\n        <BtnIcons>\n          <BsChatRightTextFill className=\"icon coment\" />\n        </BtnIcons>\n        {/* <WrapComment> */}\n        <ForComment />\n        <BtnIcons>\n          <BsSendFill className=\"icon send\" />\n        </BtnIcons>\n        {/* </WrapComment> */}\n        <BtnIcons>\n          <BsThreeDotsVertical className=\"icon dots\" />\n        </BtnIcons>\n      </WrapReviews>\n    </WrapPost>\n  );\n}\n","import { base } from 'baseTheme';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\n// ******* MAIN SETTING *******\nexport const WrapPostPage = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-template-rows: 1fr;\n  padding: 8px;\n  margin: 0 auto;\n  @media screen and (min-width: 480px) {\n    padding: 16px 8px;\n  }\n`;\nexport const WrapList = styled.ul`\n  display: grid;\n  grid-template-columns: minmax(288px, 1fr);\n  grid-template-rows: 1fr;\n  justify-content: start;\n  align-items: center;\n  gap: 16px;\n  padding: 8px;\n  margin: 0 auto;\n  @media screen and (min-width: 480px) {\n    padding: 16px 8px;\n  }\n  @media screen and (min-width: 960px) {\n    grid-template-columns: repeat(2, 1fr);\n    padding: 16px;\n  }\n`;\nexport const WrapPanelPost = styled.li`\n  display: grid;\n  grid-template-columns: minmax(304px, 552px);\n  grid-template-rows: auto auto;\n  gap: 4px;\n  padding: 0;\n  margin: 0 auto;\n`;\nexport const WrapUserPost = styled.li`\n  display: grid;\n  grid-template-columns: minmax(304px, 552px);\n  grid-template-rows: auto;\n  padding: 0;\n  margin: 0 auto;\n`;\nexport const WrapLink = styled(Link)`\n  text-decoration: none;\n  padding: 0;\n  margin: 0;\n`;\n\n// *******   POST USER PANEL *******\nexport const WrapPanel = styled.div`\n  display: grid;\n  grid-template-columns: 272px 1fr;\n  .bgr {\n    display: grid;\n    grid-template-columns: 36px 124px 40px 56px;\n    grid-template-rows: 36px;\n    justify-content: start;\n    align-items: center;\n    gap: 4px;\n    border: none;\n    border-radius: 30px;\n    background-color: #ffffff;\n    padding: 2px 2px;\n    margin: 0;\n  }\n`;\nexport const PanelAvatar = styled.div`\n  display: grid;\n  grid-template-rows: 36px;\n  justify-content: center;\n  align-items: center;\n  border-radius: 50%;\n  background-color: yellow;\n  .img-avatar {\n    width: 32px;\n    height: 32px;\n    border-radius: 50%;\n    object-fit: cover;\n  }\n  .icon-avatar {\n    width: 32px;\n    height: 32px;\n    fill: ${base.colors.green900};\n  }\n`;\nexport const PanelName = styled.p`\n  display: grid;\n  justify-content: start;\n  align-items: center;\n  font-size: clamp(12px, 0.614rem + 0.68vw, 18px);\n  font-weight: 600;\n  color: ${base.colors.green900};\n  padding: 4px;\n`;\nexport const CountLike = styled.span`\n  display: grid;\n  justify-content: start;\n  align-items: center;\n  font-size: clamp(12px, 0.659rem + 0.45vw, 16px);\n  color: ${base.colors.green900};\n  margin: 0;\n  padding: 4px;\n`;\n\n// *******   POST *******\nexport const WrapPost = styled.div`\n  display: grid;\n  grid-template-columns: minmax(288px, 552px);\n  justify-content: start;\n  align-items: center;\n  gap: 8px;\n  border-radius: 14px;\n  padding: 8px;\n  margin: 0 auto;\n  background-color: ${base.colors.green50};\n  @media screen and (min-width: 480px) {\n    grid-template-rows: 160px 100px 40px;\n  }\n`;\nexport const WrapMain = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-template-rows: auto auto;\n  padding: 0;\n  margin: 0;\n  @media screen and (min-width: 480px) {\n    grid-template-columns: 240px 1fr;\n    grid-template-rows: 160px;\n    gap: 8px;\n  }\n`;\nexport const WrapImgPost = styled.div`\n  display: grid;\n  grid-template-columns: minmax(280px, 400px);\n  grid-template-rows: auto;\n  justify-content: center;\n  align-items: center;\n  border-radius: 10px;\n  .img-post {\n    border-radius: 12px;\n    justify-self: stretch;\n    align-self: stretch;\n  }\n  @media screen and (min-width: 480px) {\n    grid-template-columns: 240px;\n    grid-template-rows: 160px;\n  }\n`;\nexport const WrapInfo = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-template-rows: 20px 1fr;\n  align-items: start;\n  gap: 8px;\n  padding: 8px;\n`;\nexport const WrapTag = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  justify-content: space-between;\n  align-items: center;\n  column-gap: 8px;\n  padding: 0;\n  .tags {\n    display: grid;\n    grid-template-columns: 20px 1fr;\n    justify-content: start;\n    align-items: center;\n    gap: 8px;\n  }\n  .icon-tag {\n    width: 16px;\n    height: 16px;\n    fill: ${base.colors.yellow};\n  }\n  .post-tag {\n    box-sizing: border-box;\n    font-size: clamp(16px, 0.955rem + 0.23vw, 18px);\n    font-weight: 700;\n    color: ${base.colors.yellow};\n  }\n  .date {\n    box-sizing: border-box;\n    font-size: clamp(12px, 0.705rem + 0.23vw, 14px);\n    font-weight: 400;\n    text-align: end;\n    color: ${base.colors.green900};\n  }\n`;\nexport const WrapTitle = styled.div`\n  display: grid;\n  grid-template-columns: 20px 1fr;\n  justify-content: start;\n  align-items: start;\n  gap: 4px;\n  padding: 0;\n  .icon-title {\n    width: 16px;\n    height: 16px;\n    fill: ${base.colors.green900};\n  }\n  .post-title {\n    box-sizing: border-box;\n    font-size: clamp(16px, 0.909rem + 0.45vw, 20px);\n    font-weight: 500;\n    color: ${base.colors.green900};\n    word-wrap: break-word;\n    overflow-wrap: anywhere;\n  }\n`;\nexport const PostText = styled.p`\n  display: grid;\n  grid-template-rows: 1fr;\n  justify-content: start;\n  align-items: start;\n  padding: 4px;\n  margin: 0;\n  font-size: clamp(12px, 0.659rem + 0.45vw, 16px);\n  color: ${base.colors.green900};\n  overflow-y: auto;\n  scroll-behavior: smooth;\n  &::-webkit-scrollbar {\n    width: 8px;\n    height: 50px;\n  }\n  /* &::-webkit-scrollbar-track {\n    background: #f6f6f6;\n  } */\n  &::-webkit-scrollbar-thumb {\n    border-radius: 12px;\n    background: #c8e6c9;\n  }\n  /* &::-webkit-scrollbar-thumb:hover {\n    background: #249fa3;\n  } */\n  @media screen and (min-width: 480px) {\n    grid-template-rows: 80px;\n  }\n`;\nexport const WrapReviews = styled.div`\n  display: grid;\n  grid-template-columns: 28px 1fr 28px 28px;\n  grid-template-rows: 36px;\n  gap: 4px;\n  justify-content: start;\n  align-items: center;\n  padding: 2px 0;\n`;\nexport const ForComment = styled.input`\n  display: grid;\n  grid-template-columns: 1fr;\n  justify-self: stretch;\n  align-self: stretch;\n  border-radius: 8px;\n  border: none;\n  outline: none;\n  font-size: 16px;\n  padding: 4px 6px;\n`;\nexport const BtnIcons = styled.button`\n  display: grid;\n  align-items: center;\n  background-color: transparent;\n  border: none;\n  padding-inline: 0;\n  cursor: pointer;\n  .icon {\n    width: 24px;\n    height: 24px;\n    padding: 0;\n  }\n  .like {\n    fill: ${base.colors.like};\n  }\n  .coment {\n    fill: ${base.colors.yellow};\n  }\n  .send {\n    fill: ${base.colors.yellow};\n  }\n  .dots {\n    fill: ${base.colors.green900};\n  }\n`;\n\n// *******   USER POST  *******\nexport const WrapPostId = styled.div`\n  display: grid;\n  grid-template-columns: minmax(268px, 1fr);\n  grid-template-rows: 1fr 40px 74px;\n  gap: 16px;\n  padding: 4px;\n  margin: 0 auto;\n`;\nexport const WrapItem = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-template-rows: auto auto;\n  gap: 8px;\n  padding: 0;\n  margin: 0 auto;\n`;\nexport const BackLink = styled(Link)`\n  box-sizing: border-box;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 16px;\n  font-weight: 600;\n  text-decoration: none;\n  color: #ffffff;\n  background-color: ${base.colors.green100};\n  transition: all 0.3s;\n  border: none;\n  border-radius: 20px;\n  cursor: pointer;\n  &:hover,\n  :focus {\n    background-color: ${base.colors.green200};\n  }\n`;\n\n// *******   CREATE  POST *******\nexport const WrapCreate = styled.div`\n  position: relative;\n  display: grid;\n  grid-template-columns: minmax(304px, 552px);\n  grid-template-rows: 1fr 74px;\n  justify-content: center;\n  align-items: center;\n  gap: 8px;\n  padding: 8px 0;\n  margin: 0 auto;\n  @media screen and (min-width: 480px) {\n    padding: 16px 8px;\n  }\n`;\nexport const FormPost = styled.form`\n  display: grid;\n  grid-template-columns: minmax(288px, 552px);\n  grid-template-rows: 40px 40px 40px 1fr 88px;\n  justify-content: start;\n  align-items: center;\n  border: 2px solid ${base.colors.green300};\n  border-radius: 14px;\n  gap: 16px;\n  background-color: ${base.colors.green50};\n  padding: 8px;\n  margin: 0 auto;\n  .wrap-radio {\n    display: grid;\n    grid-template-columns: repeat(auto-fit, 84px);\n    justify-content: flex-start;\n    align-items: center;\n    gap: 8px;\n  }\n  .input {\n    display: grid;\n    grid-template-columns: 1fr;\n    box-sizing: border-box;\n    font-size: 16px;\n    font-weight: 400;\n    border-radius: 8px;\n    border: 1px solid ${base.colors.green300};\n    outline: ${base.colors.green300};\n    color: ${base.colors.green900};\n    justify-self: stretch;\n    align-self: stretch;\n    padding: 4px 8px;\n  }\n  .input::placeholder {\n    font-size: 16px;\n    color: ${base.colors.green300};\n  }\n  .label {\n    display: grid;\n    grid-template-columns: 12px 1fr;\n    justify-content: start;\n    align-items: center;\n    gap: 4px;\n    font-size: 16px;\n    font-weight: 500;\n    color: ${base.colors.green900};\n  }\n  .textarea {\n    display: grid;\n    grid-template-columns: minmax(256px 460px);\n    box-sizing: border-box;\n    font-size: 16px;\n    font-weight: 400;\n    color: ${base.colors.green900};\n    border-radius: 8px;\n    border: 1px solid ${base.colors.green300};\n    outline: ${base.colors.green300};\n    resize: vertical;\n    padding: 4px 8px;\n  }\n  .textarea::placeholder {\n    font-size: 16px;\n    color: ${base.colors.green300};\n  }\n  @media screen and (min-width: 480px) {\n    grid-template-columns: 460px;\n    grid-template-rows: 40px 40px 40px 1fr 40px;\n  }\n`;\nexport const WrapBtn = styled.div`\n  display: grid;\n  grid-template-columns: minmax(288px, 1fr);\n  grid-template-rows: 40px 40px;\n  justify-content: center;\n  align-items: center;\n  gap: 8px;\n  .btn {\n    display: grid;\n    grid-template-columns: 1fr;\n    grid-template-rows: 40px;\n    justify-content: center;\n    align-items: center;\n    font-size: 16px;\n    font-weight: 600;\n    color: #ffffff;\n    text-align: center;\n    background-color: ${base.colors.green500};\n    transition: all 0.3s;\n    border: none;\n    border-radius: 20px;\n    text-decoration: none;\n    padding: 0;\n    cursor: pointer;\n    &:hover,\n    :focus {\n      background-color: ${base.colors.green700};\n    }\n  }\n  @media screen and (min-width: 480px) {\n    grid-template-columns: 1fr 1fr;\n    grid-template-rows: 40px;\n  }\n`;\n\n// *******   USER POST EDIT *******\nexport const WrapEditPost = styled.div`\n  display: grid;\n  grid-template-columns: minmax(268px, 552px);\n  grid-template-rows: 40px auto 40px auto 88px auto;\n  justify-content: start;\n  align-items: center;\n  border-radius: 14px;\n  gap: 16px;\n  background-color: ${base.colors.green50};\n  padding: 4px;\n  margin: 0 auto;\n  .wrap-radio {\n    display: grid;\n    grid-template-columns: repeat(auto-fit, 84px);\n    justify-content: start;\n    align-items: center;\n    gap: 8px;\n  }\n  .input {\n    display: grid;\n    grid-template-columns: 1fr;\n    box-sizing: border-box;\n    font-size: 16px;\n    font-weight: 400;\n    border-radius: 8px;\n    border: 1px solid ${base.colors.green300};\n    outline: ${base.colors.green300};\n    color: ${base.colors.green900};\n    justify-self: stretch;\n    align-self: stretch;\n    padding: 4px 8px;\n  }\n  .input::placeholder {\n    font-size: 16px;\n    color: ${base.colors.green300};\n  }\n  .label {\n    display: grid;\n    grid-template-columns: 12px 1fr;\n    justify-content: start;\n    align-items: center;\n    gap: 4px;\n    font-size: 16px;\n    font-weight: 500;\n    color: ${base.colors.green900};\n  }\n  .textarea {\n    display: grid;\n    grid-template-columns: 1fr;\n    box-sizing: border-box;\n    font-size: 16px;\n    font-weight: 400;\n    color: ${base.colors.green900};\n    border-radius: 8px;\n    border: 1px solid ${base.colors.green300};\n    outline: ${base.colors.green300};\n    resize: vertical;\n    padding: 4px 8px;\n  }\n  .textarea::placeholder {\n    font-size: 16px;\n    color: ${base.colors.green300};\n  }\n  @media screen and (min-width: 480px) {\n    /* grid-template-columns: 460px; */\n    grid-template-rows: 40px 40px 40px 1fr 40px auto;\n  }\n`;\n","import React from 'react';\nimport {\n  WrapLink,\n  WrapList,\n  WrapUserPost,\n} from 'components/Posts/Posts.styled';\nimport Post from 'components/Posts/Post';\nimport EmptyPage from 'components/Helper/EmptyPage';\nimport { nanoid } from '@reduxjs/toolkit';\nimport { useLocation } from 'react-router-dom';\n\nexport default function UserPostsList({ posts }) {\n  const location = useLocation();\n\n  const Arr = Array.isArray(posts) && posts.length > 0;\n  return (\n    <WrapList>\n      {Arr ? (\n        posts.map(post => (\n          <WrapUserPost key={nanoid()}>\n            <WrapLink\n              key={nanoid()}\n              to={`${post._id}`}\n              state={{ from: location }}\n            >\n              <Post key={nanoid()} post={post} />\n            </WrapLink>\n          </WrapUserPost>\n        ))\n      ) : (\n        <EmptyPage message={\"There's nothing here yet\"} />\n      )}\n    </WrapList>\n  );\n}\n","import React from 'react';\nimport { useGetUserPostsQuery } from '../redux/PostsSlice';\nimport EmptyPage from 'components/Helper/EmptyPage';\nimport UserPostsList from 'components/Posts/UserPostsList';\nimport Loading from 'components/Helper/Loading';\nimport { WrapPostPage } from 'components/Posts/Posts.styled';\n\nexport default function UserPage() {\n  const { data: posts, error, isLoading } = useGetUserPostsQuery();\n  return (\n    <WrapPostPage>\n      {isLoading ? <Loading /> : <UserPostsList posts={posts} />}\n      {error && (\n        <EmptyPage\n          message={'The service is temporarily unavailable. Try later'}\n        />\n      )}\n    </WrapPostPage>\n  );\n}\n"],"names":["EmptyPage","_ref","message","_jsxs","WrapEmpty","children","_jsx","className","GiSherlockHolmes","Post","post","date","Date","createdAt","formattedDate","Intl","DateTimeFormat","day","month","year","format","replace","WrapPost","WrapMain","WrapImgPost","src","imageUrl","alt","title","WrapInfo","WrapTag","BsFillBookmarkFill","tag","WrapTitle","BsCircleFill","PostText","text","WrapReviews","BtnIcons","BsChatRightTextFill","ForComment","BsSendFill","BsThreeDotsVertical","WrapPostPage","styled","_templateObject","_taggedTemplateLiteral","WrapList","_templateObject2","WrapPanelPost","_templateObject3","WrapUserPost","_templateObject4","WrapLink","Link","_templateObject5","WrapPanel","_templateObject6","PanelAvatar","_templateObject7","base","PanelName","_templateObject8","CountLike","_templateObject9","_templateObject10","_templateObject11","_templateObject12","_templateObject13","_templateObject14","_templateObject15","_templateObject16","_templateObject17","_templateObject18","_templateObject19","WrapPostId","_templateObject20","WrapItem","_templateObject21","BackLink","_templateObject22","WrapCreate","_templateObject23","FormPost","_templateObject24","WrapBtn","_templateObject25","WrapEditPost","_templateObject26","UserPostsList","posts","location","useLocation","Arr","Array","isArray","length","map","to","concat","_id","state","from","nanoid","UserPage","_useGetUserPostsQuery","useGetUserPostsQuery","data","error","isLoading","Loading"],"sourceRoot":""}