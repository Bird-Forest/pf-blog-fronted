{"version":3,"file":"static/js/643.bebfd43d.chunk.js","mappings":"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","sources":["components/Helper/NotifNegative.jsx","components/Helper/NotifPositive.jsx","components/Posts/Post.jsx","components/Posts/Posts.styled.js","components/Posts/EditPost.jsx","components/Helper/ModalWindow.jsx","components/Posts/UserPost.jsx"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { GiShamrock } from 'react-icons/gi';\nimport { WrapNotif } from './Helper.styled';\n\nexport default function NotifNegative({ message, onClose }) {\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      onClose();\n    }, 5000);\n\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [onClose]);\n\n  return (\n    <WrapNotif>\n      <GiShamrock className=\"icon-notif yellow\" />\n      <div className=\"wrap-notif\">\n        <p className=\"title-notif\">Mistake</p>\n        <p className=\"text-notif\">{message}</p>\n      </div>\n    </WrapNotif>\n  );\n}\n","import React, { useEffect } from 'react';\nimport { GiShamrock } from 'react-icons/gi';\nimport { WrapNotif } from './Helper.styled';\n\nexport default function NotifPositive({ message, onClose }) {\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      onClose();\n    }, 5000);\n\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [onClose]);\n  return (\n    <WrapNotif>\n      <GiShamrock className=\"icon-notif green\" />\n      <div className=\"wrap-notif\">\n        <p className=\"title-notif\">Success</p>\n        <p className=\"text-notif\">{message}</p>\n      </div>\n    </WrapNotif>\n  );\n}\n","import React, { useState } from 'react';\nimport {\n  BsFillBookmarkFill,\n  BsCircleFill,\n  BsHandThumbsUpFill,\n  BsChatRightTextFill,\n  BsSendFill,\n  BsThreeDotsVertical,\n} from 'react-icons/bs';\n\nimport {\n  BtnIcons,\n  CountLike,\n  ForComment,\n  PostText,\n  UserName,\n  WrapAvatar,\n  WrapComment,\n  WrapImgPost,\n  WrapInfo,\n  WrapMain,\n  WrapPost,\n  WrapReviews,\n  WrapTag,\n  WrapTitle,\n  WrapUser,\n  WrapUserPost,\n} from './Posts.styled';\nimport { useUpdateLikesMutation } from '../../redux/PostsSlice';\n\nexport default function Post({ post }) {\n  const date = new Date(post.createdAt);\n  const formattedDate = new Intl.DateTimeFormat('en-US', {\n    day: '2-digit',\n    month: '2-digit',\n    year: 'numeric',\n  })\n    .format(date)\n    .replace(/\\//g, '.');\n  // console.log(formattedDate);\n\n  const [isDisabled, setIsDisabled] = useState(false);\n\n  const [updateLikes] = useUpdateLikesMutation();\n  const id = post._id;\n\n  const onAddLike = () => {\n    const like = Number(post.viewsCount + 1);\n    let count = { viewsCount: like };\n\n    updateLikes({ id, count });\n    setIsDisabled(true);\n  };\n\n  return (\n    <WrapUserPost>\n      <WrapUser>\n        <div className=\"bgr\">\n          <WrapAvatar>R</WrapAvatar>\n          <UserName>Tom Fisher</UserName>\n          <BtnIcons type=\"button\" onClick={onAddLike} disabled={isDisabled}>\n            <BsHandThumbsUpFill className=\"icon like\" />\n          </BtnIcons>\n          <CountLike>{post.viewsCount}</CountLike>\n        </div>\n      </WrapUser>\n      <WrapPost>\n        <WrapMain>\n          <WrapImgPost>\n            <img src={post.imageUrl} alt={post.title} className=\"img-post\" />\n          </WrapImgPost>\n          <WrapInfo>\n            <WrapTag>\n              <div className=\"tags\">\n                <BsFillBookmarkFill className=\"icon-tag\" />\n                <h4 className=\"post-tag\">{post.tag}</h4>\n              </div>\n              <p className=\"date\">{formattedDate}</p>\n            </WrapTag>\n            <WrapTitle>\n              <BsCircleFill className=\"icon-title\" />\n              <h3 className=\"post-title\">{post.title}</h3>\n            </WrapTitle>\n          </WrapInfo>\n        </WrapMain>\n        <PostText>{post.text}</PostText>\n        <WrapReviews>\n          <BtnIcons>\n            <BsChatRightTextFill className=\"icon coment\" />\n          </BtnIcons>\n          <WrapComment>\n            <ForComment />\n            <BtnIcons>\n              <BsSendFill className=\"icon send\" />\n            </BtnIcons>\n          </WrapComment>\n          <BtnIcons>\n            <BsThreeDotsVertical className=\"icon dots\" />\n          </BtnIcons>\n        </WrapReviews>\n      </WrapPost>\n    </WrapUserPost>\n  );\n}\n","import { base } from 'baseTheme';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\n// *******   CREATE  POST *******\nexport const WrapCreate = styled.div`\n  position: relative;\n  display: grid;\n  grid-template-columns: minmax(292px, 1fr);\n  grid-template-rows: 1fr 74px;\n  justify-content: center;\n  align-items: center;\n  gap: 8px;\n  padding: 8px 4px;\n  margin: 0 auto;\n  @media screen and (min-width: 480px) {\n    padding: 16px 8px;\n  }\n`;\n\nexport const FormPost = styled.form`\n  display: grid;\n  grid-template-columns: minmax(292px, 1fr);\n  grid-template-rows: 40px 40px 40px 1fr 88px;\n  justify-content: start;\n  align-items: center;\n  border: 2px solid ${base.colors.green300};\n  border-radius: 14px;\n  gap: 16px;\n  background-color: ${base.colors.green50};\n  padding: 8px;\n  margin: 0 auto;\n  .wrap-radio {\n    display: grid;\n    grid-template-columns: repeat(auto-fit, 84px);\n    justify-content: flex-start;\n    align-items: center;\n    gap: 8px;\n  }\n  .input {\n    display: grid;\n    grid-template-columns: 1fr;\n    box-sizing: border-box;\n    font-size: 16px;\n    font-weight: 400;\n    border-radius: 8px;\n    border: 1px solid ${base.colors.green300};\n    outline: ${base.colors.green300};\n    color: ${base.colors.green900};\n    justify-self: stretch;\n    align-self: stretch;\n    padding: 4px 8px;\n  }\n  .input::placeholder {\n    font-size: 16px;\n    color: ${base.colors.green300};\n  }\n  .label {\n    display: grid;\n    grid-template-columns: 12px 1fr;\n    justify-content: start;\n    align-items: center;\n    gap: 4px;\n    font-size: 16px;\n    font-weight: 500;\n    color: ${base.colors.green900};\n  }\n  .textarea {\n    display: grid;\n    grid-template-columns: minmax(256px 460px);\n    box-sizing: border-box;\n    font-size: 16px;\n    font-weight: 400;\n    color: ${base.colors.green900};\n    border-radius: 8px;\n    border: 1px solid ${base.colors.green300};\n    outline: ${base.colors.green300};\n    resize: vertical;\n    padding: 4px 8px;\n  }\n  .textarea::placeholder {\n    font-size: 16px;\n    color: ${base.colors.green300};\n  }\n  @media screen and (min-width: 480px) {\n    grid-template-columns: 460px;\n    grid-template-rows: 40px 40px 40px 1fr 40px;\n  }\n`;\nexport const WrapBtn = styled.div`\n  display: grid;\n  grid-template-columns: minmax(292px, 1fr);\n  grid-template-rows: 40px 40px;\n  gap: 8px;\n  .btn {\n    box-sizing: border-box;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    font-size: 16px;\n    font-weight: 600;\n    color: #ffffff;\n    background-color: ${base.colors.green500};\n    transition: all 0.3s;\n    border: none;\n    border-radius: 20px;\n    text-decoration: none;\n    cursor: pointer;\n    &:hover,\n    :focus {\n      background-color: ${base.colors.green700};\n    }\n  }\n  @media screen and (min-width: 480px) {\n    grid-template-columns: 1fr 1fr;\n    grid-template-rows: 40px;\n  }\n`;\n\n// *******   POST LIST *******\nexport const WrapPostsList = styled.ul`\n  display: grid;\n  grid-template-columns: minmax(312px, 1fr);\n  grid-template-rows: 1fr;\n  gap: 16px;\n  padding: 8px 4px;\n  margin: 0 auto;\n  @media screen and (min-width: 480px) {\n    padding: 8px;\n  }\n  @media screen and (min-width: 960px) {\n    grid-template-columns: repeat(2, 1fr);\n    padding: 16px;\n  }\n`;\n\n// *******   POST *******\nexport const WrapUserPost = styled.li`\n  display: grid;\n  grid-template-columns: minmax(280px, auto);\n  grid-template-rows: auto auto;\n  gap: 4px;\n  padding: 4px;\n  margin: 0 auto;\n`;\nexport const WrapUser = styled.div`\n  display: grid;\n  grid-template-columns: 272px 1fr;\n  .bgr {\n    display: grid;\n    grid-template-columns: 36px 124px 40px 56px;\n    grid-template-rows: 36px;\n    justify-content: start;\n    align-items: center;\n    gap: 4px;\n    border: none;\n    border-radius: 30px;\n    background-color: #ffffff;\n    padding: 2px 2px;\n    margin: 0;\n  }\n`;\nexport const WrapAvatar = styled.div`\n  display: grid;\n  grid-template-rows: 36px;\n  justify-content: center;\n  align-items: center;\n  border-radius: 50%;\n  background-color: yellow;\n`;\nexport const UserName = styled.p`\n  display: grid;\n  justify-content: start;\n  align-items: center;\n  font-size: clamp(12px, 0.614rem + 0.68vw, 18px);\n  font-weight: 600;\n  color: ${base.colors.green900};\n  padding: 4px;\n`;\nexport const CountLike = styled.span`\n  display: grid;\n  justify-content: start;\n  align-items: center;\n  font-size: clamp(12px, 0.659rem + 0.45vw, 16px);\n  color: ${base.colors.green900};\n  margin: 0;\n  padding: 4px;\n`;\nexport const WrapPost = styled.div`\n  display: grid;\n  grid-template-columns: minmax(280px, 552px);\n  justify-content: start;\n  align-items: center;\n  gap: 8px;\n  border-radius: 14px;\n  padding: 8px;\n  margin: 0 auto;\n  background-color: ${base.colors.green50};\n  @media screen and (min-width: 480px) {\n    grid-template-rows: 160px 100px 40px;\n  }\n`;\n\nexport const WrapMain = styled.div`\n  display: grid;\n  padding: 0;\n  margin: 0;\n  @media screen and (min-width: 480px) {\n    grid-template-columns: 240px 1fr;\n    grid-template-rows: 160px;\n    gap: 8px;\n  }\n`;\nexport const WrapImgPost = styled.div`\n  display: grid;\n  grid-template-columns: minmax(280px, 400px);\n  grid-template-rows: auto;\n  justify-content: center;\n  align-items: center;\n  border-radius: 10px;\n  .img-post {\n    border-radius: 12px;\n    justify-self: stretch;\n    align-self: stretch;\n  }\n  @media screen and (min-width: 480px) {\n    grid-template-columns: 240px;\n    grid-template-rows: 160px;\n  }\n`;\nexport const WrapInfo = styled.div`\n  display: grid;\n  gap: 8px;\n  grid-template-columns: 1fr;\n  grid-template-rows: 20px 1fr;\n  align-items: start;\n  padding: 8px;\n`;\nexport const WrapTag = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  justify-content: space-between;\n  align-items: center;\n  column-gap: 8px;\n  padding: 0;\n  .tags {\n    display: grid;\n    grid-template-columns: 20px 1fr;\n    justify-content: start;\n    align-items: center;\n    gap: 8px;\n  }\n  .icon-tag {\n    width: 16px;\n    height: 16px;\n    fill: ${base.colors.yellow};\n  }\n  .post-tag {\n    box-sizing: border-box;\n    font-size: clamp(16px, 0.955rem + 0.23vw, 18px);\n    font-weight: 700;\n    color: ${base.colors.yellow};\n  }\n  .date {\n    box-sizing: border-box;\n    font-size: clamp(12px, 0.705rem + 0.23vw, 14px);\n    font-weight: 400;\n    text-align: end;\n    color: ${base.colors.green900};\n  }\n`;\nexport const WrapTitle = styled.div`\n  display: grid;\n  grid-template-columns: 20px 1fr;\n  justify-content: start;\n  align-items: start;\n  gap: 4px;\n  padding: 0;\n  .icon-title {\n    width: 16px;\n    height: 16px;\n    fill: ${base.colors.green900};\n  }\n  .post-title {\n    box-sizing: border-box;\n    font-size: clamp(16px, 0.909rem + 0.45vw, 20px);\n    font-weight: 500;\n    color: ${base.colors.green900};\n    word-wrap: break-word;\n    overflow-wrap: anywhere;\n  }\n`;\nexport const PostText = styled.p`\n  display: grid;\n  grid-template-rows: 1fr;\n  justify-content: start;\n  align-items: start;\n  padding: 4px;\n  margin: 0;\n  font-size: clamp(12px, 0.659rem + 0.45vw, 16px);\n  color: ${base.colors.green900};\n  overflow-y: auto;\n  scroll-behavior: smooth;\n  &::-webkit-scrollbar {\n    width: 8px;\n    height: 50px;\n  }\n  /* &::-webkit-scrollbar-track {\n    background: #f6f6f6;\n  } */\n  &::-webkit-scrollbar-thumb {\n    border-radius: 12px;\n    background: #c8e6c9;\n  }\n  /* &::-webkit-scrollbar-thumb:hover {\n    background: #249fa3;\n  } */\n  @media screen and (min-width: 480px) {\n    grid-template-rows: 80px;\n  }\n`;\nexport const WrapReviews = styled.div`\n  display: grid;\n  grid-template-columns: 36px 1fr 36px;\n  grid-template-rows: 36px;\n  gap: 4px;\n  justify-content: start;\n  align-items: center;\n  padding: 2px;\n`;\n\nexport const WrapComment = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 36px;\n  justify-content: start;\n  align-items: center;\n  gap: 4px;\n`;\nexport const ForComment = styled.input`\n  display: grid;\n  grid-template-columns: minmax(200px 1fr);\n  border-radius: 8px;\n  border: 1px solid white;\n  outline: none;\n  font-size: 16px;\n  padding: 6px 8px;\n`;\nexport const BtnIcons = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 36px;\n  height: 36px;\n  background-color: transparent;\n  border: none;\n  padding: 4px;\n  cursor: pointer;\n  .icon {\n    width: 24px;\n    height: 24px;\n  }\n  .like {\n    fill: ${base.colors.like};\n  }\n  .coment {\n    fill: ${base.colors.yellow};\n  }\n  .send {\n    fill: ${base.colors.yellow};\n  }\n  .dots {\n    fill: ${base.colors.green900};\n  }\n`;\n\n// *******   USER PAGE *******\nexport const WrapUserList = styled.ul`\n  display: grid;\n  /* grid-template-columns: repeat(auto-fit, minmax(312px, 1fr)); */\n  grid-template-columns: minmax(312px, auto);\n  grid-template-rows: 1fr;\n  gap: 16px;\n  padding: 8px 4px;\n  margin: 0 auto;\n  @media screen and (min-width: 480px) {\n    padding: 8px;\n  }\n`;\nexport const WrapLink = styled(Link)`\n  text-decoration: none;\n  padding: 0;\n  margin: 0;\n`;\n\n// *******   USER POST  *******\nexport const WrapPostId = styled.div`\n  display: grid;\n  grid-template-columns: minmax(268px, 1fr);\n  grid-template-rows: 1fr 40px 74px;\n  gap: 16px;\n  padding: 4px;\n  margin: 0 auto;\n`;\nexport const WrapItem = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-template-rows: auto auto;\n  gap: 8px;\n  padding: 0;\n  margin: 0 auto;\n`;\nexport const BackLink = styled(Link)`\n  box-sizing: border-box;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 16px;\n  font-weight: 600;\n  text-decoration: none;\n  color: #ffffff;\n  background-color: ${base.colors.green100};\n  transition: all 0.3s;\n  border: none;\n  border-radius: 20px;\n  cursor: pointer;\n  &:hover,\n  :focus {\n    background-color: ${base.colors.green200};\n  }\n`;\n\n// *******   USER POST EDIT *******\nexport const WrapEditPost = styled.div`\n  display: grid;\n  grid-template-columns: minmax(268px, 1fr);\n  grid-template-rows: 40px auto 40px auto 88px auto;\n  justify-content: start;\n  align-items: center;\n  border-radius: 14px;\n  gap: 16px;\n  background-color: ${base.colors.green50};\n  padding: 0;\n  margin: 0 auto;\n  .wrap-radio {\n    display: grid;\n    grid-template-columns: repeat(auto-fit, 84px);\n    justify-content: start;\n    align-items: center;\n    gap: 8px;\n  }\n  .input {\n    display: grid;\n    grid-template-columns: 1fr;\n    box-sizing: border-box;\n    font-size: 16px;\n    font-weight: 400;\n    border-radius: 8px;\n    border: 1px solid ${base.colors.green300};\n    outline: ${base.colors.green300};\n    color: ${base.colors.green900};\n    justify-self: stretch;\n    align-self: stretch;\n    padding: 4px 8px;\n  }\n  .input::placeholder {\n    font-size: 16px;\n    color: ${base.colors.green300};\n  }\n  .label {\n    display: grid;\n    grid-template-columns: 12px 1fr;\n    justify-content: start;\n    align-items: center;\n    gap: 4px;\n    font-size: 16px;\n    font-weight: 500;\n    color: ${base.colors.green900};\n  }\n  .textarea {\n    display: grid;\n    grid-template-columns: minmax(254px 460px);\n    box-sizing: border-box;\n    font-size: 16px;\n    font-weight: 400;\n    color: ${base.colors.green900};\n    border-radius: 8px;\n    border: 1px solid ${base.colors.green300};\n    outline: ${base.colors.green300};\n    resize: vertical;\n    padding: 4px 8px;\n  }\n  .textarea::placeholder {\n    font-size: 16px;\n    color: ${base.colors.green300};\n  }\n  @media screen and (min-width: 480px) {\n    grid-template-columns: 460px;\n    grid-template-rows: 40px 40px 40px 1fr 40px auto;\n  }\n`;\n","import React, { useState } from 'react';\nimport { WrapBtn, WrapEditPost } from './Posts.styled';\nimport { useUpdatePostMutation } from '../../redux/PostsSlice';\nimport NotifPositive from 'components/Helper/NotifPositive';\nimport NotifNegative from 'components/Helper/NotifNegative';\n\nexport default function EditPost({ data }) {\n  const id = data._id;\n  const fields = {\n    imageUrl: data.imageUrl,\n    tag: data.tag,\n    title: data.title,\n    text: data.text,\n  };\n\n  const [isShow, setIsShow] = useState(false);\n  const [post, setPost] = useState(fields);\n  const [updatePost, { isError, isSuccess }] = useUpdatePostMutation();\n\n  const onChangeField = (field, value) => {\n    setPost(prevState => ({\n      ...prevState,\n      [field]: value,\n    }));\n  };\n\n  const handleUpdate = () => {\n    // onUpdatePost(id, post);\n    // console.log('handleUpdate', post);\n    updatePost({ id, post });\n    setIsShow(true);\n  };\n\n  const onReset = () => {\n    setPost({\n      imageUrl: '',\n      tag: '',\n      title: '',\n      text: '',\n    });\n  };\n\n  const showSuccess = isShow && isSuccess;\n  const showError = isShow && isError;\n  // console.log(showSuccess);\n  // console.log(showError);\n\n  return (\n    <WrapEditPost autoComplete=\"off\">\n      <input\n        className=\"input\"\n        name=\"imageUrl\"\n        type=\"text\"\n        value={post.imageUrl}\n        onChange={e => onChangeField('imageUrl', e.target.value)}\n      />\n      <div className=\"wrap-radio\">\n        <label htmlFor=\"tags\" className=\"label\">\n          <input\n            type=\"radio\"\n            name=\"tag\"\n            value=\"animals\"\n            onChange={e => onChangeField('tag', e.target.value)}\n          />\n          animals\n        </label>\n        <label htmlFor=\"tags\" className=\"label\">\n          <input\n            type=\"radio\"\n            name=\"tag\"\n            value=\"hobby\"\n            onChange={e => onChangeField('tag', e.target.value)}\n          />\n          hobby\n        </label>\n        <label htmlFor=\"tags\" className=\"label\">\n          <input\n            type=\"radio\"\n            name=\"tag\"\n            value=\"children\"\n            onChange={e => onChangeField('tag', e.target.value)}\n          />\n          children\n        </label>\n        <label htmlFor=\"tags\" className=\"label\">\n          <input\n            type=\"radio\"\n            name=\"tag\"\n            value=\"health\"\n            onChange={e => onChangeField('tag', e.target.value)}\n          />\n          health\n        </label>\n      </div>\n      <input\n        className=\"input\"\n        name=\"title\"\n        type=\"text\"\n        value={post.title}\n        onChange={e => onChangeField('title', e.target.value)}\n      />\n      <textarea\n        name=\"text\"\n        rows=\"auto\"\n        type=\"textarea\"\n        className=\"textarea\"\n        value={post.text}\n        onChange={e => onChangeField('text', e.target.value)}\n      />\n      <WrapBtn>\n        <button type=\"submit\" className=\"btn\" onClick={onReset}>\n          reset\n        </button>\n        <button type=\"button\" className=\"btn\" onClick={handleUpdate}>\n          update post\n        </button>\n      </WrapBtn>\n      {showSuccess && (\n        <NotifPositive\n          message={'List of posts updated'}\n          onClose={() => setIsShow(false)}\n        />\n      )}\n      {showError && (\n        <NotifNegative\n          message={'Please, try again later'}\n          onClose={() => setIsShow(false)}\n        />\n      )}\n    </WrapEditPost>\n  );\n}\n","import React, { useEffect } from 'react';\nimport { WrapLoading, WrapModal } from './Helper.styled';\n\nexport default function ModalWindow({ onClose, content }) {\n  useEffect(() => {\n    const handleEscape = event => {\n      if (event.key === 'Escape') {\n        onClose();\n      }\n    };\n    window.addEventListener('keydown', handleEscape);\n    document.body.style.overflow = 'hidden';\n\n    return () => {\n      window.removeEventListener('keydown', handleEscape);\n      document.body.style.overflow = 'auto';\n    };\n  }, [onClose]);\n  return (\n    <WrapLoading onClick={onClose}>\n      <WrapModal onClick={e => e.stopPropagation()}>{content}</WrapModal>\n    </WrapLoading>\n  );\n}\n","import React, { useRef, useState } from 'react';\nimport {\n  BackLink,\n  WrapBtn,\n  WrapItem,\n  WrapPostId,\n  WrapUserList,\n} from './Posts.styled';\nimport Post from './Post';\nimport {\n  useDeletePostMutation,\n  useGetPostByIdQuery,\n} from '../../redux/PostsSlice';\nimport { useLocation, useParams } from 'react-router-dom';\nimport EditPost from './EditPost';\nimport ModalWindow from 'components/Helper/ModalWindow';\nimport { createPortal } from 'react-dom';\nimport Loading from 'components/Helper/Loading';\nimport { WrapRender } from 'pages/Page.styled';\nimport NotifPositive from 'components/Helper/NotifPositive';\nimport NotifNegative from 'components/Helper/NotifNegative';\n\nexport default function UserPost() {\n  const [showModal, setShowModal] = useState(false);\n  const [isShow, setIsShow] = useState(false);\n  const location = useLocation();\n\n  const backHref = useRef(location.state?.from ?? '/user-posts');\n  const params = useParams();\n  const id = params.id;\n  // console.log(id);\n  const { data, isLoading } = useGetPostByIdQuery(id);\n  const post = data;\n  // console.log(post);\n  const [deletePost, { isError, isSuccess }] = useDeletePostMutation();\n\n  const onEdit = () => {\n    setShowModal(true);\n  };\n\n  const onDelete = () => {\n    deletePost(id);\n    setIsShow(true);\n  };\n  const showSuccess = isShow && isSuccess;\n  const showError = isShow && isError;\n  // console.log('showSuccess', showSuccess);\n  // console.log('showError', showError);\n\n  return (\n    <WrapRender>\n      <WrapUserList>\n        <WrapPostId>\n          {isLoading ? (\n            <Loading />\n          ) : (\n            <WrapItem>\n              <Post post={post} />\n              <WrapBtn>\n                <button type=\"button\" onClick={onEdit} className=\"btn\">\n                  edit\n                </button>\n                {showModal &&\n                  createPortal(\n                    <ModalWindow\n                      onClose={() => setShowModal(false)}\n                      content={<EditPost data={data} />}\n                    />,\n                    document.body\n                  )}\n                <button type=\"button\" onClick={onDelete} className=\"btn\">\n                  delete\n                </button>\n              </WrapBtn>\n            </WrapItem>\n          )}\n          <BackLink to={backHref.current}>come back</BackLink>\n          {showSuccess && (\n            <NotifPositive\n              message={'List of posts updated'}\n              onClose={() => setIsShow(false)}\n            />\n          )}\n          {showError && (\n            <NotifNegative\n              message={'Please, try again later'}\n              onClose={() => setIsShow(false)}\n            />\n          )}\n        </WrapPostId>\n      </WrapUserList>\n    </WrapRender>\n  );\n}\n"],"names":["NotifNegative","_ref","message","onClose","useEffect","timer","setTimeout","clearTimeout","_jsxs","WrapNotif","children","_jsx","GiShamrock","className","NotifPositive","Post","post","date","Date","createdAt","formattedDate","Intl","DateTimeFormat","day","month","year","format","replace","_useState","useState","_useState2","_slicedToArray","isDisabled","setIsDisabled","_useUpdateLikesMutati","useUpdateLikesMutation","updateLikes","id","_id","WrapUserPost","WrapUser","WrapAvatar","UserName","BtnIcons","type","onClick","like","Number","viewsCount","count","disabled","BsHandThumbsUpFill","CountLike","WrapPost","WrapMain","WrapImgPost","src","imageUrl","alt","title","WrapInfo","WrapTag","BsFillBookmarkFill","tag","WrapTitle","BsCircleFill","PostText","text","WrapReviews","BsChatRightTextFill","WrapComment","ForComment","BsSendFill","BsThreeDotsVertical","WrapCreate","styled","_templateObject","_taggedTemplateLiteral","FormPost","_templateObject2","base","WrapBtn","_templateObject3","WrapPostsList","_templateObject4","_templateObject5","_templateObject6","_templateObject7","_templateObject8","_templateObject9","_templateObject10","_templateObject11","_templateObject12","_templateObject13","_templateObject14","_templateObject15","_templateObject16","_templateObject17","_templateObject18","_templateObject19","_templateObject20","WrapUserList","_templateObject21","WrapLink","Link","_templateObject22","WrapPostId","_templateObject23","WrapItem","_templateObject24","BackLink","_templateObject25","WrapEditPost","_templateObject26","EditPost","data","fields","isShow","setIsShow","_useState3","_useState4","setPost","_useUpdatePostMutatio","useUpdatePostMutation","_useUpdatePostMutatio2","updatePost","_useUpdatePostMutatio3","isError","isSuccess","onChangeField","field","value","prevState","_objectSpread","_defineProperty","showSuccess","showError","autoComplete","name","onChange","e","target","htmlFor","rows","ModalWindow","content","handleEscape","event","key","window","addEventListener","document","body","style","overflow","removeEventListener","WrapLoading","WrapModal","stopPropagation","UserPost","_location$state$from","_location$state","showModal","setShowModal","location","useLocation","backHref","useRef","state","from","useParams","_useGetPostByIdQuery","useGetPostByIdQuery","isLoading","_useDeletePostMutatio","useDeletePostMutation","_useDeletePostMutatio2","deletePost","_useDeletePostMutatio3","WrapRender","Loading","createPortal","to","current"],"sourceRoot":""}