{"version":3,"file":"static/js/729.62ea5835.chunk.js","mappings":"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","sources":["components/Helper/ModalWindow.jsx","components/Posts/Post.jsx","components/Posts/Posts.styled.js","components/Posts/EditPost.jsx","components/Posts/UserPost.jsx"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { WrapModal, WrapOverlayModal } from './Helper.styled';\n\nexport default function ModalWindow({ onClose, content }) {\n  useEffect(() => {\n    const handleEscape = event => {\n      if (event.key === 'Escape') {\n        onClose();\n      }\n    };\n    window.addEventListener('keydown', handleEscape);\n    document.body.style.overflow = 'hidden';\n\n    return () => {\n      window.removeEventListener('keydown', handleEscape);\n      document.body.style.overflow = 'auto';\n    };\n  }, [onClose]);\n  return (\n    <WrapOverlayModal onClick={onClose}>\n      <WrapModal onClick={e => e.stopPropagation()}>{content}</WrapModal>\n    </WrapOverlayModal>\n  );\n}\n","import React from 'react';\nimport {\n  BsFillBookmarkFill,\n  BsCircleFill,\n  BsHandThumbsUpFill,\n  BsChatRightTextFill,\n  BsSendFill,\n  BsThreeDotsVertical,\n} from 'react-icons/bs';\n\nimport {\n  BtnIcons,\n  CountLike,\n  ForComment,\n  PostText,\n  UserName,\n  WrapAvatar,\n  WrapComment,\n  WrapImgPost,\n  WrapInfo,\n  WrapMain,\n  WrapPost,\n  WrapReviews,\n  WrapTag,\n  WrapTitle,\n  WrapUser,\n  WrapUserPost,\n} from './Posts.styled';\nimport { useUpdateLikesMutation } from '../../redux/PostsSlice';\n\nexport default function Post({ post }) {\n  const date = new Date(post.createdAt);\n  const formattedDate = new Intl.DateTimeFormat('en-US', {\n    day: '2-digit',\n    month: '2-digit',\n    year: 'numeric',\n  })\n    .format(date)\n    .replace(/\\//g, '.');\n  // console.log(formattedDate);\n  const [updateLikes] = useUpdateLikesMutation();\n\n  const onAddLike = evt => {\n    const id = evt.currentTarget.name;\n    console.log(id);\n    let count = { viewsCount: Number(post.viewsCount + 1) };\n    console.log(count);\n    updateLikes({ id, count });\n  };\n\n  return (\n    <WrapUserPost>\n      <WrapUser>\n        <div className=\"bgr\">\n          <WrapAvatar>R</WrapAvatar>\n          <UserName>Tom Fisher</UserName>\n          <BtnIcons name={post._id} type=\"button\" onClick={onAddLike}>\n            <BsHandThumbsUpFill className=\"icon like\" />\n          </BtnIcons>\n          <CountLike>{post.viewsCount}</CountLike>\n        </div>\n      </WrapUser>\n      <WrapPost>\n        <WrapMain>\n          <WrapImgPost>\n            <img src={post.imageUrl} alt={post.title} className=\"img-post\" />\n          </WrapImgPost>\n          <WrapInfo>\n            <WrapTag>\n              <div className=\"tags\">\n                <BsFillBookmarkFill className=\"icon-tag\" />\n                <h4 className=\"post-tag\">{post.tag}</h4>\n              </div>\n              <p className=\"date\">{formattedDate}</p>\n            </WrapTag>\n            <WrapTitle>\n              <BsCircleFill className=\"icon-title\" />\n              <h3 className=\"post-title\">{post.title}</h3>\n            </WrapTitle>\n          </WrapInfo>\n        </WrapMain>\n        <PostText>{post.text}</PostText>\n        <WrapReviews>\n          <BtnIcons>\n            <BsChatRightTextFill className=\"icon coment\" />\n          </BtnIcons>\n          <WrapComment>\n            <ForComment />\n            <BtnIcons>\n              <BsSendFill className=\"icon send\" />\n            </BtnIcons>\n          </WrapComment>\n          <BtnIcons>\n            <BsThreeDotsVertical className=\"icon dots\" />\n          </BtnIcons>\n        </WrapReviews>\n      </WrapPost>\n    </WrapUserPost>\n  );\n}\n","import { base } from 'baseTheme';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\n// *******   CREATE  POST *******\n\nexport const WrapCreate = styled.div`\n  display: grid;\n  grid-template-columns: minmax(292px, 1fr);\n  grid-template-rows: 1fr 1fr;\n  gap: 8px;\n  padding: 8px 4px;\n  margin: 0 auto;\n  @media screen and (min-width: 480px) {\n    padding: 8px;\n  }\n`;\n\nexport const FormPost = styled.form`\n  display: grid;\n  grid-template-columns: minmax(292px, 1fr);\n  grid-template-rows: 40px 40px 40px 1fr 88px;\n  justify-content: flex-start;\n  align-items: center;\n  border: 2px solid ${base.colors.green300};\n  border-radius: 14px;\n  gap: 16px;\n  background-color: ${base.colors.green50};\n  padding: 8px;\n  margin: 0 auto;\n  .wrap-radio {\n    display: grid;\n    grid-template-columns: repeat(auto-fit, 84px);\n    justify-content: flex-start;\n    align-items: center;\n    gap: 8px;\n  }\n  .input {\n    display: grid;\n    grid-template-columns: 1fr;\n    box-sizing: border-box;\n    font-size: 16px;\n    font-weight: 400;\n    border-radius: 8px;\n    border: 1px solid ${base.colors.green300};\n    outline: ${base.colors.green300};\n    color: ${base.colors.green900};\n    justify-self: stretch;\n    align-self: stretch;\n    padding: 4px 8px;\n  }\n  .input::placeholder {\n    font-size: 16px;\n    color: ${base.colors.green300};\n  }\n  .label {\n    display: grid;\n    grid-template-columns: 12px 1fr;\n    justify-content: flex-start;\n    align-items: center;\n    gap: 4px;\n    font-size: 16px;\n    font-weight: 500;\n    color: ${base.colors.green900};\n  }\n  .textarea {\n    display: grid;\n    grid-template-columns: minmax(256px 460px);\n    box-sizing: border-box;\n    font-size: 16px;\n    font-weight: 400;\n    color: ${base.colors.green900};\n    border-radius: 8px;\n    border: 1px solid ${base.colors.green300};\n    outline: ${base.colors.green300};\n    resize: vertical;\n    padding: 4px 8px;\n  }\n  .textarea::placeholder {\n    font-size: 16px;\n    color: ${base.colors.green300};\n  }\n  @media screen and (min-width: 480px) {\n    grid-template-columns: 460px;\n    grid-template-rows: 40px 40px 40px 1fr 40px;\n  }\n`;\nexport const WrapBtn = styled.div`\n  display: grid;\n  grid-template-columns: minmax(292px, 1fr);\n  grid-template-rows: 40px 40px;\n  gap: 8px;\n  .btn {\n    box-sizing: border-box;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    font-size: 16px;\n    font-weight: 600;\n    color: #ffffff;\n    background-color: ${base.colors.green500};\n    transition: all 0.3s;\n    border: none;\n    border-radius: 20px;\n    cursor: pointer;\n    &:hover,\n    :focus {\n      background-color: ${base.colors.green700};\n    }\n  }\n  @media screen and (min-width: 480px) {\n    grid-template-columns: 1fr 1fr;\n    grid-template-rows: 40px;\n  }\n`;\n\n// *******   POST LIST *******\n\nexport const WrapPostsList = styled.ul`\n  display: grid;\n  gap: 16px;\n  grid-template-columns: minmax(312px, 1fr);\n  padding: 8px 4px;\n  margin: 0 auto;\n  @media screen and (min-width: 960px) {\n    grid-template-columns: repeat(2, 1fr);\n    padding: 8px;\n    grid-template-rows: auto;\n  }\n`;\n\n// *******   POST *******\nexport const WrapUserPost = styled.li`\n  display: grid;\n  grid-template-columns: minmax(292px, auto);\n  grid-template-rows: auto auto;\n  gap: 4px;\n  padding: 0;\n  margin: 0;\n`;\nexport const WrapUser = styled.div`\n  display: grid;\n  grid-template-columns: 272px auto;\n  .bgr {\n    display: grid;\n    grid-template-columns: 36px 124px 40px 56px;\n    grid-template-rows: 36px;\n    justify-content: flex-start;\n    align-items: center;\n    gap: 4px;\n    border: none;\n    border-radius: 30px;\n    background-color: #ffffff;\n    padding: 2px;\n    margin: 0;\n  }\n`;\nexport const WrapAvatar = styled.div`\n  display: grid;\n  grid-template-rows: 36px;\n  justify-content: center;\n  align-items: center;\n  border-radius: 50%;\n  background-color: yellow;\n`;\nexport const UserName = styled.p`\n  display: grid;\n  justify-content: flex-start;\n  align-items: center;\n  font-size: clamp(12px, 0.614rem + 0.68vw, 18px);\n  font-weight: 600;\n  color: ${base.colors.green900};\n  padding: 4px;\n`;\nexport const CountLike = styled.span`\n  display: grid;\n  justify-content: flex-start;\n  align-items: center;\n  font-size: clamp(12px, 0.659rem + 0.45vw, 16px);\n  color: ${base.colors.green900};\n  margin: 0;\n  padding: 4px;\n`;\nexport const WrapPost = styled.div`\n  display: grid;\n  grid-template-columns: minmax(292px, 552px);\n  justify-content: flex-start;\n  align-items: center;\n  gap: 8px;\n  border-radius: 14px;\n  padding: 8px;\n  margin: 0 auto;\n  background-color: ${base.colors.green50};\n  @media screen and (min-width: 480px) {\n    grid-template-rows: 160px 100px 40px;\n  }\n`;\n\nexport const WrapMain = styled.div`\n  display: grid;\n  padding: 0;\n  margin: 0;\n  @media screen and (min-width: 480px) {\n    grid-template-columns: 240px 1fr;\n    grid-template-rows: 160px;\n    gap: 8px;\n  }\n`;\nexport const WrapImgPost = styled.div`\n  display: grid;\n  grid-template-columns: minmax(280px, 400px);\n  grid-template-rows: auto;\n  justify-content: center;\n  align-items: center;\n  border-radius: 10px;\n  .img-post {\n    border-radius: 12px;\n    justify-self: stretch;\n    align-self: stretch;\n  }\n  @media screen and (min-width: 480px) {\n    grid-template-columns: 240px;\n    grid-template-rows: 160px;\n  }\n`;\nexport const WrapInfo = styled.div`\n  display: grid;\n  gap: 8px;\n  grid-template-columns: 1fr;\n  grid-template-rows: 20px 1fr;\n  align-items: flex-start;\n  padding: 8px;\n`;\nexport const WrapTag = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  justify-content: space-between;\n  align-items: center;\n  column-gap: 8px;\n  padding: 0;\n  .tags {\n    display: grid;\n    grid-template-columns: 20px 1fr;\n    justify-content: flex-start;\n    align-items: center;\n    gap: 8px;\n  }\n  .icon-tag {\n    width: 16px;\n    height: 16px;\n    fill: ${base.colors.comment};\n  }\n  .post-tag {\n    box-sizing: border-box;\n    font-size: clamp(16px, 0.955rem + 0.23vw, 18px);\n    font-weight: 700;\n    color: ${base.colors.comment};\n  }\n  .date {\n    box-sizing: border-box;\n    font-size: clamp(12px, 0.705rem + 0.23vw, 14px);\n    font-weight: 400;\n    text-align: end;\n    color: ${base.colors.green900};\n  }\n`;\nexport const WrapTitle = styled.div`\n  display: grid;\n  grid-template-columns: 20px 1fr;\n  justify-content: flex-start;\n  align-items: flex-start;\n  gap: 4px;\n  padding: 0;\n  .icon-title {\n    width: 16px;\n    height: 16px;\n    fill: ${base.colors.green900};\n  }\n  .post-title {\n    box-sizing: border-box;\n    font-size: clamp(16px, 0.909rem + 0.45vw, 20px);\n    font-weight: 500;\n    color: ${base.colors.green900};\n    word-wrap: break-word;\n    overflow-wrap: anywhere;\n  }\n`;\nexport const PostText = styled.p`\n  display: grid;\n  grid-template-rows: 1fr;\n  justify-content: flex-start;\n  align-items: flex-start;\n  padding: 4px;\n  margin: 0;\n  font-size: clamp(12px, 0.659rem + 0.45vw, 16px);\n  color: ${base.colors.green900};\n  overflow-y: auto;\n  scroll-behavior: smooth;\n  &::-webkit-scrollbar {\n    width: 8px;\n    height: 50px;\n  }\n  /* &::-webkit-scrollbar-track {\n    background: #f6f6f6;\n  } */\n  &::-webkit-scrollbar-thumb {\n    border-radius: 12px;\n    background: #c8e6c9;\n  }\n  /* &::-webkit-scrollbar-thumb:hover {\n    background: #249fa3;\n  } */\n  @media screen and (min-width: 480px) {\n    grid-template-rows: 80px;\n  }\n`;\nexport const WrapReviews = styled.div`\n  display: grid;\n  grid-template-columns: 36px 1fr 36px;\n  grid-template-rows: 36px;\n  gap: 4px;\n  justify-content: flex-start;\n  align-items: center;\n  padding: 2px;\n`;\n\nexport const WrapComment = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 36px;\n  justify-content: flex-start;\n  align-items: center;\n  gap: 4px;\n`;\nexport const ForComment = styled.input`\n  display: grid;\n  grid-template-columns: minmax(200px 1fr);\n  border-radius: 8px;\n  border: 1px solid white;\n  outline: none;\n  font-size: 16px;\n  padding: 6px 8px;\n`;\nexport const BtnIcons = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 36px;\n  height: 36px;\n  background-color: transparent;\n  border: none;\n  padding: 4px;\n  cursor: pointer;\n  .icon {\n    width: 24px;\n    height: 24px;\n  }\n  .like {\n    fill: ${base.colors.like};\n  }\n  .coment {\n    fill: ${base.colors.comment};\n  }\n  .send {\n    fill: ${base.colors.comment};\n  }\n  .dots {\n    fill: ${base.colors.green900};\n  }\n`;\n\n// *******   USER PAGE *******\nexport const WrapUserList = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(312px, 1fr));\n  gap: 16px;\n  padding: 8px 4px;\n  margin: 0 auto;\n  @media screen and (min-width: 480px) {\n    padding: 8px;\n  }\n`;\nexport const WrapLink = styled(Link)`\n  text-decoration: none;\n  padding: 0;\n  margin: 0;\n`;\n\n// *******   USER POST  *******\nexport const WrapPostId = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-template-rows: 1fr 40px 40px;\n  gap: 16px;\n  padding: 8px 0;\n  margin: 0 auto;\n  .message {\n    font-size: clamp(16px, 0.909rem + 0.45vw, 20px);\n    font-weight: 500;\n    color: ${base.colors.green900};\n    padding: 0 4px 8px 4px;\n  }\n`;\nexport const WrapItem = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-template-rows: auto auto;\n  gap: 8px;\n  padding: 0;\n  margin: 0;\n`;\n// export const WrapBtnEdit = styled.div`\n//   display: grid;\n//   grid-template-columns: minmax(292px, 1fr);\n//   grid-template-rows: 40px 40px;\n//   gap: 8px;\n//   .btn {\n//     box-sizing: border-box;\n//     display: flex;\n//     justify-content: center;\n//     align-items: center;\n//     font-size: 16px;\n//     font-weight: 600;\n//     color: #ffffff;\n//     background-color: ${base.colors.green500};\n//     transition: all 0.3s;\n//     border: none;\n//     border-radius: 20px;\n//     cursor: pointer;\n//     &:hover,\n//     :focus {\n//       background-color: ${base.colors.green700};\n//     }\n//   }\n//   @media screen and (min-width: 480px) {\n//     grid-template-columns: 1fr 1fr;\n//     grid-template-rows: 40px;\n//   }\n// `;\nexport const BackLink = styled(Link)`\n  box-sizing: border-box;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 16px;\n  font-weight: 600;\n  text-decoration: none;\n  color: #ffffff;\n  background-color: ${base.colors.green100};\n  transition: all 0.3s;\n  border: none;\n  border-radius: 20px;\n  cursor: pointer;\n  &:hover,\n  :focus {\n    background-color: ${base.colors.green200};\n  }\n`;\n// export const BtnUserPost = styled.button`\n//   box-sizing: border-box;\n//   display: flex;\n//   justify-content: center;\n//   align-items: center;\n//   font-size: 16px;\n//   font-weight: 600;\n//   color: #ffffff;\n//   background-color: ${base.colors.green500};\n//   transition: all 0.3s;\n//   border: none;\n//   border-radius: 20px;\n//   cursor: pointer;\n//   &:hover,\n//   :focus {\n//     background-color: ${base.colors.green700};\n//   }\n// `;\n// *******   USER POST EDIT *******\nexport const WrapEditPost = styled.div`\n  display: grid;\n  grid-template-columns: minmax(292px, 1fr);\n  grid-template-rows: 40px 40px 40px auto 40px;\n  justify-content: flex-start;\n  align-items: center;\n  /* border: 2px solid ${base.colors.green300}; */\n  border-radius: 14px;\n  gap: 16px;\n  background-color: ${base.colors.green50};\n  padding: 8px;\n  margin: 0 auto;\n  .wrap-radio {\n    display: grid;\n    grid-template-columns: repeat(auto-fit, 84px);\n    justify-content: flex-start;\n    align-items: center;\n    gap: 8px;\n  }\n  .input {\n    display: grid;\n    grid-template-columns: 1fr;\n    box-sizing: border-box;\n    font-size: 16px;\n    font-weight: 400;\n    border-radius: 8px;\n    border: 1px solid ${base.colors.green300};\n    outline: ${base.colors.green300};\n    color: ${base.colors.green900};\n    justify-self: stretch;\n    align-self: stretch;\n    padding: 4px 8px;\n  }\n  .input::placeholder {\n    font-size: 16px;\n    color: ${base.colors.green300};\n  }\n  .label {\n    display: grid;\n    grid-template-columns: 12px 1fr;\n    justify-content: flex-start;\n    align-items: center;\n    gap: 4px;\n    font-size: 16px;\n    font-weight: 500;\n    color: ${base.colors.green900};\n  }\n  .textarea {\n    display: grid;\n    grid-template-columns: minmax(256px 460px);\n    box-sizing: border-box;\n    font-size: 16px;\n    font-weight: 400;\n    color: ${base.colors.green900};\n    border-radius: 8px;\n    border: 1px solid ${base.colors.green300};\n    outline: ${base.colors.green300};\n    resize: vertical;\n    padding: 4px 8px;\n  }\n  .textarea::placeholder {\n    font-size: 16px;\n    color: ${base.colors.green300};\n  }\n  @media screen and (min-width: 480px) {\n    grid-template-columns: 460px;\n    grid-template-rows: 40px 40px 40px 1fr 40px;\n  }\n`;\nexport const BtnSave = styled.button`\n  box-sizing: border-box;\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-template-rows: 40px;\n  justify-content: center;\n  align-items: center;\n  font-size: 16px;\n  font-weight: 600;\n  color: #ffffff;\n  background-color: ${base.colors.green500};\n  transition: all 0.3s;\n  border: none;\n  border-radius: 20px;\n  cursor: pointer;\n  &:hover,\n  :focus {\n    background-color: ${base.colors.green700};\n  }\n`;\n","import React, { useState } from 'react';\n\nimport { BtnSave, WrapEditPost } from './Posts.styled';\n// import { useParams } from 'react-router-dom';\n\nexport default function EditPost({ data, onUpdatePost }) {\n  const id = data._id;\n  const fields = {\n    imageUrl: data.imageUrl,\n    tag: data.tag,\n    title: data.title,\n    text: data.text,\n  };\n\n  const [post, setPost] = useState(fields);\n\n  const onChangeField = (field, value) => {\n    setPost(prevState => ({\n      ...prevState,\n      [field]: value,\n    }));\n  };\n\n  const handleUpdate = () => {\n    onUpdatePost(id, post);\n    // console.log('handleUpdate', post);\n  };\n\n  return (\n    <WrapEditPost autoComplete=\"off\">\n      <input\n        className=\"input\"\n        name=\"imageUrl\"\n        type=\"text\"\n        value={post.imageUrl}\n        onChange={e => onChangeField('imageUrl', e.target.value)}\n      />\n      <div className=\"wrap-radio\">\n        <label htmlFor=\"tags\" className=\"label\">\n          <input\n            type=\"radio\"\n            name=\"tag\"\n            value=\"animals\"\n            onChange={e => onChangeField('tag', e.target.value)}\n          />\n          animals\n        </label>\n        <label htmlFor=\"tags\" className=\"label\">\n          <input\n            type=\"radio\"\n            name=\"tag\"\n            value=\"hobby\"\n            onChange={e => onChangeField('tag', e.target.value)}\n          />\n          hobby\n        </label>\n        <label htmlFor=\"tags\" className=\"label\">\n          <input\n            type=\"radio\"\n            name=\"tag\"\n            value=\"children\"\n            onChange={e => onChangeField('tag', e.target.value)}\n          />\n          children\n        </label>\n        <label htmlFor=\"tags\" className=\"label\">\n          <input\n            type=\"radio\"\n            name=\"tag\"\n            value=\"health\"\n            onChange={e => onChangeField('tag', e.target.value)}\n          />\n          health\n        </label>\n      </div>\n      <input\n        className=\"input\"\n        name=\"title\"\n        type=\"text\"\n        value={post.title}\n        onChange={e => onChangeField('title', e.target.value)}\n      />\n      <textarea\n        name=\"text\"\n        rows=\"auto\"\n        type=\"textarea\"\n        className=\"textarea\"\n        value={post.text}\n        onChange={e => onChangeField('text', e.target.value)}\n      />\n      <BtnSave type=\"button\" onClick={handleUpdate}>\n        update post\n      </BtnSave>\n    </WrapEditPost>\n  );\n}\n","import React, { useRef, useState } from 'react';\nimport { BackLink, WrapBtn, WrapItem, WrapPostId } from './Posts.styled';\nimport Post from './Post';\nimport {\n  useDeletePostMutation,\n  useGetPostByIdQuery,\n  useUpdatePostMutation,\n} from '../../redux/PostsSlice';\nimport { useLocation, useParams } from 'react-router-dom';\nimport EditPost from './EditPost';\nimport ModalWindow from 'components/Helper/ModalWindow';\nimport { createPortal } from 'react-dom';\nimport Loading from 'components/Helper/Loading';\nimport { WrapRender } from 'pages/Page.styled';\n\nexport default function UserPost() {\n  const [showModal, setShowModal] = useState(false);\n  const location = useLocation();\n\n  const backHref = useRef(location.state?.from ?? '/user-posts');\n  const params = useParams();\n  const id = params.id;\n  // console.log(id);\n  const { data, error, isLoading } = useGetPostByIdQuery(id);\n  const post = data;\n  // console.log(post);\n\n  const [updatePost] = useUpdatePostMutation();\n  const [deletePost] = useDeletePostMutation();\n\n  const onEdit = evt => {\n    //  const id = evt.target.name;\n    //  setId(id);\n    setShowModal(true);\n  };\n\n  const onUpdatePost = () => {\n    // console.log('POST', post);\n    // console.log('ID', id);\n    updatePost({ id, post });\n  };\n\n  const onDelete = () => {\n    deletePost(id);\n  };\n\n  return (\n    <WrapRender>\n      <WrapPostId>\n        {isLoading ? (\n          <Loading />\n        ) : (\n          <WrapItem>\n            <Post post={post} />\n            <WrapBtn>\n              <button type=\"button\" onClick={onEdit} className=\"btn\">\n                edit\n              </button>\n              {showModal &&\n                createPortal(\n                  <ModalWindow\n                    onClose={() => setShowModal(false)}\n                    content={\n                      <EditPost data={data} onUpdatePost={onUpdatePost} />\n                    }\n                  />,\n                  document.body\n                )}\n              <button type=\"button\" onClick={onDelete} className=\"btn\">\n                delete\n              </button>\n            </WrapBtn>\n          </WrapItem>\n        )}\n        {error && <p>The item was successfully deleted</p>}\n        <BackLink to={backHref.current}>come back</BackLink>\n      </WrapPostId>\n    </WrapRender>\n  );\n}\n"],"names":["ModalWindow","_ref","onClose","content","useEffect","handleEscape","event","key","window","addEventListener","document","body","style","overflow","removeEventListener","_jsx","WrapOverlayModal","onClick","children","WrapModal","e","stopPropagation","Post","post","date","Date","createdAt","formattedDate","Intl","DateTimeFormat","day","month","year","format","replace","_useUpdateLikesMutati","useUpdateLikesMutation","updateLikes","_slicedToArray","_jsxs","WrapUserPost","WrapUser","className","WrapAvatar","UserName","BtnIcons","name","_id","type","evt","id","currentTarget","console","log","count","viewsCount","Number","BsHandThumbsUpFill","CountLike","WrapPost","WrapMain","WrapImgPost","src","imageUrl","alt","title","WrapInfo","WrapTag","BsFillBookmarkFill","tag","WrapTitle","BsCircleFill","PostText","text","WrapReviews","BsChatRightTextFill","WrapComment","ForComment","BsSendFill","BsThreeDotsVertical","WrapCreate","styled","_templateObject","_taggedTemplateLiteral","FormPost","_templateObject2","base","WrapBtn","_templateObject3","WrapPostsList","_templateObject4","_templateObject5","_templateObject6","_templateObject7","_templateObject8","_templateObject9","_templateObject10","_templateObject11","_templateObject12","_templateObject13","_templateObject14","_templateObject15","_templateObject16","_templateObject17","_templateObject18","_templateObject19","_templateObject20","WrapUserList","_templateObject21","WrapLink","Link","_templateObject22","WrapPostId","_templateObject23","WrapItem","_templateObject24","BackLink","_templateObject25","WrapEditPost","_templateObject26","BtnSave","_templateObject27","EditPost","data","onUpdatePost","fields","_useState","useState","_useState2","setPost","onChangeField","field","value","prevState","_objectSpread","_defineProperty","autoComplete","onChange","target","htmlFor","rows","UserPost","_location$state$from","_location$state","showModal","setShowModal","location","useLocation","backHref","useRef","state","from","useParams","_useGetPostByIdQuery","useGetPostByIdQuery","error","isLoading","_useUpdatePostMutatio","useUpdatePostMutation","updatePost","_useDeletePostMutatio","useDeletePostMutation","deletePost","WrapRender","Loading","createPortal","to","current"],"sourceRoot":""}