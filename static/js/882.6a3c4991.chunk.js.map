{"version":3,"file":"static/js/882.6a3c4991.chunk.js","mappings":"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","sources":["components/Helper/EmptyPage.jsx","components/Helper/ModalWindow.jsx","components/Posts/Post.jsx","components/Posts/Posts.styled.js","components/Posts/EditPost.jsx","components/Posts/EditListOfPosts.jsx","pages/EditPage.jsx"],"sourcesContent":["import React from 'react';\nimport { GiSherlockHolmes } from 'react-icons/gi';\nimport { WrapEmpty } from './Helper.styled';\n\nexport default function EmptyPage() {\n  return (\n    <WrapEmpty>\n      <h2 className=\"empty-title\">There's nothing here yet</h2>\n      <GiSherlockHolmes className=\"icon-empty\" />\n    </WrapEmpty>\n  );\n}\n","import React, { useEffect } from 'react';\nimport { WrapLoading, WrapModal } from './Helper.styled';\n// import { IoCloseSharp } from 'react-icons/io5';\n\nexport default function ModalWindow({ onClose, content }) {\n  useEffect(() => {\n    const handleEscape = event => {\n      if (event.key === 'Escape') {\n        onClose();\n      }\n    };\n    window.addEventListener('keydown', handleEscape);\n    document.body.style.overflow = 'hidden';\n\n    return () => {\n      window.removeEventListener('keydown', handleEscape);\n      document.body.style.overflow = 'auto';\n    };\n  }, [onClose]);\n  return (\n    <WrapLoading onClick={onClose}>\n      <WrapModal onClick={e => e.stopPropagation()}>\n        {/* <BtnClose onClick={onClose}>\n          <IoCloseSharp className=\"close\" />\n        </BtnClose> */}\n        {content}\n      </WrapModal>\n    </WrapLoading>\n  );\n}\n","import React from 'react';\nimport {\n  BsFillBookmarkFill,\n  BsCircleFill,\n  BsHandThumbsUpFill,\n  BsFillChatLeftTextFill,\n  BsSendFill,\n  BsThreeDotsVertical,\n} from 'react-icons/bs';\nimport {\n  BtnIcons,\n  CountLike,\n  ForComment,\n  PostText,\n  WrapComment,\n  WrapImgPost,\n  WrapInfo,\n  WrapLikes,\n  WrapMain,\n  WrapPost,\n  WrapReviews,\n  WrapTag,\n  WrapTitle,\n} from './Posts.styled';\n// import { ThemeProvider } from 'styled-components';\n\nexport default function Post({ post }) {\n  return (\n    // <ThemeProvider theme={theme}>\n    <WrapPost>\n      <WrapMain>\n        <WrapImgPost>\n          <img src={post.imageUrl} alt={post.title} className=\"img-post\" />\n        </WrapImgPost>\n        <WrapInfo>\n          <WrapTag>\n            <BsFillBookmarkFill className=\"icon-tag\" />\n            <h4 className=\"post-tag\">{post.tag}</h4>\n          </WrapTag>\n          <WrapTitle>\n            <BsCircleFill className=\"icon-title\" />\n            <h3 className=\"post-title\">{post.title}</h3>\n          </WrapTitle>\n        </WrapInfo>\n      </WrapMain>\n      <PostText>{post.text}</PostText>\n      {/* <WrapText> */}\n\n      {/* </WrapText> */}\n      <WrapReviews>\n        <WrapLikes>\n          <BtnIcons type=\"button\">\n            <BsHandThumbsUpFill className=\"icon like\" />\n          </BtnIcons>\n          <CountLike>{0}</CountLike>\n          <BtnIcons>\n            <BsFillChatLeftTextFill className=\"icon coment\" />\n          </BtnIcons>\n        </WrapLikes>\n        <WrapComment>\n          <ForComment />\n          <BtnIcons>\n            <BsSendFill className=\"icon send\" />\n          </BtnIcons>\n          <BtnIcons>\n            <BsThreeDotsVertical className=\"icon dots\" />\n          </BtnIcons>\n        </WrapComment>\n      </WrapReviews>\n    </WrapPost>\n    // </ThemeProvider>\n  );\n}\n\n//  <WrapPost>\n//    <WrapImgPost>\n//      <img\n//        src=\"https://cdn.pixabay.com/photo/2015/04/23/21/59/tree-736877_640.jpg\"\n//        alt=\"cat\"\n//        className=\"img-post\"\n//      />\n//    </WrapImgPost>\n//    <WrapInfo>\n//      <WrapTag>\n//        <BsFillBookmarkFill className=\"icon-tag\" />\n//        <h4 className=\"post-tag\">animal</h4>\n//      </WrapTag>\n//      <WrapTitle>\n//        <BsCircleFill className=\"icon-title\" />\n//        <h3 className=\"post-title\">My pet</h3>\n//      </WrapTitle>\n//      <PostText>\n//        Lorem ipsum dolor sit amet consectetur, adipisicing elit. Expedita fugiat\n//        adipisci itaque maxime ex eius atque esse praesentium porro! Ratione\n//        maxime sed, quidem alias consequuntur dicta assumenda accusamus\n//        consectetur error! Lorem ipsum dolor sit amet consectetur, adipisicing\n//        elit. Expedita fugiat adipisci itaque maxime ex eius atque esse\n//        praesentium porro! Ratione maxime sed, quidem alias consequuntur dicta\n//        assumenda accusamus consectetur error!\n//      </PostText>\n//    </WrapInfo>\n//    <WrapReviews>\n//      <button type=\"button\" className=\"btn-like\">\n//        <BsHandThumbsUpFill className=\"icon-like\" />\n//      </button>\n//      <span className=\"counter\">{0}</span>\n//      <button className=\"btn-comment\">Comment</button>\n//    </WrapReviews>\n//  </WrapPost>;\n","import { base } from 'baseTheme';\nimport styled from 'styled-components';\n\n// *******   CREATE  POST *******\n\nexport const WrapCreate = styled.div`\n  display: grid;\n  grid-template-columns: minmax(292px, 1fr);\n  grid-template-rows: 1fr 1fr;\n  background-color: blue;\n  gap: 8px;\n  padding: 8px 4px;\n  margin: 0 auto;\n  @media screen and (min-width: 480px) {\n    padding: 8px;\n  }\n`;\n\nexport const FormPost = styled.form`\n  display: grid;\n  grid-template-columns: minmax(292px, 1fr);\n  grid-template-rows: 40px 40px 40px auto 88px;\n  justify-content: flex-start;\n  align-items: center;\n  border: 2px solid red;\n  border-radius: 14px;\n  gap: 16px;\n  background-color: ${base.colors.alabaster50};\n  padding: 8px;\n  margin: 0 auto;\n  .input {\n    box-sizing: border-box;\n    font-size: 16px;\n    font-weight: 400;\n    border-radius: 4px;\n    border: 1px solid #bdbdbd;\n    justify-self: stretch;\n    align-self: stretch;\n    padding: 4px 8px;\n  }\n  .wrap-radio {\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: flex-start;\n    align-items: center;\n    font-size: 16px;\n    gap: 8px;\n  }\n  .textarea {\n    display: grid;\n    grid-template-columns: minmax(256px 444px);\n    box-sizing: border-box;\n    font-size: 16px;\n    font-weight: 400;\n    border-radius: 4px;\n    border: 1px solid #bdbdbd;\n    resize: vertical;\n  }\n  @media screen and (min-width: 480px) {\n    grid-template-columns: 460px;\n  }\n`;\n\nexport const WrapBtn = styled.div`\n  display: grid;\n  grid-template-columns: minmax(292px, 1fr);\n  grid-template-rows: 40px 40px;\n  gap: 8px;\n  .btn {\n    box-sizing: border-box;\n    display: grid;\n  }\n  @media screen and (min-width: 480px) {\n    grid-template-columns: 1fr 1fr;\n    grid-template-rows: 40px;\n  }\n`;\n\n// *******   POST LIST *******\n\nexport const WrapPostsList = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(312px, 1fr));\n  gap: 8px;\n  padding: 8px 4px;\n  margin: 0 auto;\n  @media screen and (min-width: 480px) {\n    padding: 8px;\n  }\n`;\n\n// *******   POST *******\nexport const WrapPost = styled.li`\n  display: grid;\n  grid-template-columns: minmax(292px, 1fr);\n  /* grid-template-rows: auto; */\n  justify-content: flex-start;\n  align-items: center;\n  gap: 8px;\n  border-radius: 14px;\n  /* border: 2px solid ${props => props.theme.border}; */\n  border: 2px solid red;\n  padding: 8px;\n  margin: 0 auto;\n  background-color: ${base.colors.alabaster50};\n  @media screen and (min-width: 480px) {\n    grid-template-columns: 460px;\n    grid-template-rows: 160px 100px 40px;\n  }\n`;\nexport const WrapMain = styled.div`\n  display: grid;\n  grid-template-columns: minmax(296px, 444px);\n  /* grid-template-rows: auto auto; */\n  padding: 0;\n  margin: 0;\n  @media screen and (min-width: 480px) {\n    grid-template-columns: 240px 212px;\n    grid-template-rows: 160px;\n    column-gap: 8px;\n  }\n`;\nexport const WrapImgPost = styled.div`\n  display: grid;\n  grid-template-columns: minmax(280px, 400px);\n  grid-template-rows: auto;\n  justify-content: center;\n  align-items: center;\n  border-radius: 10px;\n  .img-post {\n    border-radius: 12px;\n    justify-self: stretch;\n    align-self: stretch;\n  }\n  @media screen and (min-width: 480px) {\n    grid-template-columns: 240px;\n    grid-template-rows: 160px;\n  }\n`;\nexport const WrapInfo = styled.div`\n  display: grid;\n  gap: 16px;\n  grid-template-columns: 1fr;\n  grid-template-rows: 28px 1fr;\n  align-items: flex-start;\n  /* background-color: aqua; */\n  padding: 8px;\n`;\nexport const WrapTag = styled.div`\n  display: grid;\n  grid-template-columns: 24px 1fr;\n  justify-content: flex-start;\n  align-items: center;\n  column-gap: 8px;\n  padding: 0;\n  .icon-tag {\n    width: 20px;\n    height: 20px;\n    /* fill: ${props => props.theme.fill}; */\n    fill: red;\n  }\n  .post-tag {\n    box-sizing: border-box;\n    font-size: 20px;\n    /* color: ${props => props.theme.title}; */\n    color: red;\n  }\n`;\nexport const WrapTitle = styled.div`\n  display: grid;\n  grid-template-columns: 24px 1fr;\n  justify-content: flex-start;\n  align-items: flex-start;\n  gap: 8px;\n  padding: 0;\n  .icon-title {\n    width: 20px;\n    height: 20px;\n    fill: red;\n  }\n  .post-title {\n    box-sizing: border-box;\n    font-size: 20px;\n    color: red;\n    word-wrap: break-word;\n    overflow-wrap: anywhere;\n  }\n`;\nexport const WrapText = styled.div`\n  display: grid;\n  grid-template-columns: minmax(280px, 444px);\n  grid-template-rows: 1fr;\n  justify-content: flex-start;\n  align-items: flex-start;\n  padding: 0;\n  margin: 0;\n  /* .post-text {\n    font-size: 16px;\n    color: #ff1744;\n    overflow-y: auto;\n    scroll-behavior: smooth;\n  } */\n  @media screen and (min-width: 480px) {\n    grid-template-rows: 100px;\n  }\n`;\nexport const PostText = styled.p`\n  display: grid;\n  grid-template-columns: minmax(280px, 444px);\n  grid-template-rows: 1fr;\n  justify-content: flex-start;\n  align-items: flex-start;\n  padding: 0;\n  margin: 0;\n  font-size: 16px;\n  overflow-y: auto;\n  scroll-behavior: smooth;\n  &::-webkit-scrollbar {\n    width: 8px;\n    height: 50px;\n  }\n  /* &::-webkit-scrollbar-track {\n    background: #f6f6f6;\n  } */\n  &::-webkit-scrollbar-thumb {\n    border-radius: 12px;\n    background: ${base.colors.alabaster300};\n  }\n  /* &::-webkit-scrollbar-thumb:hover {\n    background: #249fa3;\n  } */\n  @media screen and (min-width: 480px) {\n    grid-template-rows: 100px;\n  }\n`;\nexport const WrapReviews = styled.div`\n  display: grid;\n  /* grid-template-columns: 40px 1fr 40px; */\n  grid-template-columns: minmax(280px, 444px);\n  grid-template-rows: 40px 40px;\n  gap: 4px;\n  justify-content: flex-start;\n  align-items: center;\n  @media screen and (min-width: 480px) {\n    grid-template-columns: 1fr 3fr;\n    grid-template-rows: 40px;\n  }\n`;\nexport const WrapLikes = styled.div`\n  display: grid;\n  grid-template-columns: 36px 36px 36px;\n  gap: 4px;\n  justify-content: flex-start;\n  align-items: center;\n`;\nexport const CountLike = styled.span`\n  display: grid;\n  justify-content: center;\n  align-items: center;\n  font-size: 20px;\n  width: 36px;\n  height: 36px;\n  margin: 0;\n  padding: 4px;\n`;\nexport const WrapComment = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 36px 36px;\n  justify-content: flex-start;\n  align-items: center;\n  gap: 4px;\n`;\nexport const ForComment = styled.input`\n  display: grid;\n  grid-template-columns: minmax(200px 1fr);\n  border-radius: 8px;\n  font-size: 12px;\n  padding: 8px 4px;\n`;\nexport const BtnIcons = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 36px;\n  height: 36px;\n  background-color: transparent;\n  border: none;\n  padding: 4px;\n  cursor: pointer;\n  .icon {\n    width: 36px;\n    height: 36px;\n  }\n  .like {\n    fill: #ffd740;\n  }\n  .coment {\n    fill: #ffd740;\n  }\n  .send {\n    fill: #ffd740;\n  }\n  .dots {\n    fill: #ffd740;\n  }\n`;\n\n// *******   EDIT PAGE *******\nexport const WrapEditList = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(312px, 1fr));\n  gap: 8px;\n  padding: 8px 4px;\n  margin: 0 auto;\n  @media screen and (min-width: 480px) {\n    padding: 8px;\n  }\n`;\nexport const WrapItem = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-template-rows: auto auto;\n  gap: 8px;\n  padding: 0;\n  margin: 0;\n`;\nexport const WrapBtnEdit = styled.div`\n  display: grid;\n  grid-template-columns: minmax(292px, 1fr);\n  grid-template-rows: 40px 40px;\n  gap: 8px;\n  .btn {\n    box-sizing: border-box;\n    display: grid;\n  }\n  @media screen and (min-width: 480px) {\n    grid-template-columns: 1fr 1fr;\n    grid-template-rows: 40px;\n  }\n`;\n\nexport const WrapEditPost = styled.div`\n  display: grid;\n  grid-template-columns: minmax(292px, 1fr);\n  grid-template-rows: 40px 40px 40px auto 88px;\n  justify-content: flex-start;\n  align-items: center;\n  border: 2px solid red;\n  border-radius: 14px;\n  gap: 16px;\n  background-color: ${base.colors.alabaster50};\n  padding: 8px;\n  margin: 0 auto;\n  .input {\n    box-sizing: border-box;\n    font-size: 16px;\n    font-weight: 400;\n    border-radius: 4px;\n    border: 1px solid #bdbdbd;\n    justify-self: stretch;\n    align-self: stretch;\n    padding: 4px 8px;\n  }\n  .wrap-radio {\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: flex-start;\n    align-items: center;\n    font-size: 16px;\n    gap: 8px;\n  }\n  .textarea {\n    display: grid;\n    grid-template-columns: minmax(256px 444px);\n    box-sizing: border-box;\n    font-size: 16px;\n    font-weight: 400;\n    border-radius: 4px;\n    border: 1px solid #bdbdbd;\n    resize: vertical;\n  }\n  @media screen and (min-width: 480px) {\n    grid-template-columns: 460px;\n  }\n`;\nexport const BtnSave = styled.button`\n  display: grid;\n  cursor: pointer;\n`;\n","import React, { useState } from 'react';\n\nimport { BtnSave, WrapEditPost } from './Posts.styled';\n\nexport default function EditPost({ data, onUpdatePost }) {\n  const id = data._id;\n  const fields = {\n    imageUrl: data.imageUrl,\n    tag: data.tag,\n    title: data.title,\n    text: data.text,\n  };\n\n  const [post, setPost] = useState(fields);\n\n  const onChangeField = (field, value) => {\n    setPost(prevState => ({\n      ...prevState,\n      [field]: value,\n    }));\n  };\n\n  const handleUpdate = () => {\n    onUpdatePost(id, post);\n    // console.log('handleUpdate', post);\n  };\n\n  return (\n    <div>\n      <WrapEditPost autoComplete=\"off\">\n        <input\n          className=\"input\"\n          name=\"imageUrl\"\n          type=\"text\"\n          value={post.imageUrl}\n          onChange={e => onChangeField('imageUrl', e.target.value)}\n        />\n        <div className=\"wrap-radio\">\n          <label htmlFor=\"tags\" className=\"label\">\n            <input\n              type=\"radio\"\n              name=\"tag\"\n              value=\"animals\"\n              onChange={e => onChangeField('tag', e.target.value)}\n            />\n            animals\n          </label>\n          <label htmlFor=\"tags\" className=\"label\">\n            <input\n              type=\"radio\"\n              name=\"tag\"\n              value=\"hobby\"\n              onChange={e => onChangeField('tag', e.target.value)}\n            />\n            hobby\n          </label>\n          <label htmlFor=\"tags\" className=\"label\">\n            <input\n              type=\"radio\"\n              name=\"tag\"\n              value=\"children\"\n              onChange={e => onChangeField('tag', e.target.value)}\n            />\n            children\n          </label>\n          <label htmlFor=\"tags\" className=\"label\">\n            <input\n              type=\"radio\"\n              name=\"tag\"\n              value=\"health\"\n              onChange={e => onChangeField('tag', e.target.value)}\n            />\n            health\n          </label>\n        </div>\n        <input\n          className=\"input\"\n          name=\"title\"\n          type=\"text\"\n          value={post.title}\n          onChange={e => onChangeField('title', e.target.value)}\n        />\n        <textarea\n          name=\"text\"\n          rows=\"auto\"\n          type=\"textarea\"\n          className=\"textarea\"\n          value={post.text}\n          onChange={e => onChangeField('text', e.target.value)}\n        />\n        <BtnSave type=\"button\" onClick={handleUpdate}>\n          update post\n        </BtnSave>\n      </WrapEditPost>\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport {\n  WrapBtnEdit,\n  WrapEditList,\n  WrapItem,\n} from 'components/Posts/Posts.styled';\nimport Post from 'components/Posts/Post';\nimport EmptyPage from 'components/Helper/EmptyPage';\nimport { nanoid } from '@reduxjs/toolkit';\nimport {\n  useDeletePostMutation,\n  useGetPostByIdQuery,\n  useUpdatePostMutation,\n} from '../../redux/PostsSlice';\nimport { createPortal } from 'react-dom';\nimport ModalWindow from '../Helper/ModalWindow';\nimport EditPost from './EditPost';\n\nexport default function EditListOfPosts({ posts }) {\n  const [id, setId] = useState('');\n  const [showModal, setShowModal] = useState(false);\n\n  const { data } = useGetPostByIdQuery(id);\n  const [updatePost] = useUpdatePostMutation();\n  const [deletePost] = useDeletePostMutation();\n\n  const onEdit = evt => {\n    const id = evt.target.name;\n    setId(id);\n    setShowModal(true);\n  };\n\n  const onUpdatePost = (id, post) => {\n    // console.log('POST', post);\n    // console.log('ID', id);\n    updatePost({ id, post });\n  };\n\n  const onDelete = evt => {\n    const id = evt.target.name;\n    deletePost(id);\n  };\n\n  const Arr = Array.isArray(posts) && posts.length > 0;\n  return (\n    <WrapEditList>\n      {Arr ? (\n        posts.map(post => (\n          <WrapItem key={nanoid()}>\n            <Post key={nanoid()} post={post} />\n            <WrapBtnEdit key={nanoid()}>\n              <button key={nanoid()} name={post._id} onClick={onEdit}>\n                edit\n              </button>\n              {showModal &&\n                createPortal(\n                  <ModalWindow\n                    onClose={() => setShowModal(false)}\n                    content={\n                      <EditPost data={data} onUpdatePost={onUpdatePost} />\n                    }\n                  />,\n                  document.body\n                )}\n              <button key={nanoid()} name={post._id} onClick={onDelete}>\n                delete\n              </button>\n            </WrapBtnEdit>\n          </WrapItem>\n        ))\n      ) : (\n        <EmptyPage />\n      )}\n    </WrapEditList>\n  );\n}\n","import React from 'react';\nimport Loading from 'components/Helper/Loading';\nimport { WrapRender } from './Page.styled';\nimport { useGetPostsQuery } from '../redux/PostsSlice';\nimport EditListOfPosts from 'components/Posts/EditListOfPosts';\n// import EditPost from 'components/Posts/EditPost';\n\nexport default function EditPage() {\n  const { data: posts, error, isLoading } = useGetPostsQuery();\n  return (\n    <WrapRender>\n      {/* <EditPost /> */}\n      {error && (\n        <p>\n          Ой! Что-то пошло не так : Перезагрузите страницу и попробуйте еще раз.\n        </p>\n      )}\n      {isLoading ? <Loading /> : <EditListOfPosts posts={posts} />}\n    </WrapRender>\n  );\n}\n"],"names":["EmptyPage","_jsxs","WrapEmpty","children","_jsx","className","GiSherlockHolmes","ModalWindow","_ref","onClose","content","useEffect","handleEscape","event","key","window","addEventListener","document","body","style","overflow","removeEventListener","WrapLoading","onClick","WrapModal","e","stopPropagation","Post","post","WrapPost","WrapMain","WrapImgPost","src","imageUrl","alt","title","WrapInfo","WrapTag","BsFillBookmarkFill","tag","WrapTitle","BsCircleFill","PostText","text","WrapReviews","WrapLikes","BtnIcons","type","BsHandThumbsUpFill","CountLike","BsFillChatLeftTextFill","WrapComment","ForComment","BsSendFill","BsThreeDotsVertical","WrapCreate","styled","_templateObject","_taggedTemplateLiteral","FormPost","_templateObject2","base","WrapBtn","_templateObject3","WrapPostsList","_templateObject4","_templateObject5","props","theme","border","_templateObject6","_templateObject7","_templateObject8","_templateObject9","fill","_templateObject10","_templateObject11","_templateObject12","_templateObject13","_templateObject14","_templateObject15","_templateObject16","_templateObject17","_templateObject18","WrapEditList","_templateObject19","WrapItem","_templateObject20","WrapBtnEdit","_templateObject21","WrapEditPost","_templateObject22","BtnSave","_templateObject23","EditPost","data","onUpdatePost","id","_id","fields","_useState","useState","_useState2","_slicedToArray","setPost","onChangeField","field","value","prevState","_objectSpread","_defineProperty","autoComplete","name","onChange","target","htmlFor","rows","EditListOfPosts","posts","setId","_useState3","_useState4","showModal","setShowModal","useGetPostByIdQuery","_useUpdatePostMutatio","useUpdatePostMutation","updatePost","_useDeletePostMutatio","useDeletePostMutation","deletePost","onEdit","evt","onDelete","Arr","Array","isArray","length","map","nanoid","createPortal","EditPage","_useGetPostsQuery","useGetPostsQuery","error","isLoading","WrapRender","Loading"],"sourceRoot":""}