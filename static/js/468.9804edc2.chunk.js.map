{"version":3,"file":"static/js/468.9804edc2.chunk.js","mappings":"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","sources":["components/Helper/NotifNegative.jsx","components/Helper/NotifPositive.jsx","components/Posts/Posts.styled.js","components/Posts/CreatePost.jsx","pages/CreatePage.jsx"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { GiShamrock } from 'react-icons/gi';\nimport { WrapNotif } from './Helper.styled';\n\nexport default function NotifNegative({ message, onClose }) {\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      onClose();\n    }, 5000);\n\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [onClose]);\n\n  return (\n    <WrapNotif>\n      <GiShamrock className=\"icon-notif yellow\" />\n      <div className=\"wrap-notif\">\n        <p className=\"title-notif\">Mistake</p>\n        <p className=\"text-notif\">{message}</p>\n      </div>\n    </WrapNotif>\n  );\n}\n","import React, { useEffect } from 'react';\nimport { GiShamrock } from 'react-icons/gi';\nimport { WrapNotif } from './Helper.styled';\n\nexport default function NotifPositive({ message, onClose }) {\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      onClose();\n    }, 5000);\n\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [onClose]);\n  return (\n    <WrapNotif>\n      <GiShamrock className=\"icon-notif green\" />\n      <div className=\"wrap-notif\">\n        <p className=\"title-notif\">Success</p>\n        <p className=\"text-notif\">{message}</p>\n      </div>\n    </WrapNotif>\n  );\n}\n","import { base } from 'baseTheme';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\n// ******* MAIN SETTING *******\nexport const WrapPostPage = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-template-rows: 1fr;\n  padding: 8px;\n  margin: 0 auto;\n  @media screen and (min-width: 480px) {\n    padding: 16px 8px;\n  }\n`;\nexport const WrapList = styled.ul`\n  display: grid;\n  grid-template-columns: minmax(288px, 1fr);\n  grid-template-rows: 1fr;\n  justify-content: start;\n  align-items: center;\n  gap: 16px;\n  padding: 8px;\n  margin: 0 auto;\n  @media screen and (min-width: 480px) {\n    padding: 16px 8px;\n  }\n  @media screen and (min-width: 960px) {\n    grid-template-columns: repeat(2, 1fr);\n    padding: 16px;\n  }\n`;\nexport const WrapPanelPost = styled.li`\n  display: grid;\n  grid-template-columns: minmax(304px, 552px);\n  grid-template-rows: auto auto;\n  gap: 4px;\n  padding: 0;\n  margin: 0 auto;\n`;\nexport const WrapUserPost = styled.li`\n  display: grid;\n  grid-template-columns: minmax(304px, 552px);\n  grid-template-rows: auto;\n  padding: 0;\n  margin: 0 auto;\n`;\nexport const WrapLink = styled(Link)`\n  text-decoration: none;\n  padding: 0;\n  margin: 0;\n`;\n\n// *******   POST USER PANEL *******\nexport const WrapPanel = styled.div`\n  display: grid;\n  grid-template-columns: 272px 1fr;\n  .bgr {\n    display: grid;\n    grid-template-columns: 36px 124px 40px 56px;\n    grid-template-rows: 36px;\n    justify-content: start;\n    align-items: center;\n    gap: 4px;\n    border: none;\n    border-radius: 30px;\n    background-color: #ffffff;\n    padding: 2px 2px;\n    margin: 0;\n  }\n`;\nexport const PanelAvatar = styled.div`\n  display: grid;\n  grid-template-rows: 36px;\n  justify-content: center;\n  align-items: center;\n  border-radius: 50%;\n  background-color: yellow;\n  .img-avatar {\n    width: 32px;\n    height: 32px;\n    border-radius: 50%;\n    object-fit: cover;\n  }\n  .icon-avatar {\n    width: 32px;\n    height: 32px;\n    fill: ${base.colors.green900};\n  }\n`;\nexport const PanelName = styled.p`\n  display: grid;\n  justify-content: start;\n  align-items: center;\n  font-size: clamp(12px, 0.614rem + 0.68vw, 18px);\n  font-weight: 600;\n  color: ${base.colors.green900};\n  padding: 4px;\n`;\nexport const CountLike = styled.span`\n  display: grid;\n  justify-content: start;\n  align-items: center;\n  font-size: clamp(12px, 0.659rem + 0.45vw, 16px);\n  color: ${base.colors.green900};\n  margin: 0;\n  padding: 4px;\n`;\n\n// *******   POST *******\nexport const WrapPost = styled.div`\n  display: grid;\n  grid-template-columns: minmax(288px, 552px);\n  justify-content: start;\n  align-items: center;\n  gap: 8px;\n  border-radius: 14px;\n  padding: 8px;\n  margin: 0 auto;\n  background-color: ${base.colors.green50};\n  @media screen and (min-width: 480px) {\n    grid-template-rows: 160px 100px 40px;\n  }\n`;\nexport const WrapMain = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-template-rows: auto auto;\n  padding: 0;\n  margin: 0;\n  @media screen and (min-width: 480px) {\n    grid-template-columns: 240px 1fr;\n    grid-template-rows: 160px;\n    gap: 8px;\n  }\n`;\nexport const WrapImgPost = styled.div`\n  display: grid;\n  grid-template-columns: minmax(280px, 400px);\n  grid-template-rows: auto;\n  justify-content: center;\n  align-items: center;\n  border-radius: 10px;\n  .img-post {\n    border-radius: 12px;\n    justify-self: stretch;\n    align-self: stretch;\n  }\n  @media screen and (min-width: 480px) {\n    grid-template-columns: 240px;\n    grid-template-rows: 160px;\n  }\n`;\nexport const WrapInfo = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-template-rows: 20px 1fr;\n  align-items: start;\n  gap: 8px;\n  padding: 8px;\n`;\nexport const WrapTag = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  justify-content: space-between;\n  align-items: center;\n  column-gap: 8px;\n  padding: 0;\n  .tags {\n    display: grid;\n    grid-template-columns: 20px 1fr;\n    justify-content: start;\n    align-items: center;\n    gap: 8px;\n  }\n  .icon-tag {\n    width: 16px;\n    height: 16px;\n    fill: ${base.colors.yellow};\n  }\n  .post-tag {\n    box-sizing: border-box;\n    font-size: clamp(16px, 0.955rem + 0.23vw, 18px);\n    font-weight: 700;\n    color: ${base.colors.yellow};\n  }\n  .date {\n    box-sizing: border-box;\n    font-size: clamp(12px, 0.705rem + 0.23vw, 14px);\n    font-weight: 400;\n    text-align: end;\n    color: ${base.colors.green900};\n  }\n`;\nexport const WrapTitle = styled.div`\n  display: grid;\n  grid-template-columns: 20px 1fr;\n  justify-content: start;\n  align-items: start;\n  gap: 4px;\n  padding: 0;\n  .icon-title {\n    width: 16px;\n    height: 16px;\n    fill: ${base.colors.green900};\n  }\n  .post-title {\n    box-sizing: border-box;\n    font-size: clamp(16px, 0.909rem + 0.45vw, 20px);\n    font-weight: 500;\n    color: ${base.colors.green900};\n    word-wrap: break-word;\n    overflow-wrap: anywhere;\n  }\n`;\nexport const PostText = styled.p`\n  display: grid;\n  grid-template-rows: 1fr;\n  justify-content: start;\n  align-items: start;\n  padding: 4px;\n  margin: 0;\n  font-size: clamp(12px, 0.659rem + 0.45vw, 16px);\n  color: ${base.colors.green900};\n  overflow-y: auto;\n  scroll-behavior: smooth;\n  &::-webkit-scrollbar {\n    width: 8px;\n    height: 50px;\n  }\n  /* &::-webkit-scrollbar-track {\n    background: #f6f6f6;\n  } */\n  &::-webkit-scrollbar-thumb {\n    border-radius: 12px;\n    background: #c8e6c9;\n  }\n  /* &::-webkit-scrollbar-thumb:hover {\n    background: #249fa3;\n  } */\n  @media screen and (min-width: 480px) {\n    grid-template-rows: 80px;\n  }\n`;\nexport const WrapReviews = styled.div`\n  display: grid;\n  grid-template-columns: 28px 1fr 28px 28px;\n  grid-template-rows: 36px;\n  gap: 4px;\n  justify-content: start;\n  align-items: center;\n  padding: 2px 0;\n`;\nexport const ForComment = styled.input`\n  display: grid;\n  grid-template-columns: 1fr;\n  justify-self: stretch;\n  align-self: stretch;\n  border-radius: 8px;\n  border: none;\n  outline: none;\n  font-size: 16px;\n  padding: 4px 6px;\n`;\nexport const BtnIcons = styled.button`\n  display: grid;\n  align-items: center;\n  background-color: transparent;\n  border: none;\n  padding-inline: 0;\n  cursor: pointer;\n  .icon {\n    width: 24px;\n    height: 24px;\n    padding: 0;\n  }\n  .like {\n    fill: ${base.colors.like};\n  }\n  .coment {\n    fill: ${base.colors.yellow};\n  }\n  .send {\n    fill: ${base.colors.yellow};\n  }\n  .dots {\n    fill: ${base.colors.green900};\n  }\n`;\n\n// *******   USER POST  *******\nexport const WrapPostId = styled.div`\n  display: grid;\n  grid-template-columns: minmax(268px, 1fr);\n  grid-template-rows: 1fr 40px 74px;\n  gap: 16px;\n  padding: 4px;\n  margin: 0 auto;\n`;\nexport const WrapItem = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-template-rows: auto auto;\n  gap: 8px;\n  padding: 0;\n  margin: 0 auto;\n`;\nexport const BackLink = styled(Link)`\n  box-sizing: border-box;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 16px;\n  font-weight: 600;\n  text-decoration: none;\n  color: #ffffff;\n  background-color: ${base.colors.green100};\n  transition: all 0.3s;\n  border: none;\n  border-radius: 20px;\n  cursor: pointer;\n  &:hover,\n  :focus {\n    background-color: ${base.colors.green200};\n  }\n`;\n\n// *******   CREATE  POST *******\nexport const WrapCreate = styled.div`\n  position: relative;\n  display: grid;\n  grid-template-columns: minmax(304px, 552px);\n  grid-template-rows: 1fr 74px;\n  justify-content: center;\n  align-items: center;\n  gap: 8px;\n  padding: 8px 0;\n  margin: 0 auto;\n  @media screen and (min-width: 480px) {\n    padding: 16px 8px;\n  }\n`;\nexport const FormPost = styled.form`\n  display: grid;\n  grid-template-columns: minmax(288px, 552px);\n  grid-template-rows: 40px 40px 40px 1fr 88px;\n  justify-content: start;\n  align-items: center;\n  border: 2px solid ${base.colors.green300};\n  border-radius: 14px;\n  gap: 16px;\n  background-color: ${base.colors.green50};\n  padding: 8px;\n  margin: 0 auto;\n  .wrap-radio {\n    display: grid;\n    grid-template-columns: repeat(auto-fit, 84px);\n    justify-content: flex-start;\n    align-items: center;\n    gap: 8px;\n  }\n  .input {\n    display: grid;\n    grid-template-columns: 1fr;\n    box-sizing: border-box;\n    font-size: 16px;\n    font-weight: 400;\n    border-radius: 8px;\n    border: 1px solid ${base.colors.green300};\n    outline: ${base.colors.green300};\n    color: ${base.colors.green900};\n    justify-self: stretch;\n    align-self: stretch;\n    padding: 4px 8px;\n  }\n  .input::placeholder {\n    font-size: 16px;\n    color: ${base.colors.green300};\n  }\n  .label {\n    display: grid;\n    grid-template-columns: 12px 1fr;\n    justify-content: start;\n    align-items: center;\n    gap: 4px;\n    font-size: 16px;\n    font-weight: 500;\n    color: ${base.colors.green900};\n  }\n  .textarea {\n    display: grid;\n    grid-template-columns: minmax(256px 460px);\n    box-sizing: border-box;\n    font-size: 16px;\n    font-weight: 400;\n    color: ${base.colors.green900};\n    border-radius: 8px;\n    border: 1px solid ${base.colors.green300};\n    outline: ${base.colors.green300};\n    resize: vertical;\n    padding: 4px 8px;\n  }\n  .textarea::placeholder {\n    font-size: 16px;\n    color: ${base.colors.green300};\n  }\n  @media screen and (min-width: 480px) {\n    grid-template-columns: 460px;\n    grid-template-rows: 40px 40px 40px 1fr 40px;\n  }\n`;\nexport const WrapBtn = styled.div`\n  display: grid;\n  grid-template-columns: minmax(288px, 1fr);\n  grid-template-rows: 40px 40px;\n  justify-content: center;\n  align-items: center;\n  gap: 8px;\n  .btn {\n    display: grid;\n    grid-template-columns: 1fr;\n    grid-template-rows: 40px;\n    justify-content: center;\n    align-items: center;\n    font-size: 16px;\n    font-weight: 600;\n    color: #ffffff;\n    text-align: center;\n    background-color: ${base.colors.green500};\n    transition: all 0.3s;\n    border: none;\n    border-radius: 20px;\n    text-decoration: none;\n    padding: 0;\n    cursor: pointer;\n    &:hover,\n    :focus {\n      background-color: ${base.colors.green700};\n    }\n  }\n  @media screen and (min-width: 480px) {\n    grid-template-columns: 1fr 1fr;\n    grid-template-rows: 40px;\n  }\n`;\n\n// *******   USER POST EDIT *******\nexport const WrapEditPost = styled.div`\n  display: grid;\n  grid-template-columns: minmax(268px, 552px);\n  grid-template-rows: 40px auto 40px auto 88px auto;\n  justify-content: start;\n  align-items: center;\n  border-radius: 14px;\n  gap: 16px;\n  background-color: ${base.colors.green50};\n  padding: 4px;\n  margin: 0 auto;\n  .wrap-radio {\n    display: grid;\n    grid-template-columns: repeat(auto-fit, 84px);\n    justify-content: start;\n    align-items: center;\n    gap: 8px;\n  }\n  .input {\n    display: grid;\n    grid-template-columns: 1fr;\n    box-sizing: border-box;\n    font-size: 16px;\n    font-weight: 400;\n    border-radius: 8px;\n    border: 1px solid ${base.colors.green300};\n    outline: ${base.colors.green300};\n    color: ${base.colors.green900};\n    justify-self: stretch;\n    align-self: stretch;\n    padding: 4px 8px;\n  }\n  .input::placeholder {\n    font-size: 16px;\n    color: ${base.colors.green300};\n  }\n  .label {\n    display: grid;\n    grid-template-columns: 12px 1fr;\n    justify-content: start;\n    align-items: center;\n    gap: 4px;\n    font-size: 16px;\n    font-weight: 500;\n    color: ${base.colors.green900};\n  }\n  .textarea {\n    display: grid;\n    grid-template-columns: 1fr;\n    box-sizing: border-box;\n    font-size: 16px;\n    font-weight: 400;\n    color: ${base.colors.green900};\n    border-radius: 8px;\n    border: 1px solid ${base.colors.green300};\n    outline: ${base.colors.green300};\n    resize: vertical;\n    padding: 4px 8px;\n  }\n  .textarea::placeholder {\n    font-size: 16px;\n    color: ${base.colors.green300};\n  }\n  @media screen and (min-width: 480px) {\n    /* grid-template-columns: 460px; */\n    grid-template-rows: 40px 40px 40px 1fr 40px auto;\n  }\n`;\n","import React, { useState } from 'react';\nimport { FormPost, WrapBtn, WrapCreate } from './Posts.styled';\nimport { useAddPostMutation } from '../../redux/PostsSlice';\nimport { Link } from 'react-router-dom';\nimport NotifPositive from 'components/Helper/NotifPositive';\nimport NotifNegative from 'components/Helper/NotifNegative';\n\nexport default function CreatePost() {\n  const [isShow, setIsShow] = useState(false);\n  const [addPost, { isError, isSuccess }] = useAddPostMutation();\n\n  const showSuccess = isShow && isSuccess;\n  const showError = isShow && isError;\n\n  const onPublish = evt => {\n    evt.preventDefault();\n    const newUrl = evt.target.url.value;\n    const newTitle = evt.target.title.value;\n    const newTag = evt.target.tags.value;\n    const newText = evt.target.text.value;\n    const post = {\n      imageUrl: newUrl,\n      tag: newTag,\n      title: newTitle,\n      text: newText,\n    };\n\n    addPost(post);\n    setIsShow(true);\n  };\n  return (\n    <WrapCreate>\n      <FormPost autoComplete=\"off\" onSubmit={onPublish}>\n        <input\n          className=\"input\"\n          name=\"url\"\n          type=\"text\"\n          placeholder=\"Enter URL\"\n          required\n        />\n        <div className=\"wrap-radio\">\n          <label htmlFor=\"tags\" className=\"label\">\n            <input type=\"radio\" name=\"tags\" value=\"animals\" required />\n            animals\n          </label>\n          <label htmlFor=\"tags\" className=\"label\">\n            <input type=\"radio\" name=\"tags\" value=\"hobby\" required />\n            hobby\n          </label>\n          <label htmlFor=\"tags\" className=\"label\">\n            <input type=\"radio\" name=\"tags\" value=\"children\" required />\n            children\n          </label>\n          <label htmlFor=\"tags\" className=\"label\">\n            <input type=\"radio\" name=\"tags\" value=\"health\" required />\n            health\n          </label>\n        </div>\n        <input\n          className=\"input\"\n          name=\"title\"\n          type=\"text\"\n          placeholder=\"Enter title\"\n          required\n        />\n        <textarea\n          name=\"text\"\n          rows=\"auto\"\n          type=\"textarea\"\n          className=\"textarea\"\n          placeholder=\"Enter text\"\n          required\n        />\n        <WrapBtn>\n          <button type=\"submit\" className=\"btn\">\n            publish\n          </button>\n          <Link\n            to=\"/user-posts\"\n            className=\"btn\"\n            style={{ textDecoration: 'none' }}\n          >\n            go my posts\n          </Link>\n        </WrapBtn>\n      </FormPost>\n      {showSuccess && (\n        <NotifPositive\n          message={'You created a post'}\n          onClose={() => setIsShow(false)}\n        />\n      )}\n      {showError && (\n        <NotifNegative\n          message={'Please, try again later'}\n          onClose={() => setIsShow(false)}\n        />\n      )}\n    </WrapCreate>\n  );\n}\n","import React from 'react';\nimport CreatePost from '../components/Posts/CreatePost';\nimport { WrapPostPage } from 'components/Posts/Posts.styled';\n\nexport default function CreatePage() {\n  return (\n    <WrapPostPage>\n      <CreatePost />\n    </WrapPostPage>\n  );\n}\n"],"names":["NotifNegative","_ref","message","onClose","useEffect","timer","setTimeout","clearTimeout","_jsxs","WrapNotif","children","_jsx","GiShamrock","className","NotifPositive","WrapPostPage","styled","_templateObject","_taggedTemplateLiteral","WrapList","_templateObject2","WrapPanelPost","_templateObject3","WrapUserPost","_templateObject4","WrapLink","Link","_templateObject5","WrapPanel","_templateObject6","PanelAvatar","_templateObject7","base","PanelName","_templateObject8","CountLike","_templateObject9","WrapPost","_templateObject10","WrapMain","_templateObject11","WrapImgPost","_templateObject12","WrapInfo","_templateObject13","WrapTag","_templateObject14","WrapTitle","_templateObject15","PostText","_templateObject16","WrapReviews","_templateObject17","ForComment","_templateObject18","BtnIcons","_templateObject19","WrapPostId","_templateObject20","WrapItem","_templateObject21","BackLink","_templateObject22","WrapCreate","_templateObject23","FormPost","_templateObject24","WrapBtn","_templateObject25","WrapEditPost","_templateObject26","CreatePost","_useState","useState","_useState2","_slicedToArray","isShow","setIsShow","_useAddPostMutation","useAddPostMutation","_useAddPostMutation2","addPost","_useAddPostMutation2$","isError","isSuccess","showSuccess","showError","autoComplete","onSubmit","evt","preventDefault","newUrl","target","url","value","newTitle","title","newTag","tags","newText","text","imageUrl","tag","name","type","placeholder","required","htmlFor","rows","to","style","textDecoration","CreatePage"],"sourceRoot":""}