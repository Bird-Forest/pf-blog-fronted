{"version":3,"file":"static/js/271.5542fc08.chunk.js","mappings":"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","sources":["components/Helper/EmptyPage.jsx","components/Posts/Post.jsx","components/Posts/Posts.styled.js","components/Posts/PostsList.jsx","pages/PostsPage.jsx"],"sourcesContent":["import React from 'react';\nimport { GiSherlockHolmes } from 'react-icons/gi';\nimport { WrapEmpty } from './Helper.styled';\n\nexport default function EmptyPage() {\n  return (\n    <WrapEmpty>\n      <h2 className=\"empty-title\">There's nothing here yet</h2>\n      <GiSherlockHolmes className=\"icon-empty\" />\n    </WrapEmpty>\n  );\n}\n","import React from 'react';\nimport {\n  BsFillBookmarkFill,\n  BsCircleFill,\n  BsHandThumbsUpFill,\n  BsFillChatLeftTextFill,\n  BsSendFill,\n  BsThreeDotsVertical,\n} from 'react-icons/bs';\nimport {\n  BtnIcons,\n  CountLike,\n  ForComment,\n  PostText,\n  WrapComment,\n  WrapImgPost,\n  WrapInfo,\n  WrapLikes,\n  WrapMain,\n  WrapPost,\n  WrapReviews,\n  WrapTag,\n  WrapTitle,\n} from './Posts.styled';\n// import { ThemeProvider } from 'styled-components';\n\nexport default function Post({ post }) {\n  return (\n    // <ThemeProvider theme={theme}>\n    <WrapPost>\n      <WrapMain>\n        <WrapImgPost>\n          <img src={post.imageUrl} alt={post.title} className=\"img-post\" />\n        </WrapImgPost>\n        <WrapInfo>\n          <WrapTag>\n            <BsFillBookmarkFill className=\"icon-tag\" />\n            <h4 className=\"post-tag\">{post.tag}</h4>\n          </WrapTag>\n          <WrapTitle>\n            <BsCircleFill className=\"icon-title\" />\n            <h3 className=\"post-title\">{post.title}</h3>\n          </WrapTitle>\n        </WrapInfo>\n      </WrapMain>\n      <PostText>{post.text}</PostText>\n      {/* <WrapText> */}\n\n      {/* </WrapText> */}\n      <WrapReviews>\n        <WrapLikes>\n          <BtnIcons type=\"button\">\n            <BsHandThumbsUpFill className=\"icon like\" />\n          </BtnIcons>\n          <CountLike>{0}</CountLike>\n          <BtnIcons>\n            <BsFillChatLeftTextFill className=\"icon coment\" />\n          </BtnIcons>\n        </WrapLikes>\n        <WrapComment>\n          <ForComment />\n          <BtnIcons>\n            <BsSendFill className=\"icon send\" />\n          </BtnIcons>\n          <BtnIcons>\n            <BsThreeDotsVertical className=\"icon dots\" />\n          </BtnIcons>\n        </WrapComment>\n      </WrapReviews>\n    </WrapPost>\n    // </ThemeProvider>\n  );\n}\n\n//  <WrapPost>\n//    <WrapImgPost>\n//      <img\n//        src=\"https://cdn.pixabay.com/photo/2015/04/23/21/59/tree-736877_640.jpg\"\n//        alt=\"cat\"\n//        className=\"img-post\"\n//      />\n//    </WrapImgPost>\n//    <WrapInfo>\n//      <WrapTag>\n//        <BsFillBookmarkFill className=\"icon-tag\" />\n//        <h4 className=\"post-tag\">animal</h4>\n//      </WrapTag>\n//      <WrapTitle>\n//        <BsCircleFill className=\"icon-title\" />\n//        <h3 className=\"post-title\">My pet</h3>\n//      </WrapTitle>\n//      <PostText>\n//        Lorem ipsum dolor sit amet consectetur, adipisicing elit. Expedita fugiat\n//        adipisci itaque maxime ex eius atque esse praesentium porro! Ratione\n//        maxime sed, quidem alias consequuntur dicta assumenda accusamus\n//        consectetur error! Lorem ipsum dolor sit amet consectetur, adipisicing\n//        elit. Expedita fugiat adipisci itaque maxime ex eius atque esse\n//        praesentium porro! Ratione maxime sed, quidem alias consequuntur dicta\n//        assumenda accusamus consectetur error!\n//      </PostText>\n//    </WrapInfo>\n//    <WrapReviews>\n//      <button type=\"button\" className=\"btn-like\">\n//        <BsHandThumbsUpFill className=\"icon-like\" />\n//      </button>\n//      <span className=\"counter\">{0}</span>\n//      <button className=\"btn-comment\">Comment</button>\n//    </WrapReviews>\n//  </WrapPost>;\n","import { base } from 'baseTheme';\nimport styled from 'styled-components';\n\n// *******   CREATE  POST *******\n\nexport const WrapCreate = styled.div`\n  display: grid;\n  grid-template-columns: minmax(292px, 1fr);\n  grid-template-rows: 1fr 1fr;\n  background-color: blue;\n  gap: 8px;\n  padding: 8px 4px;\n  margin: 0 auto;\n  @media screen and (min-width: 480px) {\n    padding: 8px;\n  }\n`;\n\nexport const FormPost = styled.form`\n  display: grid;\n  grid-template-columns: minmax(292px, 1fr);\n  grid-template-rows: 40px 40px 40px auto 88px;\n  justify-content: flex-start;\n  align-items: center;\n  border: 2px solid red;\n  border-radius: 14px;\n  gap: 16px;\n  background-color: ${base.colors.alabaster50};\n  padding: 8px;\n  margin: 0 auto;\n  .input {\n    box-sizing: border-box;\n    font-size: 16px;\n    font-weight: 400;\n    border-radius: 4px;\n    border: 1px solid #bdbdbd;\n    justify-self: stretch;\n    align-self: stretch;\n    padding: 4px 8px;\n  }\n  .wrap-radio {\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: flex-start;\n    align-items: center;\n    font-size: 16px;\n    gap: 8px;\n  }\n  .textarea {\n    display: grid;\n    grid-template-columns: minmax(256px 444px);\n    box-sizing: border-box;\n    font-size: 16px;\n    font-weight: 400;\n    border-radius: 4px;\n    border: 1px solid #bdbdbd;\n    resize: vertical;\n  }\n  @media screen and (min-width: 480px) {\n    grid-template-columns: 460px;\n  }\n`;\n\nexport const WrapBtn = styled.div`\n  display: grid;\n  grid-template-columns: minmax(292px, 1fr);\n  grid-template-rows: 40px 40px;\n  gap: 8px;\n  .btn {\n    box-sizing: border-box;\n    display: grid;\n  }\n  @media screen and (min-width: 480px) {\n    grid-template-columns: 1fr 1fr;\n    grid-template-rows: 40px;\n  }\n`;\n\n// *******   POST LIST *******\n\nexport const WrapPostsList = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(312px, 1fr));\n  gap: 8px;\n  padding: 8px 4px;\n  margin: 0 auto;\n  @media screen and (min-width: 480px) {\n    padding: 8px;\n  }\n`;\n\n// *******   POST *******\nexport const WrapPost = styled.li`\n  display: grid;\n  grid-template-columns: minmax(292px, 1fr);\n  /* grid-template-rows: auto; */\n  justify-content: flex-start;\n  align-items: center;\n  gap: 8px;\n  border-radius: 14px;\n  /* border: 2px solid ${props => props.theme.border}; */\n  border: 2px solid red;\n  padding: 8px;\n  margin: 0 auto;\n  background-color: ${base.colors.alabaster50};\n  @media screen and (min-width: 480px) {\n    grid-template-columns: 460px;\n    grid-template-rows: 160px 100px 40px;\n  }\n`;\nexport const WrapMain = styled.div`\n  display: grid;\n  grid-template-columns: minmax(296px, 444px);\n  /* grid-template-rows: auto auto; */\n  padding: 0;\n  margin: 0;\n  @media screen and (min-width: 480px) {\n    grid-template-columns: 240px 212px;\n    grid-template-rows: 160px;\n    column-gap: 8px;\n  }\n`;\nexport const WrapImgPost = styled.div`\n  display: grid;\n  grid-template-columns: minmax(280px, 400px);\n  grid-template-rows: auto;\n  justify-content: center;\n  align-items: center;\n  border-radius: 10px;\n  .img-post {\n    border-radius: 12px;\n    justify-self: stretch;\n    align-self: stretch;\n  }\n  @media screen and (min-width: 480px) {\n    grid-template-columns: 240px;\n    grid-template-rows: 160px;\n  }\n`;\nexport const WrapInfo = styled.div`\n  display: grid;\n  gap: 16px;\n  grid-template-columns: 1fr;\n  grid-template-rows: 28px 1fr;\n  align-items: flex-start;\n  /* background-color: aqua; */\n  padding: 8px;\n`;\nexport const WrapTag = styled.div`\n  display: grid;\n  grid-template-columns: 24px 1fr;\n  justify-content: flex-start;\n  align-items: center;\n  column-gap: 8px;\n  padding: 0;\n  .icon-tag {\n    width: 20px;\n    height: 20px;\n    /* fill: ${props => props.theme.fill}; */\n    fill: red;\n  }\n  .post-tag {\n    box-sizing: border-box;\n    font-size: 20px;\n    /* color: ${props => props.theme.title}; */\n    color: red;\n  }\n`;\nexport const WrapTitle = styled.div`\n  display: grid;\n  grid-template-columns: 24px 1fr;\n  justify-content: flex-start;\n  align-items: flex-start;\n  gap: 8px;\n  padding: 0;\n  .icon-title {\n    width: 20px;\n    height: 20px;\n    fill: red;\n  }\n  .post-title {\n    box-sizing: border-box;\n    font-size: 20px;\n    color: red;\n    word-wrap: break-word;\n    overflow-wrap: anywhere;\n  }\n`;\nexport const WrapText = styled.div`\n  display: grid;\n  grid-template-columns: minmax(280px, 444px);\n  grid-template-rows: 1fr;\n  justify-content: flex-start;\n  align-items: flex-start;\n  padding: 0;\n  margin: 0;\n  /* .post-text {\n    font-size: 16px;\n    color: #ff1744;\n    overflow-y: auto;\n    scroll-behavior: smooth;\n  } */\n  @media screen and (min-width: 480px) {\n    grid-template-rows: 100px;\n  }\n`;\nexport const PostText = styled.p`\n  display: grid;\n  grid-template-columns: minmax(280px, 444px);\n  grid-template-rows: 1fr;\n  justify-content: flex-start;\n  align-items: flex-start;\n  padding: 0;\n  margin: 0;\n  font-size: 16px;\n  overflow-y: auto;\n  scroll-behavior: smooth;\n  &::-webkit-scrollbar {\n    width: 8px;\n    height: 50px;\n  }\n  /* &::-webkit-scrollbar-track {\n    background: #f6f6f6;\n  } */\n  &::-webkit-scrollbar-thumb {\n    border-radius: 12px;\n    background: ${base.colors.alabaster300};\n  }\n  /* &::-webkit-scrollbar-thumb:hover {\n    background: #249fa3;\n  } */\n  @media screen and (min-width: 480px) {\n    grid-template-rows: 100px;\n  }\n`;\nexport const WrapReviews = styled.div`\n  display: grid;\n  /* grid-template-columns: 40px 1fr 40px; */\n  grid-template-columns: minmax(280px, 444px);\n  grid-template-rows: 40px 40px;\n  gap: 4px;\n  justify-content: flex-start;\n  align-items: center;\n  @media screen and (min-width: 480px) {\n    grid-template-columns: 1fr 3fr;\n    grid-template-rows: 40px;\n  }\n`;\nexport const WrapLikes = styled.div`\n  display: grid;\n  grid-template-columns: 36px 36px 36px;\n  gap: 4px;\n  justify-content: flex-start;\n  align-items: center;\n`;\nexport const CountLike = styled.span`\n  display: grid;\n  justify-content: center;\n  align-items: center;\n  font-size: 20px;\n  width: 36px;\n  height: 36px;\n  margin: 0;\n  padding: 4px;\n`;\nexport const WrapComment = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 36px 36px;\n  justify-content: flex-start;\n  align-items: center;\n  gap: 4px;\n`;\nexport const ForComment = styled.input`\n  display: grid;\n  grid-template-columns: minmax(200px 1fr);\n  border-radius: 8px;\n  font-size: 12px;\n  padding: 8px 4px;\n`;\nexport const BtnIcons = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 36px;\n  height: 36px;\n  background-color: transparent;\n  border: none;\n  padding: 4px;\n  cursor: pointer;\n  .icon {\n    width: 36px;\n    height: 36px;\n  }\n  .like {\n    fill: #ffd740;\n  }\n  .coment {\n    fill: #ffd740;\n  }\n  .send {\n    fill: #ffd740;\n  }\n  .dots {\n    fill: #ffd740;\n  }\n`;\n\n// *******   EDIT PAGE *******\nexport const WrapEditList = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(312px, 1fr));\n  gap: 8px;\n  padding: 8px 4px;\n  margin: 0 auto;\n  @media screen and (min-width: 480px) {\n    padding: 8px;\n  }\n`;\nexport const WrapItem = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-template-rows: auto auto;\n  gap: 8px;\n  padding: 0;\n  margin: 0;\n`;\nexport const WrapBtnEdit = styled.div`\n  display: grid;\n  grid-template-columns: minmax(292px, 1fr);\n  grid-template-rows: 40px 40px;\n  gap: 8px;\n  .btn {\n    box-sizing: border-box;\n    display: grid;\n  }\n  @media screen and (min-width: 480px) {\n    grid-template-columns: 1fr 1fr;\n    grid-template-rows: 40px;\n  }\n`;\n\nexport const WrapEditPost = styled.div`\n  display: grid;\n  grid-template-columns: minmax(292px, 1fr);\n  grid-template-rows: 40px 40px 40px auto 88px;\n  justify-content: flex-start;\n  align-items: center;\n  border: 2px solid red;\n  border-radius: 14px;\n  gap: 16px;\n  background-color: ${base.colors.alabaster50};\n  padding: 8px;\n  margin: 0 auto;\n  .input {\n    box-sizing: border-box;\n    font-size: 16px;\n    font-weight: 400;\n    border-radius: 4px;\n    border: 1px solid #bdbdbd;\n    justify-self: stretch;\n    align-self: stretch;\n    padding: 4px 8px;\n  }\n  .wrap-radio {\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: flex-start;\n    align-items: center;\n    font-size: 16px;\n    gap: 8px;\n  }\n  .textarea {\n    display: grid;\n    grid-template-columns: minmax(256px 444px);\n    box-sizing: border-box;\n    font-size: 16px;\n    font-weight: 400;\n    border-radius: 4px;\n    border: 1px solid #bdbdbd;\n    resize: vertical;\n  }\n  @media screen and (min-width: 480px) {\n    grid-template-columns: 460px;\n  }\n`;\nexport const BtnSave = styled.button`\n  display: grid;\n  cursor: pointer;\n`;\n","import React from 'react';\nimport Post from './Post';\nimport { WrapPostsList } from './Posts.styled';\nimport EmptyPage from '../Helper/EmptyPage';\n// import { base } from 'baseTheme';\n\nexport default function PostsList({ posts, ...otherProps }) {\n  // const [theme, setTheme] = useState('');\n  // posts.map(post => {\n  //   if (post.tag === 'animals') {\n  //     setTheme(base.animals);\n  //   } else if (post.tag === 'recipes') {\n  //     setTheme(base.recipes);\n  //   } else if (post.tag === 'children') {\n  //     setTheme(base.children);\n  //   } else if (post.tag === 'health') {\n  //     setTheme(base.health);\n  //   }\n\n  //   return theme;\n  // });\n  // console.log(theme);\n  const Arr = Array.isArray(posts) && posts.length > 0;\n  return (\n    <WrapPostsList>\n      {Arr ? (\n        posts.map(post => <Post key={post._id} post={post} />)\n      ) : (\n        <EmptyPage />\n      )}\n    </WrapPostsList>\n  );\n}\n","import React from 'react';\nimport { WrapRender } from './Page.styled';\nimport { useGetPostsQuery } from '../redux/PostsSlice';\n// import { Outlet } from 'react-router-dom';\nimport PostsList from 'components/Posts/PostsList';\nimport Loading from 'components/Helper/Loading';\n\nexport default function PostsPage() {\n  const { data: posts, error, isLoading } = useGetPostsQuery();\n\n  return (\n    <WrapRender>\n      {error && (\n        <p>\n          Ой! Что-то пошло не так : Перезагрузите страницу и попробуйте еще раз.\n        </p>\n      )}\n      {isLoading ? <Loading /> : <PostsList posts={posts} />}\n      {/* <Outlet /> */}\n    </WrapRender>\n  );\n}\n"],"names":["EmptyPage","_jsxs","WrapEmpty","children","_jsx","className","GiSherlockHolmes","Post","_ref","post","WrapPost","WrapMain","WrapImgPost","src","imageUrl","alt","title","WrapInfo","WrapTag","BsFillBookmarkFill","tag","WrapTitle","BsCircleFill","PostText","text","WrapReviews","WrapLikes","BtnIcons","type","BsHandThumbsUpFill","CountLike","BsFillChatLeftTextFill","WrapComment","ForComment","BsSendFill","BsThreeDotsVertical","WrapCreate","styled","_templateObject","_taggedTemplateLiteral","FormPost","_templateObject2","base","WrapBtn","_templateObject3","WrapPostsList","_templateObject4","_templateObject5","props","theme","border","_templateObject6","_templateObject7","_templateObject8","_templateObject9","fill","_templateObject10","_templateObject11","_templateObject12","_templateObject13","_templateObject14","_templateObject15","_templateObject16","_templateObject17","_templateObject18","WrapEditList","_templateObject19","WrapItem","_templateObject20","WrapBtnEdit","_templateObject21","WrapEditPost","_templateObject22","BtnSave","_templateObject23","PostsList","posts","Arr","_objectWithoutProperties","_excluded","Array","isArray","length","map","_id","PostsPage","_useGetPostsQuery","useGetPostsQuery","data","error","isLoading","WrapRender","Loading"],"sourceRoot":""}