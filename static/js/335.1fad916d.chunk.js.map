{"version":3,"file":"static/js/335.1fad916d.chunk.js","mappings":"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","sources":["components/Auth/Enter.styled.js","components/Auth/FormName.jsx","components/Users/UserAvatar.jsx","components/Users/UserName.jsx","components/Users/Profile.jsx","components/Users/User.styled.js"],"sourcesContent":["import styled from 'styled-components';\nimport { base } from 'baseTheme';\nimport imgBg from '../../img/discus.png';\n// import { Link } from 'react-router-dom';\n\nexport const WrapEnter = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-template-rows: 80px 1fr;\n  justify-content: center;\n  align-items: start;\n  padding: 20px 8px;\n  margin: 0 auto;\n  /* @media screen and (min-width: 480px) {\n    padding: 16px 8px;\n  } */\n`;\n\n// *******   WELLCOM  *******\n\nexport const WrapWell = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-template-rows: 1fr;\n  justify-content: center;\n  align-items: center;\n  padding: 0;\n  margin: 0 auto;\n  background-color: aqua;\n`;\n\n// *******   AUTH  *******\n\nexport const WrapAuth = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(304px, 552px));\n  grid-template-rows: 40px 1fr;\n  justify-content: start;\n  align-items: center;\n  padding: 0 8px;\n`;\n\n// *******   NAVIGATE  *******\n\nexport const WrapNav = styled.nav`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  grid-template-rows: 40px;\n  .navigate {\n    display: grid;\n    grid-template-columns: auto;\n    justify-content: center;\n    align-items: center;\n    font-size: clamp(16px, 0.909rem + 0.45vw, 20px);\n    font-weight: 600;\n    color: ${base.colors.green900};\n    text-decoration: none;\n    transition: all 0.3s;\n    background-color: ${base.colors.green500};\n    padding: 0;\n    cursor: pointer;\n    &.active {\n      background-color: ${base.colors.green50};\n    }\n  }\n  .left {\n    border-top-right-radius: 80px;\n    border-top-left-radius: 16px;\n  }\n  .right {\n    border-top-right-radius: 16px;\n    border-top-left-radius: 80px;\n  }\n`;\n\n// *******   FORM  *******\n\nexport const WrapOutlet = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-template-rows: 1fr;\n  /* gap: 20px; */\n  justify-content: center;\n  align-items: center;\n  padding: 0;\n  margin: 0 auto;\n  /* background-color: red; */\n  background-image: url(${imgBg});\n  background-size: cover;\n  background-position: center center;\n  /* .img-bg {\n    display: grid;\n    grid-template-columns: minmax(272px, 552px);\n    grid-template-rows: 1fr;\n  } */\n`;\n\nexport const WrapForm = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(272px, 552px));\n  grid-template-rows: 1fr;\n  justify-content: center;\n  align-items: center;\n  background-color: ${base.colors.green50};\n  border-bottom-left-radius: 14px;\n  border-bottom-right-radius: 14px;\n  padding: 16px 8px;\n  margin: 0 auto;\n  .form-up {\n    display: grid;\n    grid-template-columns: 1fr;\n    grid-template-rows: 1fr 1fr 1fr 40px;\n    gap: 16px;\n  }\n  .form-in {\n    display: grid;\n    grid-template-columns: 1fr;\n    grid-template-rows: 1fr 1fr 40px;\n    gap: 16px;\n  }\n`;\n\nexport const WrapInputName = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-template-rows: 16px 40px;\n  gap: 4px;\n  padding: 0;\n  margin: 0;\n  .label-input {\n    display: grid;\n    grid-template-columns: 1fr;\n    font-size: 14px;\n    text-align: start;\n    color: ${base.colors.green900};\n    pointer-events: none;\n    transition: all 0.2s ease-in-out;\n    padding: 0 0 0 8px;\n    margin: 0;\n  }\n  .label-input.error {\n    color: #ff1744;\n  }\n  .name-input {\n    display: grid;\n    grid-template-columns: 1fr;\n    box-sizing: border-box;\n    font-size: 16px;\n    font-weight: 400;\n    border-radius: 8px;\n    border: 1px solid ${base.colors.green300};\n    outline: ${base.colors.green300};\n    color: ${base.colors.green900};\n    justify-self: stretch;\n    align-self: stretch;\n    padding: 4px 8px;\n  }\n  .name-input.error {\n    border: 1px solid #ff1744;\n  }\n`;\n\nexport const WrapInputPass = styled.div`\n  position: relative;\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-template-rows: 16px 40px;\n  gap: 4px;\n  padding: 0;\n  .label-input {\n    display: grid;\n    grid-template-columns: 1fr;\n    font-size: 14px;\n    text-align: start;\n    color: ${base.colors.green900};\n    pointer-events: none;\n    transition: all 0.2s ease-in-out;\n    padding: 0 0 0 8px;\n    margin: 0;\n  }\n  .label-input.error {\n    color: #ff1744;\n  }\n  .pass-input {\n    display: grid;\n    grid-template-columns: 1fr;\n    box-sizing: border-box;\n    font-size: 16px;\n    font-weight: 400;\n    border-radius: 8px;\n    border: 1px solid ${base.colors.green300};\n    outline: ${base.colors.green300};\n    color: ${base.colors.green900};\n    justify-self: stretch;\n    align-self: stretch;\n    padding: 4px 8px;\n  }\n  .pass-input.error {\n    border: 1px solid #ff1744;\n  }\n  .btn-eye {\n    position: absolute;\n    top: 30px;\n    right: 8px;\n    display: flex;\n    width: 20px;\n    height: 20px;\n    padding: 0;\n    background-color: #ffffff;\n    border: none;\n    outline: none;\n    cursor: pointer;\n  }\n  .icon-eye {\n    width: 20px;\n    height: 20px;\n    fill: ${base.colors.green900};\n  }\n`;\n\nexport const MessError = styled.div`\n  color: #ff1744;\n  font-size: 12px;\n`;\n\nexport const BtnAuth = styled.button`\n  box-sizing: border-box;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 16px;\n  font-weight: 600;\n  color: #ffffff;\n  background-color: ${base.colors.green500};\n  transition: all 0.3s;\n  border: none;\n  border-radius: 20px;\n  text-decoration: none;\n  cursor: pointer;\n  &:hover,\n  :focus {\n    background-color: ${base.colors.green700};\n  }\n`;\n","import { useField } from 'formik';\nimport React from 'react';\nimport { MessError, WrapInputName } from './Enter.styled';\n\nexport default function FormName({ label, ...props }) {\n  const [field, meta] = useField(props);\n  const errorClass = meta.touched && meta.error ? 'error' : '';\n  return (\n    <WrapInputName>\n      <label\n        htmlFor={props.id || props.name}\n        className={`label-input ${errorClass}`}\n      >\n        {label}\n      </label>\n      <input className={`name-input ${errorClass}`} {...field} {...props} />\n      {meta.touched && meta.error ? <MessError>{meta.error}</MessError> : null}\n    </WrapInputName>\n  );\n}\n","import React, { useRef, useState } from 'react';\nimport { BtnUdate, UploadImg, WrapUpload } from './User.styled';\n\nexport default function UserAvatar() {\n  const filePicker = useRef(null);\n  const [selectedFile, setSelectedFile] = useState(null);\n\n  const avatar = 'Avatar';\n\n  const handleChange = evt => {\n    // console.log(evt.target.files[0]);\n    setSelectedFile(evt.target.files[0]);\n  };\n  const handleUpload = () => {\n    if (!selectedFile) {\n      alert('select a file');\n      return;\n    }\n    const formData = new FormData();\n    const file = selectedFile;\n    formData.append('file', file);\n    // console.log(formData);\n    //  dispatch(updateAvatar(formData));\n  };\n\n  const handlePick = () => {\n    filePicker.current.click();\n  };\n  return (\n    <WrapUpload>\n      <UploadImg>\n        <input\n          accept=\"image/*, .png, .jpg, .web,\"\n          type=\"file\"\n          ref={filePicker}\n          onChange={handleChange}\n          className=\"input-hidden\"\n        />\n        <img src={avatar} alt=\"avatar\" className=\"avatar-img\" />\n        <button onClick={handlePick} className=\"btn-choose\">\n          file upload\n        </button>\n      </UploadImg>\n      <BtnUdate type=\"submit\" onClick={handleUpload}>\n        update avatar\n        {/* {isLoadding ? <Spinner /> : 'save'} */}\n      </BtnUdate>\n    </WrapUpload>\n  );\n}\n","import React from 'react';\nimport { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport FormName from 'components/Auth/FormName';\n// import Spinner from 'components/Helper/Spinner';\nimport { BtnUdate, WrapUpdateName } from './User.styled';\n\nconst validationSchema = Yup.object({\n  name: Yup.string().min(2, 'Too Short!').max(7, 'Too Long!'),\n});\nconst initialValues = {\n  name: '',\n};\n\nexport default function UserName() {\n  return (\n    <WrapUpdateName>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={(values, { setSubmitting, resetForm }) => {\n          setSubmitting(true);\n          console.log(values);\n          // signUpUser(values);\n          resetForm();\n        }}\n      >\n        {props => (\n          <Form className=\"form-up\" autoComplete=\"off\">\n            <FormName label=\"Name*\" name=\"name\" type=\"text\" />\n            <BtnUdate type=\"submit\">\n              update name\n              {/* {props.isSubmitting ? <Spinner /> : 'save'} */}\n            </BtnUdate>\n          </Form>\n        )}\n      </Formik>\n    </WrapUpdateName>\n  );\n}\n","import React from 'react';\nimport { WrapProfile } from './User.styled';\nimport UserAvatar from './UserAvatar';\nimport UserName from './UserName';\n\nexport default function Profile() {\n  return (\n    <WrapProfile>\n      <UserAvatar />\n      <UserName />\n    </WrapProfile>\n  );\n}\n","import styled from 'styled-components';\nimport { base } from 'baseTheme';\n\n// ******** PROFILE ********\nexport const WrapProfile = styled.div`\n  display: grid;\n  grid-template-columns: minmax(272px, 420px);\n  grid-template-rows: auto auto;\n  gap: 40px;\n  border: 2px solid ${base.colors.green300};\n  border-radius: 14px;\n  background-color: ${base.colors.green50};\n  padding: 20px;\n  margin: 20px auto;\n`;\n\n// ******** UPLOAD AVATAR ********\nexport const WrapUpload = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-template-rows: 80px 40px;\n  gap: 16px;\n`;\nexport const UploadImg = styled.div`\n  display: grid;\n  grid-template-columns: 1px 80px 160px;\n  grid-template-rows: 80px;\n  justify-content: start;\n  align-items: center;\n  gap: 16px;\n  .avatar-img {\n    display: flex;\n    width: 80px;\n    height: 80px;\n    justify-content: center;\n    align-items: center;\n    background-size: cover;\n    background-repeat: no-repeat;\n    border-radius: 50%;\n    border: 1px solid ${base.colors.green900};\n  }\n  .input-hidden {\n    opacity: 0;\n    width: 0;\n    height: 0;\n    line-height: 0;\n    overflow: hidden;\n    padding: 0;\n    margin: 0;\n  }\n  .btn-choose {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 160px;\n    height: 40px;\n    font-weight: 500;\n    font-size: 16px;\n    line-height: 1.5;\n    /* color: ${base.colors.green900}; */\n    color: #ffffff;\n    border-radius: 20px;\n    background-color: ${base.colors.green200};\n    border: none;\n    padding: 0;\n    cursor: pointer;\n    &:hover,\n    :focus {\n      background-color: ${base.colors.green400};\n    }\n  }\n`;\nexport const BtnUdate = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 16px;\n  font-weight: 600;\n  color: #ffffff;\n  background-color: ${base.colors.green500};\n  transition: all 0.3s;\n  border: none;\n  border-radius: 20px;\n  text-decoration: none;\n  cursor: pointer;\n  &:hover,\n  :focus {\n    background-color: ${base.colors.green700};\n  }\n`;\n// ******** UPDATE NAME ********\nexport const WrapUpdateName = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-template-rows: 1fr;\n  .form-up {\n    display: grid;\n    grid-template-columns: 1fr;\n    grid-template-rows: 80px 40px;\n  }\n`;\n// ********* LOG OUT ********\nexport const WrapLogoutPage = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-template-rows: 1fr;\n  padding: 8px;\n  @media screen and (min-width: 480px) {\n    padding: 16px 8px;\n  }\n`;\nexport const WrapLogOut = styled.div`\n  display: grid;\n  grid-template-columns: minmax(272px, 552px);\n  grid-template-rows: 1fr 1fr 1fr 1fr;\n  justify-content: center;\n  align-items: center;\n  background-color: ${base.colors.green100};\n  border-radius: 16px;\n  gap: 16px;\n  padding: 16px;\n  margin: 20px auto;\n  .title-out {\n    font-size: clamp(16px, 0.909rem + 0.45vw, 20px);\n    font-weight: 500;\n    text-align: center;\n    color: ${base.colors.green900};\n    word-wrap: break-word;\n    overflow-wrap: anywhere;\n  }\n  .text-out {\n    font-size: clamp(12px, 0.659rem + 0.45vw, 16px);\n    color: ${base.colors.green900};\n    text-align: center;\n  }\n  .btn-out {\n    display: grid;\n    grid-template-columns: 1fr;\n    grid-template-rows: 40px;\n    justify-content: center;\n    transition: all 0.3s;\n    border: none;\n    border-radius: 20px;\n    align-items: center;\n    color: #ffffff;\n    text-align: center;\n    background-color: ${base.colors.green500};\n    cursor: pointer;\n    &:hover,\n    :focus {\n      background-color: ${base.colors.green700};\n    }\n  }\n  .link-out {\n    font-size: 16px;\n    font-weight: 600;\n    color: #ffffff;\n    text-decoration: none;\n  }\n`;\n"],"names":["WrapEnter","styled","_templateObject","_taggedTemplateLiteral","WrapWell","_templateObject2","WrapAuth","_templateObject3","WrapNav","_templateObject4","base","WrapOutlet","_templateObject5","imgBg","WrapForm","_templateObject6","WrapInputName","_templateObject7","WrapInputPass","_templateObject8","MessError","_templateObject9","BtnAuth","_templateObject10","FormName","_ref","label","props","_objectWithoutProperties","_excluded","_useField","useField","_useField2","_slicedToArray","field","meta","errorClass","touched","error","_jsxs","children","_jsx","htmlFor","id","name","className","concat","_objectSpread","UserAvatar","filePicker","useRef","_useState","useState","_useState2","selectedFile","setSelectedFile","WrapUpload","UploadImg","accept","type","ref","onChange","evt","target","files","src","alt","onClick","current","click","BtnUdate","formData","FormData","file","append","alert","validationSchema","Yup","min","max","initialValues","UserName","WrapUpdateName","Formik","onSubmit","values","setSubmitting","resetForm","console","log","Form","autoComplete","Profile","WrapProfile","WrapLogoutPage","WrapLogOut"],"sourceRoot":""}