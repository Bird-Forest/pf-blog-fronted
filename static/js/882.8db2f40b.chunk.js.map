{"version":3,"file":"static/js/882.8db2f40b.chunk.js","mappings":"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","sources":["components/Helper/EmptyPage.jsx","components/Helper/ModalWindow.jsx","components/Posts/Post.jsx","components/Posts/Posts.styled.js","components/Posts/EditPost.jsx","components/Posts/EditListOfPosts.jsx","pages/EditPage.jsx"],"sourcesContent":["import React from 'react';\nimport { GiSherlockHolmes } from 'react-icons/gi';\nimport { WrapEmpty } from './Helper.styled';\n\nexport default function EmptyPage({ message }) {\n  return (\n    <WrapEmpty>\n      <h2 className=\"empty-title\">{message}</h2>\n      <GiSherlockHolmes className=\"icon-empty\" />\n    </WrapEmpty>\n  );\n}\n","import React, { useEffect } from 'react';\nimport { WrapModal, WrapOverlayModal } from './Helper.styled';\n\nexport default function ModalWindow({ onClose, content }) {\n  useEffect(() => {\n    const handleEscape = event => {\n      if (event.key === 'Escape') {\n        onClose();\n      }\n    };\n    window.addEventListener('keydown', handleEscape);\n    document.body.style.overflow = 'hidden';\n\n    return () => {\n      window.removeEventListener('keydown', handleEscape);\n      document.body.style.overflow = 'auto';\n    };\n  }, [onClose]);\n  return (\n    <WrapOverlayModal onClick={onClose}>\n      <WrapModal onClick={e => e.stopPropagation()}>{content}</WrapModal>\n    </WrapOverlayModal>\n  );\n}\n","import React from 'react';\nimport {\n  BsFillBookmarkFill,\n  BsCircleFill,\n  BsHandThumbsUpFill,\n  BsChatRightTextFill,\n  BsSendFill,\n  BsThreeDotsVertical,\n} from 'react-icons/bs';\n\nimport {\n  BtnIcons,\n  CountLike,\n  ForComment,\n  PostText,\n  UserName,\n  WrapAvatar,\n  WrapComment,\n  WrapImgPost,\n  WrapInfo,\n  WrapMain,\n  WrapPost,\n  WrapReviews,\n  WrapTag,\n  WrapTitle,\n  WrapUser,\n  WrapUserPost,\n} from './Posts.styled';\n\nexport default function Post({ post }) {\n  return (\n    <WrapUserPost>\n      <WrapUser>\n        <div className=\"bgr\">\n          <WrapAvatar>R</WrapAvatar>\n          <UserName>Tom Fisher</UserName>\n          <BtnIcons type=\"button\">\n            <BsHandThumbsUpFill className=\"icon like\" />\n          </BtnIcons>\n          <CountLike>{123}</CountLike>\n        </div>\n      </WrapUser>\n      <WrapPost>\n        <WrapMain>\n          <WrapImgPost>\n            <img src={post.imageUrl} alt={post.title} className=\"img-post\" />\n          </WrapImgPost>\n          <WrapInfo>\n            <WrapTag>\n              <BsFillBookmarkFill className=\"icon-tag\" />\n              <h4 className=\"post-tag\">{post.tag}</h4>\n            </WrapTag>\n            <WrapTitle>\n              <BsCircleFill className=\"icon-title\" />\n              <h3 className=\"post-title\">{post.title}</h3>\n            </WrapTitle>\n          </WrapInfo>\n        </WrapMain>\n        <PostText>{post.text}</PostText>\n        <WrapReviews>\n          <BtnIcons>\n            <BsChatRightTextFill className=\"icon coment\" />\n          </BtnIcons>\n          <WrapComment>\n            <ForComment />\n            <BtnIcons>\n              <BsSendFill className=\"icon send\" />\n            </BtnIcons>\n          </WrapComment>\n          <BtnIcons>\n            <BsThreeDotsVertical className=\"icon dots\" />\n          </BtnIcons>\n        </WrapReviews>\n      </WrapPost>\n    </WrapUserPost>\n  );\n}\n","import { base } from 'baseTheme';\nimport styled from 'styled-components';\n\n// *******   CREATE  POST *******\n\nexport const WrapCreate = styled.div`\n  display: grid;\n  grid-template-columns: minmax(292px, 1fr);\n  grid-template-rows: 1fr 1fr;\n  gap: 8px;\n  padding: 8px 4px;\n  margin: 0 auto;\n  @media screen and (min-width: 480px) {\n    padding: 8px;\n  }\n`;\n\nexport const FormPost = styled.form`\n  display: grid;\n  grid-template-columns: minmax(292px, 1fr);\n  grid-template-rows: 40px 40px 40px 1fr 88px;\n  justify-content: flex-start;\n  align-items: center;\n  border: 2px solid ${base.colors.green300};\n  border-radius: 14px;\n  gap: 16px;\n  background-color: ${base.colors.green50};\n  padding: 8px;\n  margin: 0 auto;\n  .wrap-radio {\n    display: grid;\n    grid-template-columns: repeat(auto-fit, 84px);\n    justify-content: flex-start;\n    align-items: center;\n    gap: 8px;\n  }\n  .input {\n    display: grid;\n    grid-template-columns: 1fr;\n    box-sizing: border-box;\n    font-size: 16px;\n    font-weight: 400;\n    border-radius: 8px;\n    border: 1px solid ${base.colors.green300};\n    outline: ${base.colors.green300};\n    color: ${base.colors.green900};\n    justify-self: stretch;\n    align-self: stretch;\n    padding: 4px 8px;\n  }\n  .input::placeholder {\n    font-size: 16px;\n    color: ${base.colors.green300};\n  }\n  .label {\n    display: grid;\n    grid-template-columns: 12px 1fr;\n    justify-content: flex-start;\n    align-items: center;\n    gap: 4px;\n    font-size: 16px;\n    font-weight: 500;\n    color: ${base.colors.green900};\n  }\n  .textarea {\n    display: grid;\n    grid-template-columns: minmax(256px 460px);\n    box-sizing: border-box;\n    font-size: 16px;\n    font-weight: 400;\n    color: ${base.colors.green900};\n    border-radius: 8px;\n    border: 1px solid ${base.colors.green300};\n    outline: ${base.colors.green300};\n    resize: vertical;\n    padding: 4px 8px;\n  }\n  .textarea::placeholder {\n    font-size: 16px;\n    color: ${base.colors.green300};\n  }\n  @media screen and (min-width: 480px) {\n    grid-template-columns: 460px;\n    grid-template-rows: 40px 40px 40px 1fr 40px;\n  }\n`;\nexport const WrapBtn = styled.div`\n  display: grid;\n  grid-template-columns: minmax(292px, 1fr);\n  grid-template-rows: 40px 40px;\n  gap: 8px;\n  .btn {\n    box-sizing: border-box;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    font-size: 16px;\n    font-weight: 600;\n    color: #ffffff;\n    background-color: ${base.colors.green500};\n    transition: all 0.3s;\n    border: none;\n    border-radius: 20px;\n    cursor: pointer;\n    &:hover,\n    :focus {\n      background-color: ${base.colors.green700};\n    }\n  }\n  @media screen and (min-width: 480px) {\n    grid-template-columns: 1fr 1fr;\n    grid-template-rows: 40px;\n  }\n`;\n\n// *******   POST LIST *******\n\nexport const WrapPostsList = styled.ul`\n  display: grid;\n  gap: 8px;\n  grid-template-columns: minmax(312px, 1fr);\n  padding: 8px 4px;\n  margin: 0 auto;\n  @media screen and (min-width: 920px) {\n    grid-template-columns: repeat(2, 1fr);\n    padding: 8px;\n    grid-template-rows: auto;\n  }\n`;\n\n// *******   POST *******\nexport const WrapUserPost = styled.li`\n  display: grid;\n  grid-template-columns: minmax(292px, auto);\n  grid-template-rows: auto auto;\n  gap: 8px;\n  padding: 0;\n  margin: 0;\n`;\nexport const WrapUser = styled.div`\n  display: grid;\n  grid-template-columns: 272px auto;\n  .bgr {\n    display: grid;\n    grid-template-columns: 36px 124px 40px 56px;\n    grid-template-rows: 36px;\n    justify-content: flex-start;\n    align-items: center;\n    gap: 4px;\n    border: none;\n    border-radius: 30px;\n    background-color: #ffffff;\n    padding: 2px;\n    margin: 0;\n  }\n`;\nexport const WrapAvatar = styled.div`\n  display: grid;\n  grid-template-rows: 36px;\n  justify-content: center;\n  align-items: center;\n  border-radius: 50%;\n  background-color: yellow;\n`;\nexport const UserName = styled.p`\n  display: grid;\n  justify-content: flex-start;\n  align-items: center;\n  font-size: clamp(12px, 0.614rem + 0.68vw, 18px);\n  font-weight: 600;\n  color: ${base.colors.green900};\n  padding: 4px;\n`;\nexport const CountLike = styled.span`\n  display: grid;\n  justify-content: flex-start;\n  align-items: center;\n  font-size: clamp(12px, 0.659rem + 0.45vw, 16px);\n  color: ${base.colors.green900};\n  margin: 0;\n  padding: 4px;\n`;\nexport const WrapPost = styled.div`\n  display: grid;\n  grid-template-columns: minmax(292px, 552px);\n  justify-content: flex-start;\n  align-items: center;\n  gap: 8px;\n  border-radius: 14px;\n  padding: 8px;\n  margin: 0 auto;\n  background-color: ${base.colors.green50};\n  @media screen and (min-width: 480px) {\n    grid-template-rows: 160px 100px 40px;\n  }\n`;\n\nexport const WrapMain = styled.div`\n  display: grid;\n  padding: 0;\n  margin: 0;\n  @media screen and (min-width: 480px) {\n    grid-template-columns: 240px 1fr;\n    grid-template-rows: 160px;\n    gap: 8px;\n  }\n`;\nexport const WrapImgPost = styled.div`\n  display: grid;\n  grid-template-columns: minmax(280px, 400px);\n  grid-template-rows: auto;\n  justify-content: center;\n  align-items: center;\n  border-radius: 10px;\n  .img-post {\n    border-radius: 12px;\n    justify-self: stretch;\n    align-self: stretch;\n  }\n  @media screen and (min-width: 480px) {\n    grid-template-columns: 240px;\n    grid-template-rows: 160px;\n  }\n`;\nexport const WrapInfo = styled.div`\n  display: grid;\n  gap: 8px;\n  grid-template-columns: 1fr;\n  grid-template-rows: 20px 1fr;\n  align-items: flex-start;\n  padding: 8px;\n`;\nexport const WrapTag = styled.div`\n  display: grid;\n  grid-template-columns: 20px 1fr;\n  justify-content: flex-start;\n  align-items: center;\n  column-gap: 8px;\n  padding: 0;\n  .icon-tag {\n    width: 16px;\n    height: 16px;\n    fill: ${base.colors.comment};\n  }\n  .post-tag {\n    box-sizing: border-box;\n    font-size: clamp(12px, 0.614rem + 0.68vw, 18px);\n    font-weight: 700;\n    color: ${base.colors.comment};\n  }\n`;\nexport const WrapTitle = styled.div`\n  display: grid;\n  grid-template-columns: 20px 1fr;\n  justify-content: flex-start;\n  align-items: flex-start;\n  gap: 4px;\n  padding: 0;\n  .icon-title {\n    width: 16px;\n    height: 16px;\n    fill: ${base.colors.green900};\n  }\n  .post-title {\n    box-sizing: border-box;\n    font-size: clamp(16px, 0.909rem + 0.45vw, 20px);\n    font-weight: 500;\n    color: ${base.colors.green900};\n    word-wrap: break-word;\n    overflow-wrap: anywhere;\n  }\n`;\nexport const PostText = styled.p`\n  display: grid;\n  grid-template-rows: 1fr;\n  justify-content: flex-start;\n  align-items: flex-start;\n  padding: 4px;\n  margin: 0;\n  font-size: clamp(12px, 0.659rem + 0.45vw, 16px);\n  color: ${base.colors.green900};\n  overflow-y: auto;\n  scroll-behavior: smooth;\n  &::-webkit-scrollbar {\n    width: 8px;\n    height: 50px;\n  }\n  /* &::-webkit-scrollbar-track {\n    background: #f6f6f6;\n  } */\n  &::-webkit-scrollbar-thumb {\n    border-radius: 12px;\n    background: #c8e6c9;\n  }\n  /* &::-webkit-scrollbar-thumb:hover {\n    background: #249fa3;\n  } */\n  @media screen and (min-width: 480px) {\n    grid-template-rows: 80px;\n  }\n`;\nexport const WrapReviews = styled.div`\n  display: grid;\n  grid-template-columns: 36px 1fr 36px;\n  grid-template-rows: 36px;\n  gap: 4px;\n  justify-content: flex-start;\n  align-items: center;\n  padding: 2px;\n`;\n\nexport const WrapComment = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 36px;\n  justify-content: flex-start;\n  align-items: center;\n  gap: 4px;\n`;\nexport const ForComment = styled.input`\n  display: grid;\n  grid-template-columns: minmax(200px 1fr);\n  border-radius: 8px;\n  border: 1px solid white;\n  outline: none;\n  font-size: 12px;\n  padding: 8px 4px;\n`;\nexport const BtnIcons = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 36px;\n  height: 36px;\n  background-color: transparent;\n  border: none;\n  padding: 4px;\n  cursor: pointer;\n  .icon {\n    width: 24px;\n    height: 24px;\n  }\n  .like {\n    fill: ${base.colors.like};\n  }\n  .coment {\n    fill: ${base.colors.comment};\n  }\n  .send {\n    fill: ${base.colors.comment};\n  }\n  .dots {\n    fill: ${base.colors.green900};\n  }\n`;\n\n// *******   EDIT PAGE *******\nexport const WrapEditList = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(312px, 1fr));\n  gap: 8px;\n  padding: 8px 4px;\n  margin: 0 auto;\n  @media screen and (min-width: 480px) {\n    padding: 8px;\n  }\n`;\nexport const WrapItem = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-template-rows: auto auto;\n  gap: 8px;\n  padding: 0;\n  margin: 0;\n`;\nexport const WrapBtnEdit = styled.div`\n  display: grid;\n  grid-template-columns: minmax(292px, 1fr);\n  grid-template-rows: 40px 40px;\n  gap: 8px;\n  .btn {\n    box-sizing: border-box;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    font-size: 16px;\n    font-weight: 600;\n    color: #ffffff;\n    background-color: ${base.colors.green500};\n    transition: all 0.3s;\n    border: none;\n    border-radius: 20px;\n    cursor: pointer;\n    &:hover,\n    :focus {\n      background-color: ${base.colors.green700};\n    }\n  }\n  @media screen and (min-width: 480px) {\n    grid-template-columns: 1fr 1fr;\n    grid-template-rows: 40px;\n  }\n`;\n\nexport const WrapEditPost = styled.div`\n  display: grid;\n  grid-template-columns: minmax(292px, 1fr);\n  grid-template-rows: 40px 40px 40px auto 40px;\n  justify-content: flex-start;\n  align-items: center;\n  /* border: 2px solid ${base.colors.green300}; */\n  border-radius: 14px;\n  gap: 16px;\n  background-color: ${base.colors.green50};\n  padding: 8px;\n  margin: 0 auto;\n  .wrap-radio {\n    display: grid;\n    grid-template-columns: repeat(auto-fit, 84px);\n    justify-content: flex-start;\n    align-items: center;\n    gap: 8px;\n  }\n  .input {\n    display: grid;\n    grid-template-columns: 1fr;\n    box-sizing: border-box;\n    font-size: 16px;\n    font-weight: 400;\n    border-radius: 8px;\n    border: 1px solid ${base.colors.green300};\n    outline: ${base.colors.green300};\n    color: ${base.colors.green900};\n    justify-self: stretch;\n    align-self: stretch;\n    padding: 4px 8px;\n  }\n  .input::placeholder {\n    font-size: 16px;\n    color: ${base.colors.green300};\n  }\n  .label {\n    display: grid;\n    grid-template-columns: 12px 1fr;\n    justify-content: flex-start;\n    align-items: center;\n    gap: 4px;\n    font-size: 16px;\n    font-weight: 500;\n    color: ${base.colors.green900};\n  }\n  .textarea {\n    display: grid;\n    grid-template-columns: minmax(256px 460px);\n    box-sizing: border-box;\n    font-size: 16px;\n    font-weight: 400;\n    color: ${base.colors.green900};\n    border-radius: 8px;\n    border: 1px solid ${base.colors.green300};\n    outline: ${base.colors.green300};\n    resize: vertical;\n    padding: 4px 8px;\n  }\n  .textarea::placeholder {\n    font-size: 16px;\n    color: ${base.colors.green300};\n  }\n  @media screen and (min-width: 480px) {\n    grid-template-columns: 460px;\n    grid-template-rows: 40px 40px 40px 1fr 40px;\n  }\n`;\nexport const BtnSave = styled.button`\n  box-sizing: border-box;\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-template-rows: 40px;\n  justify-content: center;\n  align-items: center;\n  font-size: 16px;\n  font-weight: 600;\n  color: #ffffff;\n  background-color: ${base.colors.green500};\n  transition: all 0.3s;\n  border: none;\n  border-radius: 20px;\n  cursor: pointer;\n  &:hover,\n  :focus {\n    background-color: ${base.colors.green700};\n  }\n`;\n","import React, { useState } from 'react';\n\nimport { BtnSave, WrapEditPost } from './Posts.styled';\n\nexport default function EditPost({ data, onUpdatePost }) {\n  const id = data._id;\n  const fields = {\n    imageUrl: data.imageUrl,\n    tag: data.tag,\n    title: data.title,\n    text: data.text,\n  };\n\n  const [post, setPost] = useState(fields);\n\n  const onChangeField = (field, value) => {\n    setPost(prevState => ({\n      ...prevState,\n      [field]: value,\n    }));\n  };\n\n  const handleUpdate = () => {\n    onUpdatePost(id, post);\n    // console.log('handleUpdate', post);\n  };\n\n  return (\n    <WrapEditPost autoComplete=\"off\">\n      <input\n        className=\"input\"\n        name=\"imageUrl\"\n        type=\"text\"\n        value={post.imageUrl}\n        onChange={e => onChangeField('imageUrl', e.target.value)}\n      />\n      <div className=\"wrap-radio\">\n        <label htmlFor=\"tags\" className=\"label\">\n          <input\n            type=\"radio\"\n            name=\"tag\"\n            value=\"animals\"\n            onChange={e => onChangeField('tag', e.target.value)}\n          />\n          animals\n        </label>\n        <label htmlFor=\"tags\" className=\"label\">\n          <input\n            type=\"radio\"\n            name=\"tag\"\n            value=\"hobby\"\n            onChange={e => onChangeField('tag', e.target.value)}\n          />\n          hobby\n        </label>\n        <label htmlFor=\"tags\" className=\"label\">\n          <input\n            type=\"radio\"\n            name=\"tag\"\n            value=\"children\"\n            onChange={e => onChangeField('tag', e.target.value)}\n          />\n          children\n        </label>\n        <label htmlFor=\"tags\" className=\"label\">\n          <input\n            type=\"radio\"\n            name=\"tag\"\n            value=\"health\"\n            onChange={e => onChangeField('tag', e.target.value)}\n          />\n          health\n        </label>\n      </div>\n      <input\n        className=\"input\"\n        name=\"title\"\n        type=\"text\"\n        value={post.title}\n        onChange={e => onChangeField('title', e.target.value)}\n      />\n      <textarea\n        name=\"text\"\n        rows=\"auto\"\n        type=\"textarea\"\n        className=\"textarea\"\n        value={post.text}\n        onChange={e => onChangeField('text', e.target.value)}\n      />\n      <BtnSave type=\"button\" onClick={handleUpdate}>\n        update post\n      </BtnSave>\n    </WrapEditPost>\n  );\n}\n","import React, { useState } from 'react';\nimport {\n  WrapBtnEdit,\n  WrapEditList,\n  WrapItem,\n} from 'components/Posts/Posts.styled';\nimport Post from 'components/Posts/Post';\nimport EmptyPage from 'components/Helper/EmptyPage';\nimport { nanoid } from '@reduxjs/toolkit';\nimport {\n  useDeletePostMutation,\n  useGetPostByIdQuery,\n  useUpdatePostMutation,\n} from '../../redux/PostsSlice';\nimport { createPortal } from 'react-dom';\nimport ModalWindow from '../Helper/ModalWindow';\nimport EditPost from './EditPost';\n\nexport default function EditListOfPosts({ posts }) {\n  const [id, setId] = useState('');\n  const [showModal, setShowModal] = useState(false);\n\n  const { data } = useGetPostByIdQuery(id);\n  const [updatePost] = useUpdatePostMutation();\n  const [deletePost] = useDeletePostMutation();\n\n  const onEdit = evt => {\n    const id = evt.target.name;\n    setId(id);\n    setShowModal(true);\n  };\n\n  const onUpdatePost = (id, post) => {\n    // console.log('POST', post);\n    // console.log('ID', id);\n    updatePost({ id, post });\n  };\n\n  const onDelete = evt => {\n    const id = evt.target.name;\n    deletePost(id);\n  };\n\n  const Arr = Array.isArray(posts) && posts.length > 0;\n  return (\n    <WrapEditList>\n      {Arr ? (\n        posts.map(post => (\n          <WrapItem key={nanoid()}>\n            <Post key={nanoid()} post={post} />\n            <WrapBtnEdit key={nanoid()}>\n              <button\n                key={nanoid()}\n                name={post._id}\n                onClick={onEdit}\n                className=\"btn\"\n              >\n                edit\n              </button>\n              {showModal &&\n                createPortal(\n                  <ModalWindow\n                    key={nanoid()}\n                    onClose={() => setShowModal(false)}\n                    content={\n                      <EditPost\n                        key={nanoid()}\n                        data={data}\n                        onUpdatePost={onUpdatePost}\n                      />\n                    }\n                  />,\n                  document.body\n                )}\n              <button\n                key={nanoid()}\n                name={post._id}\n                onClick={onDelete}\n                className=\"btn\"\n              >\n                delete\n              </button>\n            </WrapBtnEdit>\n          </WrapItem>\n        ))\n      ) : (\n        <EmptyPage message={\"There's nothing here yet\"} />\n      )}\n    </WrapEditList>\n  );\n}\n","import React from 'react';\nimport { WrapRender } from './Page.styled';\nimport { useGetPostsQuery } from '../redux/PostsSlice';\nimport EditListOfPosts from 'components/Posts/EditListOfPosts';\nimport EmptyPage from 'components/Helper/EmptyPage';\n\nexport default function EditPage() {\n  const { data: posts, error } = useGetPostsQuery();\n  return (\n    <WrapRender>\n      {error ? (\n        <EmptyPage\n          message={'The service is temporarily unavailable. Try later'}\n        />\n      ) : (\n        <EditListOfPosts posts={posts} />\n      )}\n    </WrapRender>\n  );\n}\n"],"names":["EmptyPage","_ref","message","_jsxs","WrapEmpty","children","_jsx","className","GiSherlockHolmes","ModalWindow","onClose","content","useEffect","handleEscape","event","key","window","addEventListener","document","body","style","overflow","removeEventListener","WrapOverlayModal","onClick","WrapModal","e","stopPropagation","Post","post","WrapUserPost","WrapUser","WrapAvatar","UserName","BtnIcons","type","BsHandThumbsUpFill","CountLike","WrapPost","WrapMain","WrapImgPost","src","imageUrl","alt","title","WrapInfo","WrapTag","BsFillBookmarkFill","tag","WrapTitle","BsCircleFill","PostText","text","WrapReviews","BsChatRightTextFill","WrapComment","ForComment","BsSendFill","BsThreeDotsVertical","WrapCreate","styled","_templateObject","_taggedTemplateLiteral","FormPost","_templateObject2","base","WrapBtn","_templateObject3","WrapPostsList","_templateObject4","_templateObject5","_templateObject6","_templateObject7","_templateObject8","_templateObject9","_templateObject10","_templateObject11","_templateObject12","_templateObject13","_templateObject14","_templateObject15","_templateObject16","_templateObject17","_templateObject18","_templateObject19","_templateObject20","WrapEditList","_templateObject21","WrapItem","_templateObject22","WrapBtnEdit","_templateObject23","WrapEditPost","_templateObject24","BtnSave","_templateObject25","EditPost","data","onUpdatePost","id","_id","fields","_useState","useState","_useState2","_slicedToArray","setPost","onChangeField","field","value","prevState","_objectSpread","_defineProperty","autoComplete","name","onChange","target","htmlFor","rows","EditListOfPosts","posts","setId","_useState3","_useState4","showModal","setShowModal","useGetPostByIdQuery","_useUpdatePostMutatio","useUpdatePostMutation","updatePost","_useDeletePostMutatio","useDeletePostMutation","deletePost","onEdit","evt","onDelete","Arr","Array","isArray","length","map","nanoid","createPortal","EditPage","_useGetPostsQuery","useGetPostsQuery","error","WrapRender"],"sourceRoot":""}